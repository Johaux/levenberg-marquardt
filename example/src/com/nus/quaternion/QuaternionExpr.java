/******************************************************************************
 * Autogenerated by Derivative Code Generator (0.0.1)
 *
 * More information at https://github.com/truongduy134/derivative-code-generator
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 ******************************************************************************/

package com.nus.quaternion;

public class QuaternionExpr {
  public static double eval(double[] q, double[] p, double[] imgP) {
    double __temp_3 = -1.00000000000000 * imgP[0];
    double __temp_8 = Math.pow(q[1], 2.00000000000000);
    double __temp_9 = Math.pow(q[2], 2.00000000000000);
    double __temp_7 = __temp_8 + __temp_9;
    double __temp_6 = -2.00000000000000 * __temp_7;
    double __temp_5 = 1.00000000000000 + __temp_6;
    double __temp_4 = __temp_5 * p[0];
    double __temp_12 = q[0] * q[1];
    double __temp_13 = -1.00000000000000 * q[2] * q[3];
    double __temp_11 = __temp_12 + __temp_13;
    double __temp_10 = 2.00000000000000 * __temp_11 * p[1];
    double __temp_16 = q[0] * q[2];
    double __temp_17 = q[1] * q[3];
    double __temp_15 = __temp_16 + __temp_17;
    double __temp_14 = 2.00000000000000 * __temp_15 * p[2];
    double __temp_2 = __temp_3 + __temp_4 + __temp_10 + __temp_14;
    double __temp_1 = Math.pow(__temp_2, 2.00000000000000);
    double __temp_20 = -1.00000000000000 * imgP[1];
    double __temp_25 = Math.pow(q[0], 2.00000000000000);
    double __temp_26 = Math.pow(q[2], 2.00000000000000);
    double __temp_24 = __temp_25 + __temp_26;
    double __temp_23 = -2.00000000000000 * __temp_24;
    double __temp_22 = 1.00000000000000 + __temp_23;
    double __temp_21 = __temp_22 * p[1];
    double __temp_29 = q[0] * q[1];
    double __temp_30 = q[2] * q[3];
    double __temp_28 = __temp_29 + __temp_30;
    double __temp_27 = 2.00000000000000 * __temp_28 * p[0];
    double __temp_33 = q[1] * q[2];
    double __temp_34 = -1.00000000000000 * q[0] * q[3];
    double __temp_32 = __temp_33 + __temp_34;
    double __temp_31 = 2.00000000000000 * __temp_32 * p[2];
    double __temp_19 = __temp_20 + __temp_21 + __temp_27 + __temp_31;
    double __temp_18 = Math.pow(__temp_19, 2.00000000000000);
    double __temp_37 = -1.00000000000000 * imgP[2];
    double __temp_42 = Math.pow(q[0], 2.00000000000000);
    double __temp_43 = Math.pow(q[1], 2.00000000000000);
    double __temp_41 = __temp_42 + __temp_43;
    double __temp_40 = -2.00000000000000 * __temp_41;
    double __temp_39 = 1.00000000000000 + __temp_40;
    double __temp_38 = __temp_39 * p[2];
    double __temp_46 = q[0] * q[2];
    double __temp_47 = -1.00000000000000 * q[1] * q[3];
    double __temp_45 = __temp_46 + __temp_47;
    double __temp_44 = 2.00000000000000 * __temp_45 * p[0];
    double __temp_50 = q[0] * q[3];
    double __temp_51 = q[1] * q[2];
    double __temp_49 = __temp_50 + __temp_51;
    double __temp_48 = 2.00000000000000 * __temp_49 * p[1];
    double __temp_36 = __temp_37 + __temp_38 + __temp_44 + __temp_48;
    double __temp_35 = Math.pow(__temp_36, 2.00000000000000);
    double __temp_0 = __temp_1 + __temp_18 + __temp_35;
    return __temp_0;
  }

  public static double partialDerivative_0(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = -1.00000000000000 * q[2] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[1];
    double __temp_17 = q[0] * q[2];
    double __temp_18 = q[1] * q[3];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_20 = 2.00000000000000 * q[1] * p[1];
    double __temp_21 = 2.00000000000000 * q[2] * p[2];
    double __temp_19 = __temp_20 + __temp_21;
    double __temp_24 = -1.00000000000000 * imgP[0];
    double __temp_29 = Math.pow(q[1], 2.00000000000000);
    double __temp_30 = Math.pow(q[2], 2.00000000000000);
    double __temp_28 = __temp_29 + __temp_30;
    double __temp_27 = -2.00000000000000 * __temp_28;
    double __temp_26 = 1.00000000000000 + __temp_27;
    double __temp_25 = __temp_26 * p[0];
    double __temp_33 = q[0] * q[1];
    double __temp_34 = -1.00000000000000 * q[2] * q[3];
    double __temp_32 = __temp_33 + __temp_34;
    double __temp_31 = 2.00000000000000 * __temp_32 * p[1];
    double __temp_37 = q[0] * q[2];
    double __temp_38 = q[1] * q[3];
    double __temp_36 = __temp_37 + __temp_38;
    double __temp_35 = 2.00000000000000 * __temp_36 * p[2];
    double __temp_23 = __temp_24 + __temp_25 + __temp_31 + __temp_35;
    double __temp_22 = Math.pow(__temp_23, -1.00000000000000);
    double __temp_1 = 2.00000000000000 * __temp_2 * __temp_19 * __temp_22;
    double __temp_42 = -1.00000000000000 * imgP[1];
    double __temp_47 = Math.pow(q[0], 2.00000000000000);
    double __temp_48 = Math.pow(q[2], 2.00000000000000);
    double __temp_46 = __temp_47 + __temp_48;
    double __temp_45 = -2.00000000000000 * __temp_46;
    double __temp_44 = 1.00000000000000 + __temp_45;
    double __temp_43 = __temp_44 * p[1];
    double __temp_51 = q[0] * q[1];
    double __temp_52 = q[2] * q[3];
    double __temp_50 = __temp_51 + __temp_52;
    double __temp_49 = 2.00000000000000 * __temp_50 * p[0];
    double __temp_55 = q[1] * q[2];
    double __temp_56 = -1.00000000000000 * q[0] * q[3];
    double __temp_54 = __temp_55 + __temp_56;
    double __temp_53 = 2.00000000000000 * __temp_54 * p[2];
    double __temp_41 = __temp_42 + __temp_43 + __temp_49 + __temp_53;
    double __temp_40 = Math.pow(__temp_41, 2.00000000000000);
    double __temp_58 = -4.00000000000000 * q[0] * p[1];
    double __temp_59 = -2.00000000000000 * q[3] * p[2];
    double __temp_60 = 2.00000000000000 * q[1] * p[0];
    double __temp_57 = __temp_58 + __temp_59 + __temp_60;
    double __temp_63 = -1.00000000000000 * imgP[1];
    double __temp_68 = Math.pow(q[0], 2.00000000000000);
    double __temp_69 = Math.pow(q[2], 2.00000000000000);
    double __temp_67 = __temp_68 + __temp_69;
    double __temp_66 = -2.00000000000000 * __temp_67;
    double __temp_65 = 1.00000000000000 + __temp_66;
    double __temp_64 = __temp_65 * p[1];
    double __temp_72 = q[0] * q[1];
    double __temp_73 = q[2] * q[3];
    double __temp_71 = __temp_72 + __temp_73;
    double __temp_70 = 2.00000000000000 * __temp_71 * p[0];
    double __temp_76 = q[1] * q[2];
    double __temp_77 = -1.00000000000000 * q[0] * q[3];
    double __temp_75 = __temp_76 + __temp_77;
    double __temp_74 = 2.00000000000000 * __temp_75 * p[2];
    double __temp_62 = __temp_63 + __temp_64 + __temp_70 + __temp_74;
    double __temp_61 = Math.pow(__temp_62, -1.00000000000000);
    double __temp_39 = 2.00000000000000 * __temp_40 * __temp_57 * __temp_61;
    double __temp_81 = -1.00000000000000 * imgP[2];
    double __temp_86 = Math.pow(q[0], 2.00000000000000);
    double __temp_87 = Math.pow(q[1], 2.00000000000000);
    double __temp_85 = __temp_86 + __temp_87;
    double __temp_84 = -2.00000000000000 * __temp_85;
    double __temp_83 = 1.00000000000000 + __temp_84;
    double __temp_82 = __temp_83 * p[2];
    double __temp_90 = q[0] * q[2];
    double __temp_91 = -1.00000000000000 * q[1] * q[3];
    double __temp_89 = __temp_90 + __temp_91;
    double __temp_88 = 2.00000000000000 * __temp_89 * p[0];
    double __temp_94 = q[0] * q[3];
    double __temp_95 = q[1] * q[2];
    double __temp_93 = __temp_94 + __temp_95;
    double __temp_92 = 2.00000000000000 * __temp_93 * p[1];
    double __temp_80 = __temp_81 + __temp_82 + __temp_88 + __temp_92;
    double __temp_79 = Math.pow(__temp_80, 2.00000000000000);
    double __temp_97 = -4.00000000000000 * q[0] * p[2];
    double __temp_98 = 2.00000000000000 * q[2] * p[0];
    double __temp_99 = 2.00000000000000 * q[3] * p[1];
    double __temp_96 = __temp_97 + __temp_98 + __temp_99;
    double __temp_102 = -1.00000000000000 * imgP[2];
    double __temp_107 = Math.pow(q[0], 2.00000000000000);
    double __temp_108 = Math.pow(q[1], 2.00000000000000);
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = -2.00000000000000 * __temp_106;
    double __temp_104 = 1.00000000000000 + __temp_105;
    double __temp_103 = __temp_104 * p[2];
    double __temp_111 = q[0] * q[2];
    double __temp_112 = -1.00000000000000 * q[1] * q[3];
    double __temp_110 = __temp_111 + __temp_112;
    double __temp_109 = 2.00000000000000 * __temp_110 * p[0];
    double __temp_115 = q[0] * q[3];
    double __temp_116 = q[1] * q[2];
    double __temp_114 = __temp_115 + __temp_116;
    double __temp_113 = 2.00000000000000 * __temp_114 * p[1];
    double __temp_101 = __temp_102 + __temp_103 + __temp_109 + __temp_113;
    double __temp_100 = Math.pow(__temp_101, -1.00000000000000);
    double __temp_78 = 2.00000000000000 * __temp_79 * __temp_96 * __temp_100;
    double __temp_0 = __temp_1 + __temp_39 + __temp_78;
    return __temp_0;
  }

  public static double partialDerivative_1(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[2];
    double __temp_14 = q[1] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[2];
    double __temp_17 = q[1] * q[0];
    double __temp_18 = -1.00000000000000 * q[2] * q[3];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[1];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_20 = -4.00000000000000 * q[1] * p[0];
    double __temp_21 = 2.00000000000000 * q[0] * p[1];
    double __temp_22 = 2.00000000000000 * q[3] * p[2];
    double __temp_19 = __temp_20 + __temp_21 + __temp_22;
    double __temp_25 = -1.00000000000000 * imgP[0];
    double __temp_30 = Math.pow(q[1], 2.00000000000000);
    double __temp_31 = Math.pow(q[2], 2.00000000000000);
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = -2.00000000000000 * __temp_29;
    double __temp_27 = 1.00000000000000 + __temp_28;
    double __temp_26 = __temp_27 * p[0];
    double __temp_34 = q[0] * q[2];
    double __temp_35 = q[1] * q[3];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_38 = q[1] * q[0];
    double __temp_39 = -1.00000000000000 * q[2] * q[3];
    double __temp_37 = __temp_38 + __temp_39;
    double __temp_36 = 2.00000000000000 * __temp_37 * p[1];
    double __temp_24 = __temp_25 + __temp_26 + __temp_32 + __temp_36;
    double __temp_23 = Math.pow(__temp_24, -1.00000000000000);
    double __temp_1 = 2.00000000000000 * __temp_2 * __temp_19 * __temp_23;
    double __temp_43 = -1.00000000000000 * imgP[1];
    double __temp_48 = Math.pow(q[0], 2.00000000000000);
    double __temp_49 = Math.pow(q[2], 2.00000000000000);
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = -2.00000000000000 * __temp_47;
    double __temp_45 = 1.00000000000000 + __temp_46;
    double __temp_44 = __temp_45 * p[1];
    double __temp_52 = q[1] * q[0];
    double __temp_53 = q[2] * q[3];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[0];
    double __temp_56 = q[1] * q[2];
    double __temp_57 = -1.00000000000000 * q[0] * q[3];
    double __temp_55 = __temp_56 + __temp_57;
    double __temp_54 = 2.00000000000000 * __temp_55 * p[2];
    double __temp_42 = __temp_43 + __temp_44 + __temp_50 + __temp_54;
    double __temp_41 = Math.pow(__temp_42, 2.00000000000000);
    double __temp_59 = 2.00000000000000 * q[0] * p[0];
    double __temp_60 = 2.00000000000000 * q[2] * p[2];
    double __temp_58 = __temp_59 + __temp_60;
    double __temp_63 = -1.00000000000000 * imgP[1];
    double __temp_68 = Math.pow(q[0], 2.00000000000000);
    double __temp_69 = Math.pow(q[2], 2.00000000000000);
    double __temp_67 = __temp_68 + __temp_69;
    double __temp_66 = -2.00000000000000 * __temp_67;
    double __temp_65 = 1.00000000000000 + __temp_66;
    double __temp_64 = __temp_65 * p[1];
    double __temp_72 = q[1] * q[0];
    double __temp_73 = q[2] * q[3];
    double __temp_71 = __temp_72 + __temp_73;
    double __temp_70 = 2.00000000000000 * __temp_71 * p[0];
    double __temp_76 = q[1] * q[2];
    double __temp_77 = -1.00000000000000 * q[0] * q[3];
    double __temp_75 = __temp_76 + __temp_77;
    double __temp_74 = 2.00000000000000 * __temp_75 * p[2];
    double __temp_62 = __temp_63 + __temp_64 + __temp_70 + __temp_74;
    double __temp_61 = Math.pow(__temp_62, -1.00000000000000);
    double __temp_40 = 2.00000000000000 * __temp_41 * __temp_58 * __temp_61;
    double __temp_81 = -1.00000000000000 * imgP[2];
    double __temp_86 = Math.pow(q[0], 2.00000000000000);
    double __temp_87 = Math.pow(q[1], 2.00000000000000);
    double __temp_85 = __temp_86 + __temp_87;
    double __temp_84 = -2.00000000000000 * __temp_85;
    double __temp_83 = 1.00000000000000 + __temp_84;
    double __temp_82 = __temp_83 * p[2];
    double __temp_90 = q[0] * q[2];
    double __temp_91 = -1.00000000000000 * q[1] * q[3];
    double __temp_89 = __temp_90 + __temp_91;
    double __temp_88 = 2.00000000000000 * __temp_89 * p[0];
    double __temp_94 = q[0] * q[3];
    double __temp_95 = q[1] * q[2];
    double __temp_93 = __temp_94 + __temp_95;
    double __temp_92 = 2.00000000000000 * __temp_93 * p[1];
    double __temp_80 = __temp_81 + __temp_82 + __temp_88 + __temp_92;
    double __temp_79 = Math.pow(__temp_80, 2.00000000000000);
    double __temp_97 = -4.00000000000000 * q[1] * p[2];
    double __temp_98 = -2.00000000000000 * q[3] * p[0];
    double __temp_99 = 2.00000000000000 * q[2] * p[1];
    double __temp_96 = __temp_97 + __temp_98 + __temp_99;
    double __temp_102 = -1.00000000000000 * imgP[2];
    double __temp_107 = Math.pow(q[0], 2.00000000000000);
    double __temp_108 = Math.pow(q[1], 2.00000000000000);
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = -2.00000000000000 * __temp_106;
    double __temp_104 = 1.00000000000000 + __temp_105;
    double __temp_103 = __temp_104 * p[2];
    double __temp_111 = q[0] * q[2];
    double __temp_112 = -1.00000000000000 * q[1] * q[3];
    double __temp_110 = __temp_111 + __temp_112;
    double __temp_109 = 2.00000000000000 * __temp_110 * p[0];
    double __temp_115 = q[0] * q[3];
    double __temp_116 = q[1] * q[2];
    double __temp_114 = __temp_115 + __temp_116;
    double __temp_113 = 2.00000000000000 * __temp_114 * p[1];
    double __temp_101 = __temp_102 + __temp_103 + __temp_109 + __temp_113;
    double __temp_100 = Math.pow(__temp_101, -1.00000000000000);
    double __temp_78 = 2.00000000000000 * __temp_79 * __temp_96 * __temp_100;
    double __temp_0 = __temp_1 + __temp_40 + __temp_78;
    return __temp_0;
  }

  public static double partialDerivative_2(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = -1.00000000000000 * q[2] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[1];
    double __temp_17 = q[1] * q[3];
    double __temp_18 = q[2] * q[0];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_20 = -4.00000000000000 * q[2] * p[0];
    double __temp_21 = -2.00000000000000 * q[3] * p[1];
    double __temp_22 = 2.00000000000000 * q[0] * p[2];
    double __temp_19 = __temp_20 + __temp_21 + __temp_22;
    double __temp_25 = -1.00000000000000 * imgP[0];
    double __temp_30 = Math.pow(q[1], 2.00000000000000);
    double __temp_31 = Math.pow(q[2], 2.00000000000000);
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = -2.00000000000000 * __temp_29;
    double __temp_27 = 1.00000000000000 + __temp_28;
    double __temp_26 = __temp_27 * p[0];
    double __temp_34 = q[0] * q[1];
    double __temp_35 = -1.00000000000000 * q[2] * q[3];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[1];
    double __temp_38 = q[1] * q[3];
    double __temp_39 = q[2] * q[0];
    double __temp_37 = __temp_38 + __temp_39;
    double __temp_36 = 2.00000000000000 * __temp_37 * p[2];
    double __temp_24 = __temp_25 + __temp_26 + __temp_32 + __temp_36;
    double __temp_23 = Math.pow(__temp_24, -1.00000000000000);
    double __temp_1 = 2.00000000000000 * __temp_2 * __temp_19 * __temp_23;
    double __temp_43 = -1.00000000000000 * imgP[1];
    double __temp_48 = Math.pow(q[0], 2.00000000000000);
    double __temp_49 = Math.pow(q[2], 2.00000000000000);
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = -2.00000000000000 * __temp_47;
    double __temp_45 = 1.00000000000000 + __temp_46;
    double __temp_44 = __temp_45 * p[1];
    double __temp_52 = q[0] * q[1];
    double __temp_53 = q[2] * q[3];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[0];
    double __temp_56 = q[2] * q[1];
    double __temp_57 = -1.00000000000000 * q[0] * q[3];
    double __temp_55 = __temp_56 + __temp_57;
    double __temp_54 = 2.00000000000000 * __temp_55 * p[2];
    double __temp_42 = __temp_43 + __temp_44 + __temp_50 + __temp_54;
    double __temp_41 = Math.pow(__temp_42, 2.00000000000000);
    double __temp_59 = -4.00000000000000 * q[2] * p[1];
    double __temp_60 = 2.00000000000000 * q[1] * p[2];
    double __temp_61 = 2.00000000000000 * q[3] * p[0];
    double __temp_58 = __temp_59 + __temp_60 + __temp_61;
    double __temp_64 = -1.00000000000000 * imgP[1];
    double __temp_69 = Math.pow(q[0], 2.00000000000000);
    double __temp_70 = Math.pow(q[2], 2.00000000000000);
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = -2.00000000000000 * __temp_68;
    double __temp_66 = 1.00000000000000 + __temp_67;
    double __temp_65 = __temp_66 * p[1];
    double __temp_73 = q[0] * q[1];
    double __temp_74 = q[2] * q[3];
    double __temp_72 = __temp_73 + __temp_74;
    double __temp_71 = 2.00000000000000 * __temp_72 * p[0];
    double __temp_77 = q[2] * q[1];
    double __temp_78 = -1.00000000000000 * q[0] * q[3];
    double __temp_76 = __temp_77 + __temp_78;
    double __temp_75 = 2.00000000000000 * __temp_76 * p[2];
    double __temp_63 = __temp_64 + __temp_65 + __temp_71 + __temp_75;
    double __temp_62 = Math.pow(__temp_63, -1.00000000000000);
    double __temp_40 = 2.00000000000000 * __temp_41 * __temp_58 * __temp_62;
    double __temp_82 = -1.00000000000000 * imgP[2];
    double __temp_87 = Math.pow(q[0], 2.00000000000000);
    double __temp_88 = Math.pow(q[1], 2.00000000000000);
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = -2.00000000000000 * __temp_86;
    double __temp_84 = 1.00000000000000 + __temp_85;
    double __temp_83 = __temp_84 * p[2];
    double __temp_91 = q[0] * q[3];
    double __temp_92 = q[2] * q[1];
    double __temp_90 = __temp_91 + __temp_92;
    double __temp_89 = 2.00000000000000 * __temp_90 * p[1];
    double __temp_95 = q[2] * q[0];
    double __temp_96 = -1.00000000000000 * q[1] * q[3];
    double __temp_94 = __temp_95 + __temp_96;
    double __temp_93 = 2.00000000000000 * __temp_94 * p[0];
    double __temp_81 = __temp_82 + __temp_83 + __temp_89 + __temp_93;
    double __temp_80 = Math.pow(__temp_81, 2.00000000000000);
    double __temp_98 = 2.00000000000000 * q[0] * p[0];
    double __temp_99 = 2.00000000000000 * q[1] * p[1];
    double __temp_97 = __temp_98 + __temp_99;
    double __temp_102 = -1.00000000000000 * imgP[2];
    double __temp_107 = Math.pow(q[0], 2.00000000000000);
    double __temp_108 = Math.pow(q[1], 2.00000000000000);
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = -2.00000000000000 * __temp_106;
    double __temp_104 = 1.00000000000000 + __temp_105;
    double __temp_103 = __temp_104 * p[2];
    double __temp_111 = q[0] * q[3];
    double __temp_112 = q[2] * q[1];
    double __temp_110 = __temp_111 + __temp_112;
    double __temp_109 = 2.00000000000000 * __temp_110 * p[1];
    double __temp_115 = q[2] * q[0];
    double __temp_116 = -1.00000000000000 * q[1] * q[3];
    double __temp_114 = __temp_115 + __temp_116;
    double __temp_113 = 2.00000000000000 * __temp_114 * p[0];
    double __temp_101 = __temp_102 + __temp_103 + __temp_109 + __temp_113;
    double __temp_100 = Math.pow(__temp_101, -1.00000000000000);
    double __temp_79 = 2.00000000000000 * __temp_80 * __temp_97 * __temp_100;
    double __temp_0 = __temp_1 + __temp_40 + __temp_79;
    return __temp_0;
  }

  public static double partialDerivative_3(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = -1.00000000000000 * q[3] * q[2];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[1];
    double __temp_17 = q[0] * q[2];
    double __temp_18 = q[3] * q[1];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_20 = -2.00000000000000 * q[2] * p[1];
    double __temp_21 = 2.00000000000000 * q[1] * p[2];
    double __temp_19 = __temp_20 + __temp_21;
    double __temp_24 = -1.00000000000000 * imgP[0];
    double __temp_29 = Math.pow(q[1], 2.00000000000000);
    double __temp_30 = Math.pow(q[2], 2.00000000000000);
    double __temp_28 = __temp_29 + __temp_30;
    double __temp_27 = -2.00000000000000 * __temp_28;
    double __temp_26 = 1.00000000000000 + __temp_27;
    double __temp_25 = __temp_26 * p[0];
    double __temp_33 = q[0] * q[1];
    double __temp_34 = -1.00000000000000 * q[3] * q[2];
    double __temp_32 = __temp_33 + __temp_34;
    double __temp_31 = 2.00000000000000 * __temp_32 * p[1];
    double __temp_37 = q[0] * q[2];
    double __temp_38 = q[3] * q[1];
    double __temp_36 = __temp_37 + __temp_38;
    double __temp_35 = 2.00000000000000 * __temp_36 * p[2];
    double __temp_23 = __temp_24 + __temp_25 + __temp_31 + __temp_35;
    double __temp_22 = Math.pow(__temp_23, -1.00000000000000);
    double __temp_1 = 2.00000000000000 * __temp_2 * __temp_19 * __temp_22;
    double __temp_42 = -1.00000000000000 * imgP[1];
    double __temp_47 = Math.pow(q[0], 2.00000000000000);
    double __temp_48 = Math.pow(q[2], 2.00000000000000);
    double __temp_46 = __temp_47 + __temp_48;
    double __temp_45 = -2.00000000000000 * __temp_46;
    double __temp_44 = 1.00000000000000 + __temp_45;
    double __temp_43 = __temp_44 * p[1];
    double __temp_51 = q[0] * q[1];
    double __temp_52 = q[3] * q[2];
    double __temp_50 = __temp_51 + __temp_52;
    double __temp_49 = 2.00000000000000 * __temp_50 * p[0];
    double __temp_55 = q[1] * q[2];
    double __temp_56 = -1.00000000000000 * q[3] * q[0];
    double __temp_54 = __temp_55 + __temp_56;
    double __temp_53 = 2.00000000000000 * __temp_54 * p[2];
    double __temp_41 = __temp_42 + __temp_43 + __temp_49 + __temp_53;
    double __temp_40 = Math.pow(__temp_41, 2.00000000000000);
    double __temp_58 = -2.00000000000000 * q[0] * p[2];
    double __temp_59 = 2.00000000000000 * q[2] * p[0];
    double __temp_57 = __temp_58 + __temp_59;
    double __temp_62 = -1.00000000000000 * imgP[1];
    double __temp_67 = Math.pow(q[0], 2.00000000000000);
    double __temp_68 = Math.pow(q[2], 2.00000000000000);
    double __temp_66 = __temp_67 + __temp_68;
    double __temp_65 = -2.00000000000000 * __temp_66;
    double __temp_64 = 1.00000000000000 + __temp_65;
    double __temp_63 = __temp_64 * p[1];
    double __temp_71 = q[0] * q[1];
    double __temp_72 = q[3] * q[2];
    double __temp_70 = __temp_71 + __temp_72;
    double __temp_69 = 2.00000000000000 * __temp_70 * p[0];
    double __temp_75 = q[1] * q[2];
    double __temp_76 = -1.00000000000000 * q[3] * q[0];
    double __temp_74 = __temp_75 + __temp_76;
    double __temp_73 = 2.00000000000000 * __temp_74 * p[2];
    double __temp_61 = __temp_62 + __temp_63 + __temp_69 + __temp_73;
    double __temp_60 = Math.pow(__temp_61, -1.00000000000000);
    double __temp_39 = 2.00000000000000 * __temp_40 * __temp_57 * __temp_60;
    double __temp_80 = -1.00000000000000 * imgP[2];
    double __temp_85 = Math.pow(q[0], 2.00000000000000);
    double __temp_86 = Math.pow(q[1], 2.00000000000000);
    double __temp_84 = __temp_85 + __temp_86;
    double __temp_83 = -2.00000000000000 * __temp_84;
    double __temp_82 = 1.00000000000000 + __temp_83;
    double __temp_81 = __temp_82 * p[2];
    double __temp_89 = q[0] * q[2];
    double __temp_90 = -1.00000000000000 * q[3] * q[1];
    double __temp_88 = __temp_89 + __temp_90;
    double __temp_87 = 2.00000000000000 * __temp_88 * p[0];
    double __temp_93 = q[1] * q[2];
    double __temp_94 = q[3] * q[0];
    double __temp_92 = __temp_93 + __temp_94;
    double __temp_91 = 2.00000000000000 * __temp_92 * p[1];
    double __temp_79 = __temp_80 + __temp_81 + __temp_87 + __temp_91;
    double __temp_78 = Math.pow(__temp_79, 2.00000000000000);
    double __temp_96 = -2.00000000000000 * q[1] * p[0];
    double __temp_97 = 2.00000000000000 * q[0] * p[1];
    double __temp_95 = __temp_96 + __temp_97;
    double __temp_100 = -1.00000000000000 * imgP[2];
    double __temp_105 = Math.pow(q[0], 2.00000000000000);
    double __temp_106 = Math.pow(q[1], 2.00000000000000);
    double __temp_104 = __temp_105 + __temp_106;
    double __temp_103 = -2.00000000000000 * __temp_104;
    double __temp_102 = 1.00000000000000 + __temp_103;
    double __temp_101 = __temp_102 * p[2];
    double __temp_109 = q[0] * q[2];
    double __temp_110 = -1.00000000000000 * q[3] * q[1];
    double __temp_108 = __temp_109 + __temp_110;
    double __temp_107 = 2.00000000000000 * __temp_108 * p[0];
    double __temp_113 = q[1] * q[2];
    double __temp_114 = q[3] * q[0];
    double __temp_112 = __temp_113 + __temp_114;
    double __temp_111 = 2.00000000000000 * __temp_112 * p[1];
    double __temp_99 = __temp_100 + __temp_101 + __temp_107 + __temp_111;
    double __temp_98 = Math.pow(__temp_99, -1.00000000000000);
    double __temp_77 = 2.00000000000000 * __temp_78 * __temp_95 * __temp_98;
    double __temp_0 = __temp_1 + __temp_39 + __temp_77;
    return __temp_0;
  }

  public static double[] jacobian(double[] q, double[] p, double[] imgP) {
    double[] __temp = new double[4];
    __temp[0] = partialDerivative_0(q, p, imgP);
    __temp[1] = partialDerivative_1(q, p, imgP);
    __temp[2] = partialDerivative_2(q, p, imgP);
    __temp[3] = partialDerivative_3(q, p, imgP);
    return __temp;
  }
  public static double partialDerivative_0_0(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[1];
    double __temp_9 = Math.pow(q[0], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[1];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = q[2] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[0];
    double __temp_17 = q[1] * q[2];
    double __temp_18 = -1.00000000000000 * q[0] * q[3];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[1];
    double __temp_26 = Math.pow(q[0], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[1];
    double __temp_30 = q[0] * q[1];
    double __temp_31 = q[2] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[0];
    double __temp_34 = q[1] * q[2];
    double __temp_35 = -1.00000000000000 * q[0] * q[3];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = -8.00000000000000 * __temp_2 * p[1] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[2];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[1], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[2];
    double __temp_48 = q[0] * q[2];
    double __temp_49 = -1.00000000000000 * q[1] * q[3];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[0];
    double __temp_52 = q[0] * q[3];
    double __temp_53 = q[1] * q[2];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[1];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[2];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[1], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[2];
    double __temp_65 = q[0] * q[2];
    double __temp_66 = -1.00000000000000 * q[1] * q[3];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[0];
    double __temp_69 = q[0] * q[3];
    double __temp_70 = q[1] * q[2];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[1];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = -8.00000000000000 * __temp_37 * p[2] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[1];
    double __temp_84 = -1.00000000000000 * q[2] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[0] * q[2];
    double __temp_88 = q[1] * q[3];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = 2.00000000000000 * q[1] * p[1];
    double __temp_91 = 2.00000000000000 * q[2] * p[2];
    double __temp_89 = __temp_90 + __temp_91;
    double __temp_94 = -1.00000000000000 * imgP[0];
    double __temp_99 = Math.pow(q[1], 2.00000000000000);
    double __temp_100 = Math.pow(q[2], 2.00000000000000);
    double __temp_98 = __temp_99 + __temp_100;
    double __temp_97 = -2.00000000000000 * __temp_98;
    double __temp_96 = 1.00000000000000 + __temp_97;
    double __temp_95 = __temp_96 * p[0];
    double __temp_103 = q[0] * q[1];
    double __temp_104 = -1.00000000000000 * q[2] * q[3];
    double __temp_102 = __temp_103 + __temp_104;
    double __temp_101 = 2.00000000000000 * __temp_102 * p[1];
    double __temp_107 = q[0] * q[2];
    double __temp_108 = q[1] * q[3];
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = 2.00000000000000 * __temp_106 * p[2];
    double __temp_93 = __temp_94 + __temp_95 + __temp_101 + __temp_105;
    double __temp_92 = Math.pow(__temp_93, -1.00000000000000);
    double __temp_110 = 2.00000000000000 * q[1] * p[1];
    double __temp_111 = 2.00000000000000 * q[2] * p[2];
    double __temp_109 = __temp_110 + __temp_111;
    double __temp_114 = -1.00000000000000 * imgP[0];
    double __temp_119 = Math.pow(q[1], 2.00000000000000);
    double __temp_120 = Math.pow(q[2], 2.00000000000000);
    double __temp_118 = __temp_119 + __temp_120;
    double __temp_117 = -2.00000000000000 * __temp_118;
    double __temp_116 = 1.00000000000000 + __temp_117;
    double __temp_115 = __temp_116 * p[0];
    double __temp_123 = q[0] * q[1];
    double __temp_124 = -1.00000000000000 * q[2] * q[3];
    double __temp_122 = __temp_123 + __temp_124;
    double __temp_121 = 2.00000000000000 * __temp_122 * p[1];
    double __temp_127 = q[0] * q[2];
    double __temp_128 = q[1] * q[3];
    double __temp_126 = __temp_127 + __temp_128;
    double __temp_125 = 2.00000000000000 * __temp_126 * p[2];
    double __temp_113 = __temp_114 + __temp_115 + __temp_121 + __temp_125;
    double __temp_112 = Math.pow(__temp_113, -1.00000000000000);
    double __temp_71 = 2.00000000000000 * __temp_72 * __temp_89 * __temp_92 * __temp_109 * __temp_112;
    double __temp_132 = -1.00000000000000 * imgP[1];
    double __temp_137 = Math.pow(q[0], 2.00000000000000);
    double __temp_138 = Math.pow(q[2], 2.00000000000000);
    double __temp_136 = __temp_137 + __temp_138;
    double __temp_135 = -2.00000000000000 * __temp_136;
    double __temp_134 = 1.00000000000000 + __temp_135;
    double __temp_133 = __temp_134 * p[1];
    double __temp_141 = q[0] * q[1];
    double __temp_142 = q[2] * q[3];
    double __temp_140 = __temp_141 + __temp_142;
    double __temp_139 = 2.00000000000000 * __temp_140 * p[0];
    double __temp_145 = q[1] * q[2];
    double __temp_146 = -1.00000000000000 * q[0] * q[3];
    double __temp_144 = __temp_145 + __temp_146;
    double __temp_143 = 2.00000000000000 * __temp_144 * p[2];
    double __temp_131 = __temp_132 + __temp_133 + __temp_139 + __temp_143;
    double __temp_130 = Math.pow(__temp_131, 2.00000000000000);
    double __temp_148 = -4.00000000000000 * q[0] * p[1];
    double __temp_149 = -2.00000000000000 * q[3] * p[2];
    double __temp_150 = 2.00000000000000 * q[1] * p[0];
    double __temp_147 = __temp_148 + __temp_149 + __temp_150;
    double __temp_153 = -1.00000000000000 * imgP[1];
    double __temp_158 = Math.pow(q[0], 2.00000000000000);
    double __temp_159 = Math.pow(q[2], 2.00000000000000);
    double __temp_157 = __temp_158 + __temp_159;
    double __temp_156 = -2.00000000000000 * __temp_157;
    double __temp_155 = 1.00000000000000 + __temp_156;
    double __temp_154 = __temp_155 * p[1];
    double __temp_162 = q[0] * q[1];
    double __temp_163 = q[2] * q[3];
    double __temp_161 = __temp_162 + __temp_163;
    double __temp_160 = 2.00000000000000 * __temp_161 * p[0];
    double __temp_166 = q[1] * q[2];
    double __temp_167 = -1.00000000000000 * q[0] * q[3];
    double __temp_165 = __temp_166 + __temp_167;
    double __temp_164 = 2.00000000000000 * __temp_165 * p[2];
    double __temp_152 = __temp_153 + __temp_154 + __temp_160 + __temp_164;
    double __temp_151 = Math.pow(__temp_152, -1.00000000000000);
    double __temp_169 = -4.00000000000000 * q[0] * p[1];
    double __temp_170 = -2.00000000000000 * q[3] * p[2];
    double __temp_171 = 2.00000000000000 * q[1] * p[0];
    double __temp_168 = __temp_169 + __temp_170 + __temp_171;
    double __temp_174 = -1.00000000000000 * imgP[1];
    double __temp_179 = Math.pow(q[0], 2.00000000000000);
    double __temp_180 = Math.pow(q[2], 2.00000000000000);
    double __temp_178 = __temp_179 + __temp_180;
    double __temp_177 = -2.00000000000000 * __temp_178;
    double __temp_176 = 1.00000000000000 + __temp_177;
    double __temp_175 = __temp_176 * p[1];
    double __temp_183 = q[0] * q[1];
    double __temp_184 = q[2] * q[3];
    double __temp_182 = __temp_183 + __temp_184;
    double __temp_181 = 2.00000000000000 * __temp_182 * p[0];
    double __temp_187 = q[1] * q[2];
    double __temp_188 = -1.00000000000000 * q[0] * q[3];
    double __temp_186 = __temp_187 + __temp_188;
    double __temp_185 = 2.00000000000000 * __temp_186 * p[2];
    double __temp_173 = __temp_174 + __temp_175 + __temp_181 + __temp_185;
    double __temp_172 = Math.pow(__temp_173, -1.00000000000000);
    double __temp_129 = 2.00000000000000 * __temp_130 * __temp_147 * __temp_151 * __temp_168 * __temp_172;
    double __temp_192 = -1.00000000000000 * imgP[2];
    double __temp_197 = Math.pow(q[0], 2.00000000000000);
    double __temp_198 = Math.pow(q[1], 2.00000000000000);
    double __temp_196 = __temp_197 + __temp_198;
    double __temp_195 = -2.00000000000000 * __temp_196;
    double __temp_194 = 1.00000000000000 + __temp_195;
    double __temp_193 = __temp_194 * p[2];
    double __temp_201 = q[0] * q[2];
    double __temp_202 = -1.00000000000000 * q[1] * q[3];
    double __temp_200 = __temp_201 + __temp_202;
    double __temp_199 = 2.00000000000000 * __temp_200 * p[0];
    double __temp_205 = q[0] * q[3];
    double __temp_206 = q[1] * q[2];
    double __temp_204 = __temp_205 + __temp_206;
    double __temp_203 = 2.00000000000000 * __temp_204 * p[1];
    double __temp_191 = __temp_192 + __temp_193 + __temp_199 + __temp_203;
    double __temp_190 = Math.pow(__temp_191, 2.00000000000000);
    double __temp_208 = -4.00000000000000 * q[0] * p[2];
    double __temp_209 = 2.00000000000000 * q[2] * p[0];
    double __temp_210 = 2.00000000000000 * q[3] * p[1];
    double __temp_207 = __temp_208 + __temp_209 + __temp_210;
    double __temp_213 = -1.00000000000000 * imgP[2];
    double __temp_218 = Math.pow(q[0], 2.00000000000000);
    double __temp_219 = Math.pow(q[1], 2.00000000000000);
    double __temp_217 = __temp_218 + __temp_219;
    double __temp_216 = -2.00000000000000 * __temp_217;
    double __temp_215 = 1.00000000000000 + __temp_216;
    double __temp_214 = __temp_215 * p[2];
    double __temp_222 = q[0] * q[2];
    double __temp_223 = -1.00000000000000 * q[1] * q[3];
    double __temp_221 = __temp_222 + __temp_223;
    double __temp_220 = 2.00000000000000 * __temp_221 * p[0];
    double __temp_226 = q[0] * q[3];
    double __temp_227 = q[1] * q[2];
    double __temp_225 = __temp_226 + __temp_227;
    double __temp_224 = 2.00000000000000 * __temp_225 * p[1];
    double __temp_212 = __temp_213 + __temp_214 + __temp_220 + __temp_224;
    double __temp_211 = Math.pow(__temp_212, -1.00000000000000);
    double __temp_229 = -4.00000000000000 * q[0] * p[2];
    double __temp_230 = 2.00000000000000 * q[2] * p[0];
    double __temp_231 = 2.00000000000000 * q[3] * p[1];
    double __temp_228 = __temp_229 + __temp_230 + __temp_231;
    double __temp_234 = -1.00000000000000 * imgP[2];
    double __temp_239 = Math.pow(q[0], 2.00000000000000);
    double __temp_240 = Math.pow(q[1], 2.00000000000000);
    double __temp_238 = __temp_239 + __temp_240;
    double __temp_237 = -2.00000000000000 * __temp_238;
    double __temp_236 = 1.00000000000000 + __temp_237;
    double __temp_235 = __temp_236 * p[2];
    double __temp_243 = q[0] * q[2];
    double __temp_244 = -1.00000000000000 * q[1] * q[3];
    double __temp_242 = __temp_243 + __temp_244;
    double __temp_241 = 2.00000000000000 * __temp_242 * p[0];
    double __temp_247 = q[0] * q[3];
    double __temp_248 = q[1] * q[2];
    double __temp_246 = __temp_247 + __temp_248;
    double __temp_245 = 2.00000000000000 * __temp_246 * p[1];
    double __temp_233 = __temp_234 + __temp_235 + __temp_241 + __temp_245;
    double __temp_232 = Math.pow(__temp_233, -1.00000000000000);
    double __temp_189 = 2.00000000000000 * __temp_190 * __temp_207 * __temp_211 * __temp_228 * __temp_232;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_129 + __temp_189;
    return __temp_0;
  }

  public static double partialDerivative_0_1(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[2];
    double __temp_14 = q[1] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[2];
    double __temp_17 = q[1] * q[0];
    double __temp_18 = -1.00000000000000 * q[2] * q[3];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[1];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[0];
    double __temp_26 = Math.pow(q[1], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[0];
    double __temp_30 = q[0] * q[2];
    double __temp_31 = q[1] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[2];
    double __temp_34 = q[1] * q[0];
    double __temp_35 = -1.00000000000000 * q[2] * q[3];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[1];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = 4.00000000000000 * __temp_2 * p[1] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[1];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[2], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[1];
    double __temp_48 = q[1] * q[0];
    double __temp_49 = q[2] * q[3];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[0];
    double __temp_52 = q[1] * q[2];
    double __temp_53 = -1.00000000000000 * q[0] * q[3];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[2];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[1];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[2], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[1];
    double __temp_65 = q[1] * q[0];
    double __temp_66 = q[2] * q[3];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[0];
    double __temp_69 = q[1] * q[2];
    double __temp_70 = -1.00000000000000 * q[0] * q[3];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[2];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[0] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[2];
    double __temp_84 = q[1] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[2];
    double __temp_87 = q[1] * q[0];
    double __temp_88 = -1.00000000000000 * q[2] * q[3];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[1];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = 2.00000000000000 * q[1] * p[1];
    double __temp_91 = 2.00000000000000 * q[2] * p[2];
    double __temp_89 = __temp_90 + __temp_91;
    double __temp_94 = -1.00000000000000 * imgP[0];
    double __temp_99 = Math.pow(q[1], 2.00000000000000);
    double __temp_100 = Math.pow(q[2], 2.00000000000000);
    double __temp_98 = __temp_99 + __temp_100;
    double __temp_97 = -2.00000000000000 * __temp_98;
    double __temp_96 = 1.00000000000000 + __temp_97;
    double __temp_95 = __temp_96 * p[0];
    double __temp_103 = q[0] * q[2];
    double __temp_104 = q[1] * q[3];
    double __temp_102 = __temp_103 + __temp_104;
    double __temp_101 = 2.00000000000000 * __temp_102 * p[2];
    double __temp_107 = q[1] * q[0];
    double __temp_108 = -1.00000000000000 * q[2] * q[3];
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = 2.00000000000000 * __temp_106 * p[1];
    double __temp_93 = __temp_94 + __temp_95 + __temp_101 + __temp_105;
    double __temp_92 = Math.pow(__temp_93, -1.00000000000000);
    double __temp_110 = -4.00000000000000 * q[1] * p[0];
    double __temp_111 = 2.00000000000000 * q[0] * p[1];
    double __temp_112 = 2.00000000000000 * q[3] * p[2];
    double __temp_109 = __temp_110 + __temp_111 + __temp_112;
    double __temp_115 = -1.00000000000000 * imgP[0];
    double __temp_120 = Math.pow(q[1], 2.00000000000000);
    double __temp_121 = Math.pow(q[2], 2.00000000000000);
    double __temp_119 = __temp_120 + __temp_121;
    double __temp_118 = -2.00000000000000 * __temp_119;
    double __temp_117 = 1.00000000000000 + __temp_118;
    double __temp_116 = __temp_117 * p[0];
    double __temp_124 = q[0] * q[2];
    double __temp_125 = q[1] * q[3];
    double __temp_123 = __temp_124 + __temp_125;
    double __temp_122 = 2.00000000000000 * __temp_123 * p[2];
    double __temp_128 = q[1] * q[0];
    double __temp_129 = -1.00000000000000 * q[2] * q[3];
    double __temp_127 = __temp_128 + __temp_129;
    double __temp_126 = 2.00000000000000 * __temp_127 * p[1];
    double __temp_114 = __temp_115 + __temp_116 + __temp_122 + __temp_126;
    double __temp_113 = Math.pow(__temp_114, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_92 * __temp_109 * __temp_113;
    double __temp_133 = -1.00000000000000 * imgP[1];
    double __temp_138 = Math.pow(q[0], 2.00000000000000);
    double __temp_139 = Math.pow(q[2], 2.00000000000000);
    double __temp_137 = __temp_138 + __temp_139;
    double __temp_136 = -2.00000000000000 * __temp_137;
    double __temp_135 = 1.00000000000000 + __temp_136;
    double __temp_134 = __temp_135 * p[1];
    double __temp_142 = q[1] * q[0];
    double __temp_143 = q[2] * q[3];
    double __temp_141 = __temp_142 + __temp_143;
    double __temp_140 = 2.00000000000000 * __temp_141 * p[0];
    double __temp_146 = q[1] * q[2];
    double __temp_147 = -1.00000000000000 * q[0] * q[3];
    double __temp_145 = __temp_146 + __temp_147;
    double __temp_144 = 2.00000000000000 * __temp_145 * p[2];
    double __temp_132 = __temp_133 + __temp_134 + __temp_140 + __temp_144;
    double __temp_131 = Math.pow(__temp_132, 2.00000000000000);
    double __temp_149 = -4.00000000000000 * q[0] * p[1];
    double __temp_150 = -2.00000000000000 * q[3] * p[2];
    double __temp_151 = 2.00000000000000 * q[1] * p[0];
    double __temp_148 = __temp_149 + __temp_150 + __temp_151;
    double __temp_154 = -1.00000000000000 * imgP[1];
    double __temp_159 = Math.pow(q[0], 2.00000000000000);
    double __temp_160 = Math.pow(q[2], 2.00000000000000);
    double __temp_158 = __temp_159 + __temp_160;
    double __temp_157 = -2.00000000000000 * __temp_158;
    double __temp_156 = 1.00000000000000 + __temp_157;
    double __temp_155 = __temp_156 * p[1];
    double __temp_163 = q[1] * q[0];
    double __temp_164 = q[2] * q[3];
    double __temp_162 = __temp_163 + __temp_164;
    double __temp_161 = 2.00000000000000 * __temp_162 * p[0];
    double __temp_167 = q[1] * q[2];
    double __temp_168 = -1.00000000000000 * q[0] * q[3];
    double __temp_166 = __temp_167 + __temp_168;
    double __temp_165 = 2.00000000000000 * __temp_166 * p[2];
    double __temp_153 = __temp_154 + __temp_155 + __temp_161 + __temp_165;
    double __temp_152 = Math.pow(__temp_153, -1.00000000000000);
    double __temp_170 = 2.00000000000000 * q[0] * p[0];
    double __temp_171 = 2.00000000000000 * q[2] * p[2];
    double __temp_169 = __temp_170 + __temp_171;
    double __temp_174 = -1.00000000000000 * imgP[1];
    double __temp_179 = Math.pow(q[0], 2.00000000000000);
    double __temp_180 = Math.pow(q[2], 2.00000000000000);
    double __temp_178 = __temp_179 + __temp_180;
    double __temp_177 = -2.00000000000000 * __temp_178;
    double __temp_176 = 1.00000000000000 + __temp_177;
    double __temp_175 = __temp_176 * p[1];
    double __temp_183 = q[1] * q[0];
    double __temp_184 = q[2] * q[3];
    double __temp_182 = __temp_183 + __temp_184;
    double __temp_181 = 2.00000000000000 * __temp_182 * p[0];
    double __temp_187 = q[1] * q[2];
    double __temp_188 = -1.00000000000000 * q[0] * q[3];
    double __temp_186 = __temp_187 + __temp_188;
    double __temp_185 = 2.00000000000000 * __temp_186 * p[2];
    double __temp_173 = __temp_174 + __temp_175 + __temp_181 + __temp_185;
    double __temp_172 = Math.pow(__temp_173, -1.00000000000000);
    double __temp_130 = -2.00000000000000 * __temp_131 * __temp_148 * __temp_152 * __temp_169 * __temp_172;
    double __temp_192 = -1.00000000000000 * imgP[2];
    double __temp_197 = Math.pow(q[0], 2.00000000000000);
    double __temp_198 = Math.pow(q[1], 2.00000000000000);
    double __temp_196 = __temp_197 + __temp_198;
    double __temp_195 = -2.00000000000000 * __temp_196;
    double __temp_194 = 1.00000000000000 + __temp_195;
    double __temp_193 = __temp_194 * p[2];
    double __temp_201 = q[0] * q[2];
    double __temp_202 = -1.00000000000000 * q[1] * q[3];
    double __temp_200 = __temp_201 + __temp_202;
    double __temp_199 = 2.00000000000000 * __temp_200 * p[0];
    double __temp_205 = q[0] * q[3];
    double __temp_206 = q[1] * q[2];
    double __temp_204 = __temp_205 + __temp_206;
    double __temp_203 = 2.00000000000000 * __temp_204 * p[1];
    double __temp_191 = __temp_192 + __temp_193 + __temp_199 + __temp_203;
    double __temp_190 = Math.pow(__temp_191, 2.00000000000000);
    double __temp_208 = -4.00000000000000 * q[0] * p[2];
    double __temp_209 = 2.00000000000000 * q[2] * p[0];
    double __temp_210 = 2.00000000000000 * q[3] * p[1];
    double __temp_207 = __temp_208 + __temp_209 + __temp_210;
    double __temp_213 = -1.00000000000000 * imgP[2];
    double __temp_218 = Math.pow(q[0], 2.00000000000000);
    double __temp_219 = Math.pow(q[1], 2.00000000000000);
    double __temp_217 = __temp_218 + __temp_219;
    double __temp_216 = -2.00000000000000 * __temp_217;
    double __temp_215 = 1.00000000000000 + __temp_216;
    double __temp_214 = __temp_215 * p[2];
    double __temp_222 = q[0] * q[2];
    double __temp_223 = -1.00000000000000 * q[1] * q[3];
    double __temp_221 = __temp_222 + __temp_223;
    double __temp_220 = 2.00000000000000 * __temp_221 * p[0];
    double __temp_226 = q[0] * q[3];
    double __temp_227 = q[1] * q[2];
    double __temp_225 = __temp_226 + __temp_227;
    double __temp_224 = 2.00000000000000 * __temp_225 * p[1];
    double __temp_212 = __temp_213 + __temp_214 + __temp_220 + __temp_224;
    double __temp_211 = Math.pow(__temp_212, -1.00000000000000);
    double __temp_229 = -4.00000000000000 * q[1] * p[2];
    double __temp_230 = -2.00000000000000 * q[3] * p[0];
    double __temp_231 = 2.00000000000000 * q[2] * p[1];
    double __temp_228 = __temp_229 + __temp_230 + __temp_231;
    double __temp_234 = -1.00000000000000 * imgP[2];
    double __temp_239 = Math.pow(q[0], 2.00000000000000);
    double __temp_240 = Math.pow(q[1], 2.00000000000000);
    double __temp_238 = __temp_239 + __temp_240;
    double __temp_237 = -2.00000000000000 * __temp_238;
    double __temp_236 = 1.00000000000000 + __temp_237;
    double __temp_235 = __temp_236 * p[2];
    double __temp_243 = q[0] * q[2];
    double __temp_244 = -1.00000000000000 * q[1] * q[3];
    double __temp_242 = __temp_243 + __temp_244;
    double __temp_241 = 2.00000000000000 * __temp_242 * p[0];
    double __temp_247 = q[0] * q[3];
    double __temp_248 = q[1] * q[2];
    double __temp_246 = __temp_247 + __temp_248;
    double __temp_245 = 2.00000000000000 * __temp_246 * p[1];
    double __temp_233 = __temp_234 + __temp_235 + __temp_241 + __temp_245;
    double __temp_232 = Math.pow(__temp_233, -1.00000000000000);
    double __temp_189 = -2.00000000000000 * __temp_190 * __temp_207 * __temp_211 * __temp_228 * __temp_232;
    double __temp_252 = -1.00000000000000 * imgP[0];
    double __temp_257 = Math.pow(q[1], 2.00000000000000);
    double __temp_258 = Math.pow(q[2], 2.00000000000000);
    double __temp_256 = __temp_257 + __temp_258;
    double __temp_255 = -2.00000000000000 * __temp_256;
    double __temp_254 = 1.00000000000000 + __temp_255;
    double __temp_253 = __temp_254 * p[0];
    double __temp_261 = q[0] * q[2];
    double __temp_262 = q[1] * q[3];
    double __temp_260 = __temp_261 + __temp_262;
    double __temp_259 = 2.00000000000000 * __temp_260 * p[2];
    double __temp_265 = q[1] * q[0];
    double __temp_266 = -1.00000000000000 * q[2] * q[3];
    double __temp_264 = __temp_265 + __temp_266;
    double __temp_263 = 2.00000000000000 * __temp_264 * p[1];
    double __temp_251 = __temp_252 + __temp_253 + __temp_259 + __temp_263;
    double __temp_250 = Math.pow(__temp_251, 2.00000000000000);
    double __temp_268 = -4.00000000000000 * q[1] * p[0];
    double __temp_269 = 2.00000000000000 * q[0] * p[1];
    double __temp_270 = 2.00000000000000 * q[3] * p[2];
    double __temp_267 = __temp_268 + __temp_269 + __temp_270;
    double __temp_273 = -1.00000000000000 * imgP[0];
    double __temp_278 = Math.pow(q[1], 2.00000000000000);
    double __temp_279 = Math.pow(q[2], 2.00000000000000);
    double __temp_277 = __temp_278 + __temp_279;
    double __temp_276 = -2.00000000000000 * __temp_277;
    double __temp_275 = 1.00000000000000 + __temp_276;
    double __temp_274 = __temp_275 * p[0];
    double __temp_282 = q[0] * q[2];
    double __temp_283 = q[1] * q[3];
    double __temp_281 = __temp_282 + __temp_283;
    double __temp_280 = 2.00000000000000 * __temp_281 * p[2];
    double __temp_286 = q[1] * q[0];
    double __temp_287 = -1.00000000000000 * q[2] * q[3];
    double __temp_285 = __temp_286 + __temp_287;
    double __temp_284 = 2.00000000000000 * __temp_285 * p[1];
    double __temp_272 = __temp_273 + __temp_274 + __temp_280 + __temp_284;
    double __temp_271 = Math.pow(__temp_272, -1.00000000000000);
    double __temp_289 = 2.00000000000000 * q[1] * p[1];
    double __temp_290 = 2.00000000000000 * q[2] * p[2];
    double __temp_288 = __temp_289 + __temp_290;
    double __temp_293 = -1.00000000000000 * imgP[0];
    double __temp_298 = Math.pow(q[1], 2.00000000000000);
    double __temp_299 = Math.pow(q[2], 2.00000000000000);
    double __temp_297 = __temp_298 + __temp_299;
    double __temp_296 = -2.00000000000000 * __temp_297;
    double __temp_295 = 1.00000000000000 + __temp_296;
    double __temp_294 = __temp_295 * p[0];
    double __temp_302 = q[0] * q[2];
    double __temp_303 = q[1] * q[3];
    double __temp_301 = __temp_302 + __temp_303;
    double __temp_300 = 2.00000000000000 * __temp_301 * p[2];
    double __temp_306 = q[1] * q[0];
    double __temp_307 = -1.00000000000000 * q[2] * q[3];
    double __temp_305 = __temp_306 + __temp_307;
    double __temp_304 = 2.00000000000000 * __temp_305 * p[1];
    double __temp_292 = __temp_293 + __temp_294 + __temp_300 + __temp_304;
    double __temp_291 = Math.pow(__temp_292, -1.00000000000000);
    double __temp_249 = 4.00000000000000 * __temp_250 * __temp_267 * __temp_271 * __temp_288 * __temp_291;
    double __temp_311 = -1.00000000000000 * imgP[1];
    double __temp_316 = Math.pow(q[0], 2.00000000000000);
    double __temp_317 = Math.pow(q[2], 2.00000000000000);
    double __temp_315 = __temp_316 + __temp_317;
    double __temp_314 = -2.00000000000000 * __temp_315;
    double __temp_313 = 1.00000000000000 + __temp_314;
    double __temp_312 = __temp_313 * p[1];
    double __temp_320 = q[1] * q[0];
    double __temp_321 = q[2] * q[3];
    double __temp_319 = __temp_320 + __temp_321;
    double __temp_318 = 2.00000000000000 * __temp_319 * p[0];
    double __temp_324 = q[1] * q[2];
    double __temp_325 = -1.00000000000000 * q[0] * q[3];
    double __temp_323 = __temp_324 + __temp_325;
    double __temp_322 = 2.00000000000000 * __temp_323 * p[2];
    double __temp_310 = __temp_311 + __temp_312 + __temp_318 + __temp_322;
    double __temp_309 = Math.pow(__temp_310, 2.00000000000000);
    double __temp_327 = 2.00000000000000 * q[0] * p[0];
    double __temp_328 = 2.00000000000000 * q[2] * p[2];
    double __temp_326 = __temp_327 + __temp_328;
    double __temp_331 = -1.00000000000000 * imgP[1];
    double __temp_336 = Math.pow(q[0], 2.00000000000000);
    double __temp_337 = Math.pow(q[2], 2.00000000000000);
    double __temp_335 = __temp_336 + __temp_337;
    double __temp_334 = -2.00000000000000 * __temp_335;
    double __temp_333 = 1.00000000000000 + __temp_334;
    double __temp_332 = __temp_333 * p[1];
    double __temp_340 = q[1] * q[0];
    double __temp_341 = q[2] * q[3];
    double __temp_339 = __temp_340 + __temp_341;
    double __temp_338 = 2.00000000000000 * __temp_339 * p[0];
    double __temp_344 = q[1] * q[2];
    double __temp_345 = -1.00000000000000 * q[0] * q[3];
    double __temp_343 = __temp_344 + __temp_345;
    double __temp_342 = 2.00000000000000 * __temp_343 * p[2];
    double __temp_330 = __temp_331 + __temp_332 + __temp_338 + __temp_342;
    double __temp_329 = Math.pow(__temp_330, -1.00000000000000);
    double __temp_347 = -4.00000000000000 * q[0] * p[1];
    double __temp_348 = -2.00000000000000 * q[3] * p[2];
    double __temp_349 = 2.00000000000000 * q[1] * p[0];
    double __temp_346 = __temp_347 + __temp_348 + __temp_349;
    double __temp_352 = -1.00000000000000 * imgP[1];
    double __temp_357 = Math.pow(q[0], 2.00000000000000);
    double __temp_358 = Math.pow(q[2], 2.00000000000000);
    double __temp_356 = __temp_357 + __temp_358;
    double __temp_355 = -2.00000000000000 * __temp_356;
    double __temp_354 = 1.00000000000000 + __temp_355;
    double __temp_353 = __temp_354 * p[1];
    double __temp_361 = q[1] * q[0];
    double __temp_362 = q[2] * q[3];
    double __temp_360 = __temp_361 + __temp_362;
    double __temp_359 = 2.00000000000000 * __temp_360 * p[0];
    double __temp_365 = q[1] * q[2];
    double __temp_366 = -1.00000000000000 * q[0] * q[3];
    double __temp_364 = __temp_365 + __temp_366;
    double __temp_363 = 2.00000000000000 * __temp_364 * p[2];
    double __temp_351 = __temp_352 + __temp_353 + __temp_359 + __temp_363;
    double __temp_350 = Math.pow(__temp_351, -1.00000000000000);
    double __temp_308 = 4.00000000000000 * __temp_309 * __temp_326 * __temp_329 * __temp_346 * __temp_350;
    double __temp_370 = -1.00000000000000 * imgP[2];
    double __temp_375 = Math.pow(q[0], 2.00000000000000);
    double __temp_376 = Math.pow(q[1], 2.00000000000000);
    double __temp_374 = __temp_375 + __temp_376;
    double __temp_373 = -2.00000000000000 * __temp_374;
    double __temp_372 = 1.00000000000000 + __temp_373;
    double __temp_371 = __temp_372 * p[2];
    double __temp_379 = q[0] * q[2];
    double __temp_380 = -1.00000000000000 * q[1] * q[3];
    double __temp_378 = __temp_379 + __temp_380;
    double __temp_377 = 2.00000000000000 * __temp_378 * p[0];
    double __temp_383 = q[0] * q[3];
    double __temp_384 = q[1] * q[2];
    double __temp_382 = __temp_383 + __temp_384;
    double __temp_381 = 2.00000000000000 * __temp_382 * p[1];
    double __temp_369 = __temp_370 + __temp_371 + __temp_377 + __temp_381;
    double __temp_368 = Math.pow(__temp_369, 2.00000000000000);
    double __temp_386 = -4.00000000000000 * q[1] * p[2];
    double __temp_387 = -2.00000000000000 * q[3] * p[0];
    double __temp_388 = 2.00000000000000 * q[2] * p[1];
    double __temp_385 = __temp_386 + __temp_387 + __temp_388;
    double __temp_391 = -1.00000000000000 * imgP[2];
    double __temp_396 = Math.pow(q[0], 2.00000000000000);
    double __temp_397 = Math.pow(q[1], 2.00000000000000);
    double __temp_395 = __temp_396 + __temp_397;
    double __temp_394 = -2.00000000000000 * __temp_395;
    double __temp_393 = 1.00000000000000 + __temp_394;
    double __temp_392 = __temp_393 * p[2];
    double __temp_400 = q[0] * q[2];
    double __temp_401 = -1.00000000000000 * q[1] * q[3];
    double __temp_399 = __temp_400 + __temp_401;
    double __temp_398 = 2.00000000000000 * __temp_399 * p[0];
    double __temp_404 = q[0] * q[3];
    double __temp_405 = q[1] * q[2];
    double __temp_403 = __temp_404 + __temp_405;
    double __temp_402 = 2.00000000000000 * __temp_403 * p[1];
    double __temp_390 = __temp_391 + __temp_392 + __temp_398 + __temp_402;
    double __temp_389 = Math.pow(__temp_390, -1.00000000000000);
    double __temp_407 = -4.00000000000000 * q[0] * p[2];
    double __temp_408 = 2.00000000000000 * q[2] * p[0];
    double __temp_409 = 2.00000000000000 * q[3] * p[1];
    double __temp_406 = __temp_407 + __temp_408 + __temp_409;
    double __temp_412 = -1.00000000000000 * imgP[2];
    double __temp_417 = Math.pow(q[0], 2.00000000000000);
    double __temp_418 = Math.pow(q[1], 2.00000000000000);
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = -2.00000000000000 * __temp_416;
    double __temp_414 = 1.00000000000000 + __temp_415;
    double __temp_413 = __temp_414 * p[2];
    double __temp_421 = q[0] * q[2];
    double __temp_422 = -1.00000000000000 * q[1] * q[3];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[0];
    double __temp_425 = q[0] * q[3];
    double __temp_426 = q[1] * q[2];
    double __temp_424 = __temp_425 + __temp_426;
    double __temp_423 = 2.00000000000000 * __temp_424 * p[1];
    double __temp_411 = __temp_412 + __temp_413 + __temp_419 + __temp_423;
    double __temp_410 = Math.pow(__temp_411, -1.00000000000000);
    double __temp_367 = 4.00000000000000 * __temp_368 * __temp_385 * __temp_389 * __temp_406 * __temp_410;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_130 + __temp_189 + __temp_249 + __temp_308 + __temp_367;
    return __temp_0;
  }

  public static double partialDerivative_0_2(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = -1.00000000000000 * q[2] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[1];
    double __temp_17 = q[1] * q[3];
    double __temp_18 = q[2] * q[0];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[0];
    double __temp_26 = Math.pow(q[1], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[0];
    double __temp_30 = q[0] * q[1];
    double __temp_31 = -1.00000000000000 * q[2] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[1];
    double __temp_34 = q[1] * q[3];
    double __temp_35 = q[2] * q[0];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = 4.00000000000000 * __temp_2 * p[2] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[2];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[1], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[2];
    double __temp_48 = q[0] * q[3];
    double __temp_49 = q[2] * q[1];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[1];
    double __temp_52 = q[2] * q[0];
    double __temp_53 = -1.00000000000000 * q[1] * q[3];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[0];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[2];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[1], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[2];
    double __temp_65 = q[0] * q[3];
    double __temp_66 = q[2] * q[1];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[1];
    double __temp_69 = q[2] * q[0];
    double __temp_70 = -1.00000000000000 * q[1] * q[3];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[0];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[0] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[1];
    double __temp_84 = -1.00000000000000 * q[2] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[1] * q[3];
    double __temp_88 = q[2] * q[0];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = 2.00000000000000 * q[1] * p[1];
    double __temp_91 = 2.00000000000000 * q[2] * p[2];
    double __temp_89 = __temp_90 + __temp_91;
    double __temp_94 = -1.00000000000000 * imgP[0];
    double __temp_99 = Math.pow(q[1], 2.00000000000000);
    double __temp_100 = Math.pow(q[2], 2.00000000000000);
    double __temp_98 = __temp_99 + __temp_100;
    double __temp_97 = -2.00000000000000 * __temp_98;
    double __temp_96 = 1.00000000000000 + __temp_97;
    double __temp_95 = __temp_96 * p[0];
    double __temp_103 = q[0] * q[1];
    double __temp_104 = -1.00000000000000 * q[2] * q[3];
    double __temp_102 = __temp_103 + __temp_104;
    double __temp_101 = 2.00000000000000 * __temp_102 * p[1];
    double __temp_107 = q[1] * q[3];
    double __temp_108 = q[2] * q[0];
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = 2.00000000000000 * __temp_106 * p[2];
    double __temp_93 = __temp_94 + __temp_95 + __temp_101 + __temp_105;
    double __temp_92 = Math.pow(__temp_93, -1.00000000000000);
    double __temp_110 = -4.00000000000000 * q[2] * p[0];
    double __temp_111 = -2.00000000000000 * q[3] * p[1];
    double __temp_112 = 2.00000000000000 * q[0] * p[2];
    double __temp_109 = __temp_110 + __temp_111 + __temp_112;
    double __temp_115 = -1.00000000000000 * imgP[0];
    double __temp_120 = Math.pow(q[1], 2.00000000000000);
    double __temp_121 = Math.pow(q[2], 2.00000000000000);
    double __temp_119 = __temp_120 + __temp_121;
    double __temp_118 = -2.00000000000000 * __temp_119;
    double __temp_117 = 1.00000000000000 + __temp_118;
    double __temp_116 = __temp_117 * p[0];
    double __temp_124 = q[0] * q[1];
    double __temp_125 = -1.00000000000000 * q[2] * q[3];
    double __temp_123 = __temp_124 + __temp_125;
    double __temp_122 = 2.00000000000000 * __temp_123 * p[1];
    double __temp_128 = q[1] * q[3];
    double __temp_129 = q[2] * q[0];
    double __temp_127 = __temp_128 + __temp_129;
    double __temp_126 = 2.00000000000000 * __temp_127 * p[2];
    double __temp_114 = __temp_115 + __temp_116 + __temp_122 + __temp_126;
    double __temp_113 = Math.pow(__temp_114, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_92 * __temp_109 * __temp_113;
    double __temp_133 = -1.00000000000000 * imgP[1];
    double __temp_138 = Math.pow(q[0], 2.00000000000000);
    double __temp_139 = Math.pow(q[2], 2.00000000000000);
    double __temp_137 = __temp_138 + __temp_139;
    double __temp_136 = -2.00000000000000 * __temp_137;
    double __temp_135 = 1.00000000000000 + __temp_136;
    double __temp_134 = __temp_135 * p[1];
    double __temp_142 = q[0] * q[1];
    double __temp_143 = q[2] * q[3];
    double __temp_141 = __temp_142 + __temp_143;
    double __temp_140 = 2.00000000000000 * __temp_141 * p[0];
    double __temp_146 = q[2] * q[1];
    double __temp_147 = -1.00000000000000 * q[0] * q[3];
    double __temp_145 = __temp_146 + __temp_147;
    double __temp_144 = 2.00000000000000 * __temp_145 * p[2];
    double __temp_132 = __temp_133 + __temp_134 + __temp_140 + __temp_144;
    double __temp_131 = Math.pow(__temp_132, 2.00000000000000);
    double __temp_149 = -4.00000000000000 * q[0] * p[1];
    double __temp_150 = -2.00000000000000 * q[3] * p[2];
    double __temp_151 = 2.00000000000000 * q[1] * p[0];
    double __temp_148 = __temp_149 + __temp_150 + __temp_151;
    double __temp_154 = -1.00000000000000 * imgP[1];
    double __temp_159 = Math.pow(q[0], 2.00000000000000);
    double __temp_160 = Math.pow(q[2], 2.00000000000000);
    double __temp_158 = __temp_159 + __temp_160;
    double __temp_157 = -2.00000000000000 * __temp_158;
    double __temp_156 = 1.00000000000000 + __temp_157;
    double __temp_155 = __temp_156 * p[1];
    double __temp_163 = q[0] * q[1];
    double __temp_164 = q[2] * q[3];
    double __temp_162 = __temp_163 + __temp_164;
    double __temp_161 = 2.00000000000000 * __temp_162 * p[0];
    double __temp_167 = q[2] * q[1];
    double __temp_168 = -1.00000000000000 * q[0] * q[3];
    double __temp_166 = __temp_167 + __temp_168;
    double __temp_165 = 2.00000000000000 * __temp_166 * p[2];
    double __temp_153 = __temp_154 + __temp_155 + __temp_161 + __temp_165;
    double __temp_152 = Math.pow(__temp_153, -1.00000000000000);
    double __temp_170 = -4.00000000000000 * q[2] * p[1];
    double __temp_171 = 2.00000000000000 * q[1] * p[2];
    double __temp_172 = 2.00000000000000 * q[3] * p[0];
    double __temp_169 = __temp_170 + __temp_171 + __temp_172;
    double __temp_175 = -1.00000000000000 * imgP[1];
    double __temp_180 = Math.pow(q[0], 2.00000000000000);
    double __temp_181 = Math.pow(q[2], 2.00000000000000);
    double __temp_179 = __temp_180 + __temp_181;
    double __temp_178 = -2.00000000000000 * __temp_179;
    double __temp_177 = 1.00000000000000 + __temp_178;
    double __temp_176 = __temp_177 * p[1];
    double __temp_184 = q[0] * q[1];
    double __temp_185 = q[2] * q[3];
    double __temp_183 = __temp_184 + __temp_185;
    double __temp_182 = 2.00000000000000 * __temp_183 * p[0];
    double __temp_188 = q[2] * q[1];
    double __temp_189 = -1.00000000000000 * q[0] * q[3];
    double __temp_187 = __temp_188 + __temp_189;
    double __temp_186 = 2.00000000000000 * __temp_187 * p[2];
    double __temp_174 = __temp_175 + __temp_176 + __temp_182 + __temp_186;
    double __temp_173 = Math.pow(__temp_174, -1.00000000000000);
    double __temp_130 = -2.00000000000000 * __temp_131 * __temp_148 * __temp_152 * __temp_169 * __temp_173;
    double __temp_193 = -1.00000000000000 * imgP[2];
    double __temp_198 = Math.pow(q[0], 2.00000000000000);
    double __temp_199 = Math.pow(q[1], 2.00000000000000);
    double __temp_197 = __temp_198 + __temp_199;
    double __temp_196 = -2.00000000000000 * __temp_197;
    double __temp_195 = 1.00000000000000 + __temp_196;
    double __temp_194 = __temp_195 * p[2];
    double __temp_202 = q[0] * q[3];
    double __temp_203 = q[2] * q[1];
    double __temp_201 = __temp_202 + __temp_203;
    double __temp_200 = 2.00000000000000 * __temp_201 * p[1];
    double __temp_206 = q[2] * q[0];
    double __temp_207 = -1.00000000000000 * q[1] * q[3];
    double __temp_205 = __temp_206 + __temp_207;
    double __temp_204 = 2.00000000000000 * __temp_205 * p[0];
    double __temp_192 = __temp_193 + __temp_194 + __temp_200 + __temp_204;
    double __temp_191 = Math.pow(__temp_192, 2.00000000000000);
    double __temp_209 = -4.00000000000000 * q[0] * p[2];
    double __temp_210 = 2.00000000000000 * q[2] * p[0];
    double __temp_211 = 2.00000000000000 * q[3] * p[1];
    double __temp_208 = __temp_209 + __temp_210 + __temp_211;
    double __temp_214 = -1.00000000000000 * imgP[2];
    double __temp_219 = Math.pow(q[0], 2.00000000000000);
    double __temp_220 = Math.pow(q[1], 2.00000000000000);
    double __temp_218 = __temp_219 + __temp_220;
    double __temp_217 = -2.00000000000000 * __temp_218;
    double __temp_216 = 1.00000000000000 + __temp_217;
    double __temp_215 = __temp_216 * p[2];
    double __temp_223 = q[0] * q[3];
    double __temp_224 = q[2] * q[1];
    double __temp_222 = __temp_223 + __temp_224;
    double __temp_221 = 2.00000000000000 * __temp_222 * p[1];
    double __temp_227 = q[2] * q[0];
    double __temp_228 = -1.00000000000000 * q[1] * q[3];
    double __temp_226 = __temp_227 + __temp_228;
    double __temp_225 = 2.00000000000000 * __temp_226 * p[0];
    double __temp_213 = __temp_214 + __temp_215 + __temp_221 + __temp_225;
    double __temp_212 = Math.pow(__temp_213, -1.00000000000000);
    double __temp_230 = 2.00000000000000 * q[0] * p[0];
    double __temp_231 = 2.00000000000000 * q[1] * p[1];
    double __temp_229 = __temp_230 + __temp_231;
    double __temp_234 = -1.00000000000000 * imgP[2];
    double __temp_239 = Math.pow(q[0], 2.00000000000000);
    double __temp_240 = Math.pow(q[1], 2.00000000000000);
    double __temp_238 = __temp_239 + __temp_240;
    double __temp_237 = -2.00000000000000 * __temp_238;
    double __temp_236 = 1.00000000000000 + __temp_237;
    double __temp_235 = __temp_236 * p[2];
    double __temp_243 = q[0] * q[3];
    double __temp_244 = q[2] * q[1];
    double __temp_242 = __temp_243 + __temp_244;
    double __temp_241 = 2.00000000000000 * __temp_242 * p[1];
    double __temp_247 = q[2] * q[0];
    double __temp_248 = -1.00000000000000 * q[1] * q[3];
    double __temp_246 = __temp_247 + __temp_248;
    double __temp_245 = 2.00000000000000 * __temp_246 * p[0];
    double __temp_233 = __temp_234 + __temp_235 + __temp_241 + __temp_245;
    double __temp_232 = Math.pow(__temp_233, -1.00000000000000);
    double __temp_190 = -2.00000000000000 * __temp_191 * __temp_208 * __temp_212 * __temp_229 * __temp_232;
    double __temp_252 = -1.00000000000000 * imgP[0];
    double __temp_257 = Math.pow(q[1], 2.00000000000000);
    double __temp_258 = Math.pow(q[2], 2.00000000000000);
    double __temp_256 = __temp_257 + __temp_258;
    double __temp_255 = -2.00000000000000 * __temp_256;
    double __temp_254 = 1.00000000000000 + __temp_255;
    double __temp_253 = __temp_254 * p[0];
    double __temp_261 = q[0] * q[1];
    double __temp_262 = -1.00000000000000 * q[2] * q[3];
    double __temp_260 = __temp_261 + __temp_262;
    double __temp_259 = 2.00000000000000 * __temp_260 * p[1];
    double __temp_265 = q[1] * q[3];
    double __temp_266 = q[2] * q[0];
    double __temp_264 = __temp_265 + __temp_266;
    double __temp_263 = 2.00000000000000 * __temp_264 * p[2];
    double __temp_251 = __temp_252 + __temp_253 + __temp_259 + __temp_263;
    double __temp_250 = Math.pow(__temp_251, 2.00000000000000);
    double __temp_268 = -4.00000000000000 * q[2] * p[0];
    double __temp_269 = -2.00000000000000 * q[3] * p[1];
    double __temp_270 = 2.00000000000000 * q[0] * p[2];
    double __temp_267 = __temp_268 + __temp_269 + __temp_270;
    double __temp_273 = -1.00000000000000 * imgP[0];
    double __temp_278 = Math.pow(q[1], 2.00000000000000);
    double __temp_279 = Math.pow(q[2], 2.00000000000000);
    double __temp_277 = __temp_278 + __temp_279;
    double __temp_276 = -2.00000000000000 * __temp_277;
    double __temp_275 = 1.00000000000000 + __temp_276;
    double __temp_274 = __temp_275 * p[0];
    double __temp_282 = q[0] * q[1];
    double __temp_283 = -1.00000000000000 * q[2] * q[3];
    double __temp_281 = __temp_282 + __temp_283;
    double __temp_280 = 2.00000000000000 * __temp_281 * p[1];
    double __temp_286 = q[1] * q[3];
    double __temp_287 = q[2] * q[0];
    double __temp_285 = __temp_286 + __temp_287;
    double __temp_284 = 2.00000000000000 * __temp_285 * p[2];
    double __temp_272 = __temp_273 + __temp_274 + __temp_280 + __temp_284;
    double __temp_271 = Math.pow(__temp_272, -1.00000000000000);
    double __temp_289 = 2.00000000000000 * q[1] * p[1];
    double __temp_290 = 2.00000000000000 * q[2] * p[2];
    double __temp_288 = __temp_289 + __temp_290;
    double __temp_293 = -1.00000000000000 * imgP[0];
    double __temp_298 = Math.pow(q[1], 2.00000000000000);
    double __temp_299 = Math.pow(q[2], 2.00000000000000);
    double __temp_297 = __temp_298 + __temp_299;
    double __temp_296 = -2.00000000000000 * __temp_297;
    double __temp_295 = 1.00000000000000 + __temp_296;
    double __temp_294 = __temp_295 * p[0];
    double __temp_302 = q[0] * q[1];
    double __temp_303 = -1.00000000000000 * q[2] * q[3];
    double __temp_301 = __temp_302 + __temp_303;
    double __temp_300 = 2.00000000000000 * __temp_301 * p[1];
    double __temp_306 = q[1] * q[3];
    double __temp_307 = q[2] * q[0];
    double __temp_305 = __temp_306 + __temp_307;
    double __temp_304 = 2.00000000000000 * __temp_305 * p[2];
    double __temp_292 = __temp_293 + __temp_294 + __temp_300 + __temp_304;
    double __temp_291 = Math.pow(__temp_292, -1.00000000000000);
    double __temp_249 = 4.00000000000000 * __temp_250 * __temp_267 * __temp_271 * __temp_288 * __temp_291;
    double __temp_311 = -1.00000000000000 * imgP[1];
    double __temp_316 = Math.pow(q[0], 2.00000000000000);
    double __temp_317 = Math.pow(q[2], 2.00000000000000);
    double __temp_315 = __temp_316 + __temp_317;
    double __temp_314 = -2.00000000000000 * __temp_315;
    double __temp_313 = 1.00000000000000 + __temp_314;
    double __temp_312 = __temp_313 * p[1];
    double __temp_320 = q[0] * q[1];
    double __temp_321 = q[2] * q[3];
    double __temp_319 = __temp_320 + __temp_321;
    double __temp_318 = 2.00000000000000 * __temp_319 * p[0];
    double __temp_324 = q[2] * q[1];
    double __temp_325 = -1.00000000000000 * q[0] * q[3];
    double __temp_323 = __temp_324 + __temp_325;
    double __temp_322 = 2.00000000000000 * __temp_323 * p[2];
    double __temp_310 = __temp_311 + __temp_312 + __temp_318 + __temp_322;
    double __temp_309 = Math.pow(__temp_310, 2.00000000000000);
    double __temp_327 = -4.00000000000000 * q[2] * p[1];
    double __temp_328 = 2.00000000000000 * q[1] * p[2];
    double __temp_329 = 2.00000000000000 * q[3] * p[0];
    double __temp_326 = __temp_327 + __temp_328 + __temp_329;
    double __temp_332 = -1.00000000000000 * imgP[1];
    double __temp_337 = Math.pow(q[0], 2.00000000000000);
    double __temp_338 = Math.pow(q[2], 2.00000000000000);
    double __temp_336 = __temp_337 + __temp_338;
    double __temp_335 = -2.00000000000000 * __temp_336;
    double __temp_334 = 1.00000000000000 + __temp_335;
    double __temp_333 = __temp_334 * p[1];
    double __temp_341 = q[0] * q[1];
    double __temp_342 = q[2] * q[3];
    double __temp_340 = __temp_341 + __temp_342;
    double __temp_339 = 2.00000000000000 * __temp_340 * p[0];
    double __temp_345 = q[2] * q[1];
    double __temp_346 = -1.00000000000000 * q[0] * q[3];
    double __temp_344 = __temp_345 + __temp_346;
    double __temp_343 = 2.00000000000000 * __temp_344 * p[2];
    double __temp_331 = __temp_332 + __temp_333 + __temp_339 + __temp_343;
    double __temp_330 = Math.pow(__temp_331, -1.00000000000000);
    double __temp_348 = -4.00000000000000 * q[0] * p[1];
    double __temp_349 = -2.00000000000000 * q[3] * p[2];
    double __temp_350 = 2.00000000000000 * q[1] * p[0];
    double __temp_347 = __temp_348 + __temp_349 + __temp_350;
    double __temp_353 = -1.00000000000000 * imgP[1];
    double __temp_358 = Math.pow(q[0], 2.00000000000000);
    double __temp_359 = Math.pow(q[2], 2.00000000000000);
    double __temp_357 = __temp_358 + __temp_359;
    double __temp_356 = -2.00000000000000 * __temp_357;
    double __temp_355 = 1.00000000000000 + __temp_356;
    double __temp_354 = __temp_355 * p[1];
    double __temp_362 = q[0] * q[1];
    double __temp_363 = q[2] * q[3];
    double __temp_361 = __temp_362 + __temp_363;
    double __temp_360 = 2.00000000000000 * __temp_361 * p[0];
    double __temp_366 = q[2] * q[1];
    double __temp_367 = -1.00000000000000 * q[0] * q[3];
    double __temp_365 = __temp_366 + __temp_367;
    double __temp_364 = 2.00000000000000 * __temp_365 * p[2];
    double __temp_352 = __temp_353 + __temp_354 + __temp_360 + __temp_364;
    double __temp_351 = Math.pow(__temp_352, -1.00000000000000);
    double __temp_308 = 4.00000000000000 * __temp_309 * __temp_326 * __temp_330 * __temp_347 * __temp_351;
    double __temp_371 = -1.00000000000000 * imgP[2];
    double __temp_376 = Math.pow(q[0], 2.00000000000000);
    double __temp_377 = Math.pow(q[1], 2.00000000000000);
    double __temp_375 = __temp_376 + __temp_377;
    double __temp_374 = -2.00000000000000 * __temp_375;
    double __temp_373 = 1.00000000000000 + __temp_374;
    double __temp_372 = __temp_373 * p[2];
    double __temp_380 = q[0] * q[3];
    double __temp_381 = q[2] * q[1];
    double __temp_379 = __temp_380 + __temp_381;
    double __temp_378 = 2.00000000000000 * __temp_379 * p[1];
    double __temp_384 = q[2] * q[0];
    double __temp_385 = -1.00000000000000 * q[1] * q[3];
    double __temp_383 = __temp_384 + __temp_385;
    double __temp_382 = 2.00000000000000 * __temp_383 * p[0];
    double __temp_370 = __temp_371 + __temp_372 + __temp_378 + __temp_382;
    double __temp_369 = Math.pow(__temp_370, 2.00000000000000);
    double __temp_387 = 2.00000000000000 * q[0] * p[0];
    double __temp_388 = 2.00000000000000 * q[1] * p[1];
    double __temp_386 = __temp_387 + __temp_388;
    double __temp_391 = -1.00000000000000 * imgP[2];
    double __temp_396 = Math.pow(q[0], 2.00000000000000);
    double __temp_397 = Math.pow(q[1], 2.00000000000000);
    double __temp_395 = __temp_396 + __temp_397;
    double __temp_394 = -2.00000000000000 * __temp_395;
    double __temp_393 = 1.00000000000000 + __temp_394;
    double __temp_392 = __temp_393 * p[2];
    double __temp_400 = q[0] * q[3];
    double __temp_401 = q[2] * q[1];
    double __temp_399 = __temp_400 + __temp_401;
    double __temp_398 = 2.00000000000000 * __temp_399 * p[1];
    double __temp_404 = q[2] * q[0];
    double __temp_405 = -1.00000000000000 * q[1] * q[3];
    double __temp_403 = __temp_404 + __temp_405;
    double __temp_402 = 2.00000000000000 * __temp_403 * p[0];
    double __temp_390 = __temp_391 + __temp_392 + __temp_398 + __temp_402;
    double __temp_389 = Math.pow(__temp_390, -1.00000000000000);
    double __temp_407 = -4.00000000000000 * q[0] * p[2];
    double __temp_408 = 2.00000000000000 * q[2] * p[0];
    double __temp_409 = 2.00000000000000 * q[3] * p[1];
    double __temp_406 = __temp_407 + __temp_408 + __temp_409;
    double __temp_412 = -1.00000000000000 * imgP[2];
    double __temp_417 = Math.pow(q[0], 2.00000000000000);
    double __temp_418 = Math.pow(q[1], 2.00000000000000);
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = -2.00000000000000 * __temp_416;
    double __temp_414 = 1.00000000000000 + __temp_415;
    double __temp_413 = __temp_414 * p[2];
    double __temp_421 = q[0] * q[3];
    double __temp_422 = q[2] * q[1];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[1];
    double __temp_425 = q[2] * q[0];
    double __temp_426 = -1.00000000000000 * q[1] * q[3];
    double __temp_424 = __temp_425 + __temp_426;
    double __temp_423 = 2.00000000000000 * __temp_424 * p[0];
    double __temp_411 = __temp_412 + __temp_413 + __temp_419 + __temp_423;
    double __temp_410 = Math.pow(__temp_411, -1.00000000000000);
    double __temp_368 = 4.00000000000000 * __temp_369 * __temp_386 * __temp_389 * __temp_406 * __temp_410;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_130 + __temp_190 + __temp_249 + __temp_308 + __temp_368;
    return __temp_0;
  }

  public static double partialDerivative_0_3(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[1];
    double __temp_9 = Math.pow(q[0], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[1];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = q[3] * q[2];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[0];
    double __temp_17 = q[1] * q[2];
    double __temp_18 = -1.00000000000000 * q[3] * q[0];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[1];
    double __temp_26 = Math.pow(q[0], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[1];
    double __temp_30 = q[0] * q[1];
    double __temp_31 = q[3] * q[2];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[0];
    double __temp_34 = q[1] * q[2];
    double __temp_35 = -1.00000000000000 * q[3] * q[0];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = -4.00000000000000 * __temp_2 * p[2] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[2];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[1], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[2];
    double __temp_48 = q[0] * q[2];
    double __temp_49 = -1.00000000000000 * q[3] * q[1];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[0];
    double __temp_52 = q[1] * q[2];
    double __temp_53 = q[3] * q[0];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[1];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[2];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[1], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[2];
    double __temp_65 = q[0] * q[2];
    double __temp_66 = -1.00000000000000 * q[3] * q[1];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[0];
    double __temp_69 = q[1] * q[2];
    double __temp_70 = q[3] * q[0];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[1];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[1] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[1];
    double __temp_84 = -1.00000000000000 * q[3] * q[2];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[0] * q[2];
    double __temp_88 = q[3] * q[1];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = 2.00000000000000 * q[1] * p[1];
    double __temp_91 = 2.00000000000000 * q[2] * p[2];
    double __temp_89 = __temp_90 + __temp_91;
    double __temp_94 = -1.00000000000000 * imgP[0];
    double __temp_99 = Math.pow(q[1], 2.00000000000000);
    double __temp_100 = Math.pow(q[2], 2.00000000000000);
    double __temp_98 = __temp_99 + __temp_100;
    double __temp_97 = -2.00000000000000 * __temp_98;
    double __temp_96 = 1.00000000000000 + __temp_97;
    double __temp_95 = __temp_96 * p[0];
    double __temp_103 = q[0] * q[1];
    double __temp_104 = -1.00000000000000 * q[3] * q[2];
    double __temp_102 = __temp_103 + __temp_104;
    double __temp_101 = 2.00000000000000 * __temp_102 * p[1];
    double __temp_107 = q[0] * q[2];
    double __temp_108 = q[3] * q[1];
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = 2.00000000000000 * __temp_106 * p[2];
    double __temp_93 = __temp_94 + __temp_95 + __temp_101 + __temp_105;
    double __temp_92 = Math.pow(__temp_93, -1.00000000000000);
    double __temp_110 = -2.00000000000000 * q[2] * p[1];
    double __temp_111 = 2.00000000000000 * q[1] * p[2];
    double __temp_109 = __temp_110 + __temp_111;
    double __temp_114 = -1.00000000000000 * imgP[0];
    double __temp_119 = Math.pow(q[1], 2.00000000000000);
    double __temp_120 = Math.pow(q[2], 2.00000000000000);
    double __temp_118 = __temp_119 + __temp_120;
    double __temp_117 = -2.00000000000000 * __temp_118;
    double __temp_116 = 1.00000000000000 + __temp_117;
    double __temp_115 = __temp_116 * p[0];
    double __temp_123 = q[0] * q[1];
    double __temp_124 = -1.00000000000000 * q[3] * q[2];
    double __temp_122 = __temp_123 + __temp_124;
    double __temp_121 = 2.00000000000000 * __temp_122 * p[1];
    double __temp_127 = q[0] * q[2];
    double __temp_128 = q[3] * q[1];
    double __temp_126 = __temp_127 + __temp_128;
    double __temp_125 = 2.00000000000000 * __temp_126 * p[2];
    double __temp_113 = __temp_114 + __temp_115 + __temp_121 + __temp_125;
    double __temp_112 = Math.pow(__temp_113, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_92 * __temp_109 * __temp_112;
    double __temp_132 = -1.00000000000000 * imgP[1];
    double __temp_137 = Math.pow(q[0], 2.00000000000000);
    double __temp_138 = Math.pow(q[2], 2.00000000000000);
    double __temp_136 = __temp_137 + __temp_138;
    double __temp_135 = -2.00000000000000 * __temp_136;
    double __temp_134 = 1.00000000000000 + __temp_135;
    double __temp_133 = __temp_134 * p[1];
    double __temp_141 = q[0] * q[1];
    double __temp_142 = q[3] * q[2];
    double __temp_140 = __temp_141 + __temp_142;
    double __temp_139 = 2.00000000000000 * __temp_140 * p[0];
    double __temp_145 = q[1] * q[2];
    double __temp_146 = -1.00000000000000 * q[3] * q[0];
    double __temp_144 = __temp_145 + __temp_146;
    double __temp_143 = 2.00000000000000 * __temp_144 * p[2];
    double __temp_131 = __temp_132 + __temp_133 + __temp_139 + __temp_143;
    double __temp_130 = Math.pow(__temp_131, 2.00000000000000);
    double __temp_148 = -4.00000000000000 * q[0] * p[1];
    double __temp_149 = -2.00000000000000 * q[3] * p[2];
    double __temp_150 = 2.00000000000000 * q[1] * p[0];
    double __temp_147 = __temp_148 + __temp_149 + __temp_150;
    double __temp_153 = -1.00000000000000 * imgP[1];
    double __temp_158 = Math.pow(q[0], 2.00000000000000);
    double __temp_159 = Math.pow(q[2], 2.00000000000000);
    double __temp_157 = __temp_158 + __temp_159;
    double __temp_156 = -2.00000000000000 * __temp_157;
    double __temp_155 = 1.00000000000000 + __temp_156;
    double __temp_154 = __temp_155 * p[1];
    double __temp_162 = q[0] * q[1];
    double __temp_163 = q[3] * q[2];
    double __temp_161 = __temp_162 + __temp_163;
    double __temp_160 = 2.00000000000000 * __temp_161 * p[0];
    double __temp_166 = q[1] * q[2];
    double __temp_167 = -1.00000000000000 * q[3] * q[0];
    double __temp_165 = __temp_166 + __temp_167;
    double __temp_164 = 2.00000000000000 * __temp_165 * p[2];
    double __temp_152 = __temp_153 + __temp_154 + __temp_160 + __temp_164;
    double __temp_151 = Math.pow(__temp_152, -1.00000000000000);
    double __temp_169 = -2.00000000000000 * q[0] * p[2];
    double __temp_170 = 2.00000000000000 * q[2] * p[0];
    double __temp_168 = __temp_169 + __temp_170;
    double __temp_173 = -1.00000000000000 * imgP[1];
    double __temp_178 = Math.pow(q[0], 2.00000000000000);
    double __temp_179 = Math.pow(q[2], 2.00000000000000);
    double __temp_177 = __temp_178 + __temp_179;
    double __temp_176 = -2.00000000000000 * __temp_177;
    double __temp_175 = 1.00000000000000 + __temp_176;
    double __temp_174 = __temp_175 * p[1];
    double __temp_182 = q[0] * q[1];
    double __temp_183 = q[3] * q[2];
    double __temp_181 = __temp_182 + __temp_183;
    double __temp_180 = 2.00000000000000 * __temp_181 * p[0];
    double __temp_186 = q[1] * q[2];
    double __temp_187 = -1.00000000000000 * q[3] * q[0];
    double __temp_185 = __temp_186 + __temp_187;
    double __temp_184 = 2.00000000000000 * __temp_185 * p[2];
    double __temp_172 = __temp_173 + __temp_174 + __temp_180 + __temp_184;
    double __temp_171 = Math.pow(__temp_172, -1.00000000000000);
    double __temp_129 = -2.00000000000000 * __temp_130 * __temp_147 * __temp_151 * __temp_168 * __temp_171;
    double __temp_191 = -1.00000000000000 * imgP[2];
    double __temp_196 = Math.pow(q[0], 2.00000000000000);
    double __temp_197 = Math.pow(q[1], 2.00000000000000);
    double __temp_195 = __temp_196 + __temp_197;
    double __temp_194 = -2.00000000000000 * __temp_195;
    double __temp_193 = 1.00000000000000 + __temp_194;
    double __temp_192 = __temp_193 * p[2];
    double __temp_200 = q[0] * q[2];
    double __temp_201 = -1.00000000000000 * q[3] * q[1];
    double __temp_199 = __temp_200 + __temp_201;
    double __temp_198 = 2.00000000000000 * __temp_199 * p[0];
    double __temp_204 = q[1] * q[2];
    double __temp_205 = q[3] * q[0];
    double __temp_203 = __temp_204 + __temp_205;
    double __temp_202 = 2.00000000000000 * __temp_203 * p[1];
    double __temp_190 = __temp_191 + __temp_192 + __temp_198 + __temp_202;
    double __temp_189 = Math.pow(__temp_190, 2.00000000000000);
    double __temp_207 = -4.00000000000000 * q[0] * p[2];
    double __temp_208 = 2.00000000000000 * q[2] * p[0];
    double __temp_209 = 2.00000000000000 * q[3] * p[1];
    double __temp_206 = __temp_207 + __temp_208 + __temp_209;
    double __temp_212 = -1.00000000000000 * imgP[2];
    double __temp_217 = Math.pow(q[0], 2.00000000000000);
    double __temp_218 = Math.pow(q[1], 2.00000000000000);
    double __temp_216 = __temp_217 + __temp_218;
    double __temp_215 = -2.00000000000000 * __temp_216;
    double __temp_214 = 1.00000000000000 + __temp_215;
    double __temp_213 = __temp_214 * p[2];
    double __temp_221 = q[0] * q[2];
    double __temp_222 = -1.00000000000000 * q[3] * q[1];
    double __temp_220 = __temp_221 + __temp_222;
    double __temp_219 = 2.00000000000000 * __temp_220 * p[0];
    double __temp_225 = q[1] * q[2];
    double __temp_226 = q[3] * q[0];
    double __temp_224 = __temp_225 + __temp_226;
    double __temp_223 = 2.00000000000000 * __temp_224 * p[1];
    double __temp_211 = __temp_212 + __temp_213 + __temp_219 + __temp_223;
    double __temp_210 = Math.pow(__temp_211, -1.00000000000000);
    double __temp_228 = -2.00000000000000 * q[1] * p[0];
    double __temp_229 = 2.00000000000000 * q[0] * p[1];
    double __temp_227 = __temp_228 + __temp_229;
    double __temp_232 = -1.00000000000000 * imgP[2];
    double __temp_237 = Math.pow(q[0], 2.00000000000000);
    double __temp_238 = Math.pow(q[1], 2.00000000000000);
    double __temp_236 = __temp_237 + __temp_238;
    double __temp_235 = -2.00000000000000 * __temp_236;
    double __temp_234 = 1.00000000000000 + __temp_235;
    double __temp_233 = __temp_234 * p[2];
    double __temp_241 = q[0] * q[2];
    double __temp_242 = -1.00000000000000 * q[3] * q[1];
    double __temp_240 = __temp_241 + __temp_242;
    double __temp_239 = 2.00000000000000 * __temp_240 * p[0];
    double __temp_245 = q[1] * q[2];
    double __temp_246 = q[3] * q[0];
    double __temp_244 = __temp_245 + __temp_246;
    double __temp_243 = 2.00000000000000 * __temp_244 * p[1];
    double __temp_231 = __temp_232 + __temp_233 + __temp_239 + __temp_243;
    double __temp_230 = Math.pow(__temp_231, -1.00000000000000);
    double __temp_188 = -2.00000000000000 * __temp_189 * __temp_206 * __temp_210 * __temp_227 * __temp_230;
    double __temp_250 = -1.00000000000000 * imgP[0];
    double __temp_255 = Math.pow(q[1], 2.00000000000000);
    double __temp_256 = Math.pow(q[2], 2.00000000000000);
    double __temp_254 = __temp_255 + __temp_256;
    double __temp_253 = -2.00000000000000 * __temp_254;
    double __temp_252 = 1.00000000000000 + __temp_253;
    double __temp_251 = __temp_252 * p[0];
    double __temp_259 = q[0] * q[1];
    double __temp_260 = -1.00000000000000 * q[3] * q[2];
    double __temp_258 = __temp_259 + __temp_260;
    double __temp_257 = 2.00000000000000 * __temp_258 * p[1];
    double __temp_263 = q[0] * q[2];
    double __temp_264 = q[3] * q[1];
    double __temp_262 = __temp_263 + __temp_264;
    double __temp_261 = 2.00000000000000 * __temp_262 * p[2];
    double __temp_249 = __temp_250 + __temp_251 + __temp_257 + __temp_261;
    double __temp_248 = Math.pow(__temp_249, 2.00000000000000);
    double __temp_266 = -2.00000000000000 * q[2] * p[1];
    double __temp_267 = 2.00000000000000 * q[1] * p[2];
    double __temp_265 = __temp_266 + __temp_267;
    double __temp_270 = -1.00000000000000 * imgP[0];
    double __temp_275 = Math.pow(q[1], 2.00000000000000);
    double __temp_276 = Math.pow(q[2], 2.00000000000000);
    double __temp_274 = __temp_275 + __temp_276;
    double __temp_273 = -2.00000000000000 * __temp_274;
    double __temp_272 = 1.00000000000000 + __temp_273;
    double __temp_271 = __temp_272 * p[0];
    double __temp_279 = q[0] * q[1];
    double __temp_280 = -1.00000000000000 * q[3] * q[2];
    double __temp_278 = __temp_279 + __temp_280;
    double __temp_277 = 2.00000000000000 * __temp_278 * p[1];
    double __temp_283 = q[0] * q[2];
    double __temp_284 = q[3] * q[1];
    double __temp_282 = __temp_283 + __temp_284;
    double __temp_281 = 2.00000000000000 * __temp_282 * p[2];
    double __temp_269 = __temp_270 + __temp_271 + __temp_277 + __temp_281;
    double __temp_268 = Math.pow(__temp_269, -1.00000000000000);
    double __temp_286 = 2.00000000000000 * q[1] * p[1];
    double __temp_287 = 2.00000000000000 * q[2] * p[2];
    double __temp_285 = __temp_286 + __temp_287;
    double __temp_290 = -1.00000000000000 * imgP[0];
    double __temp_295 = Math.pow(q[1], 2.00000000000000);
    double __temp_296 = Math.pow(q[2], 2.00000000000000);
    double __temp_294 = __temp_295 + __temp_296;
    double __temp_293 = -2.00000000000000 * __temp_294;
    double __temp_292 = 1.00000000000000 + __temp_293;
    double __temp_291 = __temp_292 * p[0];
    double __temp_299 = q[0] * q[1];
    double __temp_300 = -1.00000000000000 * q[3] * q[2];
    double __temp_298 = __temp_299 + __temp_300;
    double __temp_297 = 2.00000000000000 * __temp_298 * p[1];
    double __temp_303 = q[0] * q[2];
    double __temp_304 = q[3] * q[1];
    double __temp_302 = __temp_303 + __temp_304;
    double __temp_301 = 2.00000000000000 * __temp_302 * p[2];
    double __temp_289 = __temp_290 + __temp_291 + __temp_297 + __temp_301;
    double __temp_288 = Math.pow(__temp_289, -1.00000000000000);
    double __temp_247 = 4.00000000000000 * __temp_248 * __temp_265 * __temp_268 * __temp_285 * __temp_288;
    double __temp_308 = -1.00000000000000 * imgP[1];
    double __temp_313 = Math.pow(q[0], 2.00000000000000);
    double __temp_314 = Math.pow(q[2], 2.00000000000000);
    double __temp_312 = __temp_313 + __temp_314;
    double __temp_311 = -2.00000000000000 * __temp_312;
    double __temp_310 = 1.00000000000000 + __temp_311;
    double __temp_309 = __temp_310 * p[1];
    double __temp_317 = q[0] * q[1];
    double __temp_318 = q[3] * q[2];
    double __temp_316 = __temp_317 + __temp_318;
    double __temp_315 = 2.00000000000000 * __temp_316 * p[0];
    double __temp_321 = q[1] * q[2];
    double __temp_322 = -1.00000000000000 * q[3] * q[0];
    double __temp_320 = __temp_321 + __temp_322;
    double __temp_319 = 2.00000000000000 * __temp_320 * p[2];
    double __temp_307 = __temp_308 + __temp_309 + __temp_315 + __temp_319;
    double __temp_306 = Math.pow(__temp_307, 2.00000000000000);
    double __temp_324 = -2.00000000000000 * q[0] * p[2];
    double __temp_325 = 2.00000000000000 * q[2] * p[0];
    double __temp_323 = __temp_324 + __temp_325;
    double __temp_328 = -1.00000000000000 * imgP[1];
    double __temp_333 = Math.pow(q[0], 2.00000000000000);
    double __temp_334 = Math.pow(q[2], 2.00000000000000);
    double __temp_332 = __temp_333 + __temp_334;
    double __temp_331 = -2.00000000000000 * __temp_332;
    double __temp_330 = 1.00000000000000 + __temp_331;
    double __temp_329 = __temp_330 * p[1];
    double __temp_337 = q[0] * q[1];
    double __temp_338 = q[3] * q[2];
    double __temp_336 = __temp_337 + __temp_338;
    double __temp_335 = 2.00000000000000 * __temp_336 * p[0];
    double __temp_341 = q[1] * q[2];
    double __temp_342 = -1.00000000000000 * q[3] * q[0];
    double __temp_340 = __temp_341 + __temp_342;
    double __temp_339 = 2.00000000000000 * __temp_340 * p[2];
    double __temp_327 = __temp_328 + __temp_329 + __temp_335 + __temp_339;
    double __temp_326 = Math.pow(__temp_327, -1.00000000000000);
    double __temp_344 = -4.00000000000000 * q[0] * p[1];
    double __temp_345 = -2.00000000000000 * q[3] * p[2];
    double __temp_346 = 2.00000000000000 * q[1] * p[0];
    double __temp_343 = __temp_344 + __temp_345 + __temp_346;
    double __temp_349 = -1.00000000000000 * imgP[1];
    double __temp_354 = Math.pow(q[0], 2.00000000000000);
    double __temp_355 = Math.pow(q[2], 2.00000000000000);
    double __temp_353 = __temp_354 + __temp_355;
    double __temp_352 = -2.00000000000000 * __temp_353;
    double __temp_351 = 1.00000000000000 + __temp_352;
    double __temp_350 = __temp_351 * p[1];
    double __temp_358 = q[0] * q[1];
    double __temp_359 = q[3] * q[2];
    double __temp_357 = __temp_358 + __temp_359;
    double __temp_356 = 2.00000000000000 * __temp_357 * p[0];
    double __temp_362 = q[1] * q[2];
    double __temp_363 = -1.00000000000000 * q[3] * q[0];
    double __temp_361 = __temp_362 + __temp_363;
    double __temp_360 = 2.00000000000000 * __temp_361 * p[2];
    double __temp_348 = __temp_349 + __temp_350 + __temp_356 + __temp_360;
    double __temp_347 = Math.pow(__temp_348, -1.00000000000000);
    double __temp_305 = 4.00000000000000 * __temp_306 * __temp_323 * __temp_326 * __temp_343 * __temp_347;
    double __temp_367 = -1.00000000000000 * imgP[2];
    double __temp_372 = Math.pow(q[0], 2.00000000000000);
    double __temp_373 = Math.pow(q[1], 2.00000000000000);
    double __temp_371 = __temp_372 + __temp_373;
    double __temp_370 = -2.00000000000000 * __temp_371;
    double __temp_369 = 1.00000000000000 + __temp_370;
    double __temp_368 = __temp_369 * p[2];
    double __temp_376 = q[0] * q[2];
    double __temp_377 = -1.00000000000000 * q[3] * q[1];
    double __temp_375 = __temp_376 + __temp_377;
    double __temp_374 = 2.00000000000000 * __temp_375 * p[0];
    double __temp_380 = q[1] * q[2];
    double __temp_381 = q[3] * q[0];
    double __temp_379 = __temp_380 + __temp_381;
    double __temp_378 = 2.00000000000000 * __temp_379 * p[1];
    double __temp_366 = __temp_367 + __temp_368 + __temp_374 + __temp_378;
    double __temp_365 = Math.pow(__temp_366, 2.00000000000000);
    double __temp_383 = -2.00000000000000 * q[1] * p[0];
    double __temp_384 = 2.00000000000000 * q[0] * p[1];
    double __temp_382 = __temp_383 + __temp_384;
    double __temp_387 = -1.00000000000000 * imgP[2];
    double __temp_392 = Math.pow(q[0], 2.00000000000000);
    double __temp_393 = Math.pow(q[1], 2.00000000000000);
    double __temp_391 = __temp_392 + __temp_393;
    double __temp_390 = -2.00000000000000 * __temp_391;
    double __temp_389 = 1.00000000000000 + __temp_390;
    double __temp_388 = __temp_389 * p[2];
    double __temp_396 = q[0] * q[2];
    double __temp_397 = -1.00000000000000 * q[3] * q[1];
    double __temp_395 = __temp_396 + __temp_397;
    double __temp_394 = 2.00000000000000 * __temp_395 * p[0];
    double __temp_400 = q[1] * q[2];
    double __temp_401 = q[3] * q[0];
    double __temp_399 = __temp_400 + __temp_401;
    double __temp_398 = 2.00000000000000 * __temp_399 * p[1];
    double __temp_386 = __temp_387 + __temp_388 + __temp_394 + __temp_398;
    double __temp_385 = Math.pow(__temp_386, -1.00000000000000);
    double __temp_403 = -4.00000000000000 * q[0] * p[2];
    double __temp_404 = 2.00000000000000 * q[2] * p[0];
    double __temp_405 = 2.00000000000000 * q[3] * p[1];
    double __temp_402 = __temp_403 + __temp_404 + __temp_405;
    double __temp_408 = -1.00000000000000 * imgP[2];
    double __temp_413 = Math.pow(q[0], 2.00000000000000);
    double __temp_414 = Math.pow(q[1], 2.00000000000000);
    double __temp_412 = __temp_413 + __temp_414;
    double __temp_411 = -2.00000000000000 * __temp_412;
    double __temp_410 = 1.00000000000000 + __temp_411;
    double __temp_409 = __temp_410 * p[2];
    double __temp_417 = q[0] * q[2];
    double __temp_418 = -1.00000000000000 * q[3] * q[1];
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = 2.00000000000000 * __temp_416 * p[0];
    double __temp_421 = q[1] * q[2];
    double __temp_422 = q[3] * q[0];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[1];
    double __temp_407 = __temp_408 + __temp_409 + __temp_415 + __temp_419;
    double __temp_406 = Math.pow(__temp_407, -1.00000000000000);
    double __temp_364 = 4.00000000000000 * __temp_365 * __temp_382 * __temp_385 * __temp_402 * __temp_406;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_129 + __temp_188 + __temp_247 + __temp_305 + __temp_364;
    return __temp_0;
  }

  public static double partialDerivative_1_0(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = -1.00000000000000 * q[2] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[1];
    double __temp_17 = q[0] * q[2];
    double __temp_18 = q[1] * q[3];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[0];
    double __temp_26 = Math.pow(q[1], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[0];
    double __temp_30 = q[0] * q[1];
    double __temp_31 = -1.00000000000000 * q[2] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[1];
    double __temp_34 = q[0] * q[2];
    double __temp_35 = q[1] * q[3];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = 4.00000000000000 * __temp_2 * p[1] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[1];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[2], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[1];
    double __temp_48 = q[0] * q[1];
    double __temp_49 = q[2] * q[3];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[0];
    double __temp_52 = q[1] * q[2];
    double __temp_53 = -1.00000000000000 * q[0] * q[3];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[2];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[1];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[2], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[1];
    double __temp_65 = q[0] * q[1];
    double __temp_66 = q[2] * q[3];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[0];
    double __temp_69 = q[1] * q[2];
    double __temp_70 = -1.00000000000000 * q[0] * q[3];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[2];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[0] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[1];
    double __temp_84 = -1.00000000000000 * q[2] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[0] * q[2];
    double __temp_88 = q[1] * q[3];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -4.00000000000000 * q[1] * p[0];
    double __temp_91 = 2.00000000000000 * q[0] * p[1];
    double __temp_92 = 2.00000000000000 * q[3] * p[2];
    double __temp_89 = __temp_90 + __temp_91 + __temp_92;
    double __temp_95 = -1.00000000000000 * imgP[0];
    double __temp_100 = Math.pow(q[1], 2.00000000000000);
    double __temp_101 = Math.pow(q[2], 2.00000000000000);
    double __temp_99 = __temp_100 + __temp_101;
    double __temp_98 = -2.00000000000000 * __temp_99;
    double __temp_97 = 1.00000000000000 + __temp_98;
    double __temp_96 = __temp_97 * p[0];
    double __temp_104 = q[0] * q[1];
    double __temp_105 = -1.00000000000000 * q[2] * q[3];
    double __temp_103 = __temp_104 + __temp_105;
    double __temp_102 = 2.00000000000000 * __temp_103 * p[1];
    double __temp_108 = q[0] * q[2];
    double __temp_109 = q[1] * q[3];
    double __temp_107 = __temp_108 + __temp_109;
    double __temp_106 = 2.00000000000000 * __temp_107 * p[2];
    double __temp_94 = __temp_95 + __temp_96 + __temp_102 + __temp_106;
    double __temp_93 = Math.pow(__temp_94, -1.00000000000000);
    double __temp_111 = 2.00000000000000 * q[1] * p[1];
    double __temp_112 = 2.00000000000000 * q[2] * p[2];
    double __temp_110 = __temp_111 + __temp_112;
    double __temp_115 = -1.00000000000000 * imgP[0];
    double __temp_120 = Math.pow(q[1], 2.00000000000000);
    double __temp_121 = Math.pow(q[2], 2.00000000000000);
    double __temp_119 = __temp_120 + __temp_121;
    double __temp_118 = -2.00000000000000 * __temp_119;
    double __temp_117 = 1.00000000000000 + __temp_118;
    double __temp_116 = __temp_117 * p[0];
    double __temp_124 = q[0] * q[1];
    double __temp_125 = -1.00000000000000 * q[2] * q[3];
    double __temp_123 = __temp_124 + __temp_125;
    double __temp_122 = 2.00000000000000 * __temp_123 * p[1];
    double __temp_128 = q[0] * q[2];
    double __temp_129 = q[1] * q[3];
    double __temp_127 = __temp_128 + __temp_129;
    double __temp_126 = 2.00000000000000 * __temp_127 * p[2];
    double __temp_114 = __temp_115 + __temp_116 + __temp_122 + __temp_126;
    double __temp_113 = Math.pow(__temp_114, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_93 * __temp_110 * __temp_113;
    double __temp_133 = -1.00000000000000 * imgP[1];
    double __temp_138 = Math.pow(q[0], 2.00000000000000);
    double __temp_139 = Math.pow(q[2], 2.00000000000000);
    double __temp_137 = __temp_138 + __temp_139;
    double __temp_136 = -2.00000000000000 * __temp_137;
    double __temp_135 = 1.00000000000000 + __temp_136;
    double __temp_134 = __temp_135 * p[1];
    double __temp_142 = q[0] * q[1];
    double __temp_143 = q[2] * q[3];
    double __temp_141 = __temp_142 + __temp_143;
    double __temp_140 = 2.00000000000000 * __temp_141 * p[0];
    double __temp_146 = q[1] * q[2];
    double __temp_147 = -1.00000000000000 * q[0] * q[3];
    double __temp_145 = __temp_146 + __temp_147;
    double __temp_144 = 2.00000000000000 * __temp_145 * p[2];
    double __temp_132 = __temp_133 + __temp_134 + __temp_140 + __temp_144;
    double __temp_131 = Math.pow(__temp_132, 2.00000000000000);
    double __temp_149 = 2.00000000000000 * q[0] * p[0];
    double __temp_150 = 2.00000000000000 * q[2] * p[2];
    double __temp_148 = __temp_149 + __temp_150;
    double __temp_153 = -1.00000000000000 * imgP[1];
    double __temp_158 = Math.pow(q[0], 2.00000000000000);
    double __temp_159 = Math.pow(q[2], 2.00000000000000);
    double __temp_157 = __temp_158 + __temp_159;
    double __temp_156 = -2.00000000000000 * __temp_157;
    double __temp_155 = 1.00000000000000 + __temp_156;
    double __temp_154 = __temp_155 * p[1];
    double __temp_162 = q[0] * q[1];
    double __temp_163 = q[2] * q[3];
    double __temp_161 = __temp_162 + __temp_163;
    double __temp_160 = 2.00000000000000 * __temp_161 * p[0];
    double __temp_166 = q[1] * q[2];
    double __temp_167 = -1.00000000000000 * q[0] * q[3];
    double __temp_165 = __temp_166 + __temp_167;
    double __temp_164 = 2.00000000000000 * __temp_165 * p[2];
    double __temp_152 = __temp_153 + __temp_154 + __temp_160 + __temp_164;
    double __temp_151 = Math.pow(__temp_152, -1.00000000000000);
    double __temp_169 = -4.00000000000000 * q[0] * p[1];
    double __temp_170 = -2.00000000000000 * q[3] * p[2];
    double __temp_171 = 2.00000000000000 * q[1] * p[0];
    double __temp_168 = __temp_169 + __temp_170 + __temp_171;
    double __temp_174 = -1.00000000000000 * imgP[1];
    double __temp_179 = Math.pow(q[0], 2.00000000000000);
    double __temp_180 = Math.pow(q[2], 2.00000000000000);
    double __temp_178 = __temp_179 + __temp_180;
    double __temp_177 = -2.00000000000000 * __temp_178;
    double __temp_176 = 1.00000000000000 + __temp_177;
    double __temp_175 = __temp_176 * p[1];
    double __temp_183 = q[0] * q[1];
    double __temp_184 = q[2] * q[3];
    double __temp_182 = __temp_183 + __temp_184;
    double __temp_181 = 2.00000000000000 * __temp_182 * p[0];
    double __temp_187 = q[1] * q[2];
    double __temp_188 = -1.00000000000000 * q[0] * q[3];
    double __temp_186 = __temp_187 + __temp_188;
    double __temp_185 = 2.00000000000000 * __temp_186 * p[2];
    double __temp_173 = __temp_174 + __temp_175 + __temp_181 + __temp_185;
    double __temp_172 = Math.pow(__temp_173, -1.00000000000000);
    double __temp_130 = -2.00000000000000 * __temp_131 * __temp_148 * __temp_151 * __temp_168 * __temp_172;
    double __temp_192 = -1.00000000000000 * imgP[2];
    double __temp_197 = Math.pow(q[0], 2.00000000000000);
    double __temp_198 = Math.pow(q[1], 2.00000000000000);
    double __temp_196 = __temp_197 + __temp_198;
    double __temp_195 = -2.00000000000000 * __temp_196;
    double __temp_194 = 1.00000000000000 + __temp_195;
    double __temp_193 = __temp_194 * p[2];
    double __temp_201 = q[0] * q[2];
    double __temp_202 = -1.00000000000000 * q[1] * q[3];
    double __temp_200 = __temp_201 + __temp_202;
    double __temp_199 = 2.00000000000000 * __temp_200 * p[0];
    double __temp_205 = q[0] * q[3];
    double __temp_206 = q[1] * q[2];
    double __temp_204 = __temp_205 + __temp_206;
    double __temp_203 = 2.00000000000000 * __temp_204 * p[1];
    double __temp_191 = __temp_192 + __temp_193 + __temp_199 + __temp_203;
    double __temp_190 = Math.pow(__temp_191, 2.00000000000000);
    double __temp_208 = -4.00000000000000 * q[1] * p[2];
    double __temp_209 = -2.00000000000000 * q[3] * p[0];
    double __temp_210 = 2.00000000000000 * q[2] * p[1];
    double __temp_207 = __temp_208 + __temp_209 + __temp_210;
    double __temp_213 = -1.00000000000000 * imgP[2];
    double __temp_218 = Math.pow(q[0], 2.00000000000000);
    double __temp_219 = Math.pow(q[1], 2.00000000000000);
    double __temp_217 = __temp_218 + __temp_219;
    double __temp_216 = -2.00000000000000 * __temp_217;
    double __temp_215 = 1.00000000000000 + __temp_216;
    double __temp_214 = __temp_215 * p[2];
    double __temp_222 = q[0] * q[2];
    double __temp_223 = -1.00000000000000 * q[1] * q[3];
    double __temp_221 = __temp_222 + __temp_223;
    double __temp_220 = 2.00000000000000 * __temp_221 * p[0];
    double __temp_226 = q[0] * q[3];
    double __temp_227 = q[1] * q[2];
    double __temp_225 = __temp_226 + __temp_227;
    double __temp_224 = 2.00000000000000 * __temp_225 * p[1];
    double __temp_212 = __temp_213 + __temp_214 + __temp_220 + __temp_224;
    double __temp_211 = Math.pow(__temp_212, -1.00000000000000);
    double __temp_229 = -4.00000000000000 * q[0] * p[2];
    double __temp_230 = 2.00000000000000 * q[2] * p[0];
    double __temp_231 = 2.00000000000000 * q[3] * p[1];
    double __temp_228 = __temp_229 + __temp_230 + __temp_231;
    double __temp_234 = -1.00000000000000 * imgP[2];
    double __temp_239 = Math.pow(q[0], 2.00000000000000);
    double __temp_240 = Math.pow(q[1], 2.00000000000000);
    double __temp_238 = __temp_239 + __temp_240;
    double __temp_237 = -2.00000000000000 * __temp_238;
    double __temp_236 = 1.00000000000000 + __temp_237;
    double __temp_235 = __temp_236 * p[2];
    double __temp_243 = q[0] * q[2];
    double __temp_244 = -1.00000000000000 * q[1] * q[3];
    double __temp_242 = __temp_243 + __temp_244;
    double __temp_241 = 2.00000000000000 * __temp_242 * p[0];
    double __temp_247 = q[0] * q[3];
    double __temp_248 = q[1] * q[2];
    double __temp_246 = __temp_247 + __temp_248;
    double __temp_245 = 2.00000000000000 * __temp_246 * p[1];
    double __temp_233 = __temp_234 + __temp_235 + __temp_241 + __temp_245;
    double __temp_232 = Math.pow(__temp_233, -1.00000000000000);
    double __temp_189 = -2.00000000000000 * __temp_190 * __temp_207 * __temp_211 * __temp_228 * __temp_232;
    double __temp_252 = -1.00000000000000 * imgP[0];
    double __temp_257 = Math.pow(q[1], 2.00000000000000);
    double __temp_258 = Math.pow(q[2], 2.00000000000000);
    double __temp_256 = __temp_257 + __temp_258;
    double __temp_255 = -2.00000000000000 * __temp_256;
    double __temp_254 = 1.00000000000000 + __temp_255;
    double __temp_253 = __temp_254 * p[0];
    double __temp_261 = q[0] * q[1];
    double __temp_262 = -1.00000000000000 * q[2] * q[3];
    double __temp_260 = __temp_261 + __temp_262;
    double __temp_259 = 2.00000000000000 * __temp_260 * p[1];
    double __temp_265 = q[0] * q[2];
    double __temp_266 = q[1] * q[3];
    double __temp_264 = __temp_265 + __temp_266;
    double __temp_263 = 2.00000000000000 * __temp_264 * p[2];
    double __temp_251 = __temp_252 + __temp_253 + __temp_259 + __temp_263;
    double __temp_250 = Math.pow(__temp_251, 2.00000000000000);
    double __temp_268 = 2.00000000000000 * q[1] * p[1];
    double __temp_269 = 2.00000000000000 * q[2] * p[2];
    double __temp_267 = __temp_268 + __temp_269;
    double __temp_272 = -1.00000000000000 * imgP[0];
    double __temp_277 = Math.pow(q[1], 2.00000000000000);
    double __temp_278 = Math.pow(q[2], 2.00000000000000);
    double __temp_276 = __temp_277 + __temp_278;
    double __temp_275 = -2.00000000000000 * __temp_276;
    double __temp_274 = 1.00000000000000 + __temp_275;
    double __temp_273 = __temp_274 * p[0];
    double __temp_281 = q[0] * q[1];
    double __temp_282 = -1.00000000000000 * q[2] * q[3];
    double __temp_280 = __temp_281 + __temp_282;
    double __temp_279 = 2.00000000000000 * __temp_280 * p[1];
    double __temp_285 = q[0] * q[2];
    double __temp_286 = q[1] * q[3];
    double __temp_284 = __temp_285 + __temp_286;
    double __temp_283 = 2.00000000000000 * __temp_284 * p[2];
    double __temp_271 = __temp_272 + __temp_273 + __temp_279 + __temp_283;
    double __temp_270 = Math.pow(__temp_271, -1.00000000000000);
    double __temp_288 = -4.00000000000000 * q[1] * p[0];
    double __temp_289 = 2.00000000000000 * q[0] * p[1];
    double __temp_290 = 2.00000000000000 * q[3] * p[2];
    double __temp_287 = __temp_288 + __temp_289 + __temp_290;
    double __temp_293 = -1.00000000000000 * imgP[0];
    double __temp_298 = Math.pow(q[1], 2.00000000000000);
    double __temp_299 = Math.pow(q[2], 2.00000000000000);
    double __temp_297 = __temp_298 + __temp_299;
    double __temp_296 = -2.00000000000000 * __temp_297;
    double __temp_295 = 1.00000000000000 + __temp_296;
    double __temp_294 = __temp_295 * p[0];
    double __temp_302 = q[0] * q[1];
    double __temp_303 = -1.00000000000000 * q[2] * q[3];
    double __temp_301 = __temp_302 + __temp_303;
    double __temp_300 = 2.00000000000000 * __temp_301 * p[1];
    double __temp_306 = q[0] * q[2];
    double __temp_307 = q[1] * q[3];
    double __temp_305 = __temp_306 + __temp_307;
    double __temp_304 = 2.00000000000000 * __temp_305 * p[2];
    double __temp_292 = __temp_293 + __temp_294 + __temp_300 + __temp_304;
    double __temp_291 = Math.pow(__temp_292, -1.00000000000000);
    double __temp_249 = 4.00000000000000 * __temp_250 * __temp_267 * __temp_270 * __temp_287 * __temp_291;
    double __temp_311 = -1.00000000000000 * imgP[1];
    double __temp_316 = Math.pow(q[0], 2.00000000000000);
    double __temp_317 = Math.pow(q[2], 2.00000000000000);
    double __temp_315 = __temp_316 + __temp_317;
    double __temp_314 = -2.00000000000000 * __temp_315;
    double __temp_313 = 1.00000000000000 + __temp_314;
    double __temp_312 = __temp_313 * p[1];
    double __temp_320 = q[0] * q[1];
    double __temp_321 = q[2] * q[3];
    double __temp_319 = __temp_320 + __temp_321;
    double __temp_318 = 2.00000000000000 * __temp_319 * p[0];
    double __temp_324 = q[1] * q[2];
    double __temp_325 = -1.00000000000000 * q[0] * q[3];
    double __temp_323 = __temp_324 + __temp_325;
    double __temp_322 = 2.00000000000000 * __temp_323 * p[2];
    double __temp_310 = __temp_311 + __temp_312 + __temp_318 + __temp_322;
    double __temp_309 = Math.pow(__temp_310, 2.00000000000000);
    double __temp_327 = -4.00000000000000 * q[0] * p[1];
    double __temp_328 = -2.00000000000000 * q[3] * p[2];
    double __temp_329 = 2.00000000000000 * q[1] * p[0];
    double __temp_326 = __temp_327 + __temp_328 + __temp_329;
    double __temp_332 = -1.00000000000000 * imgP[1];
    double __temp_337 = Math.pow(q[0], 2.00000000000000);
    double __temp_338 = Math.pow(q[2], 2.00000000000000);
    double __temp_336 = __temp_337 + __temp_338;
    double __temp_335 = -2.00000000000000 * __temp_336;
    double __temp_334 = 1.00000000000000 + __temp_335;
    double __temp_333 = __temp_334 * p[1];
    double __temp_341 = q[0] * q[1];
    double __temp_342 = q[2] * q[3];
    double __temp_340 = __temp_341 + __temp_342;
    double __temp_339 = 2.00000000000000 * __temp_340 * p[0];
    double __temp_345 = q[1] * q[2];
    double __temp_346 = -1.00000000000000 * q[0] * q[3];
    double __temp_344 = __temp_345 + __temp_346;
    double __temp_343 = 2.00000000000000 * __temp_344 * p[2];
    double __temp_331 = __temp_332 + __temp_333 + __temp_339 + __temp_343;
    double __temp_330 = Math.pow(__temp_331, -1.00000000000000);
    double __temp_348 = 2.00000000000000 * q[0] * p[0];
    double __temp_349 = 2.00000000000000 * q[2] * p[2];
    double __temp_347 = __temp_348 + __temp_349;
    double __temp_352 = -1.00000000000000 * imgP[1];
    double __temp_357 = Math.pow(q[0], 2.00000000000000);
    double __temp_358 = Math.pow(q[2], 2.00000000000000);
    double __temp_356 = __temp_357 + __temp_358;
    double __temp_355 = -2.00000000000000 * __temp_356;
    double __temp_354 = 1.00000000000000 + __temp_355;
    double __temp_353 = __temp_354 * p[1];
    double __temp_361 = q[0] * q[1];
    double __temp_362 = q[2] * q[3];
    double __temp_360 = __temp_361 + __temp_362;
    double __temp_359 = 2.00000000000000 * __temp_360 * p[0];
    double __temp_365 = q[1] * q[2];
    double __temp_366 = -1.00000000000000 * q[0] * q[3];
    double __temp_364 = __temp_365 + __temp_366;
    double __temp_363 = 2.00000000000000 * __temp_364 * p[2];
    double __temp_351 = __temp_352 + __temp_353 + __temp_359 + __temp_363;
    double __temp_350 = Math.pow(__temp_351, -1.00000000000000);
    double __temp_308 = 4.00000000000000 * __temp_309 * __temp_326 * __temp_330 * __temp_347 * __temp_350;
    double __temp_370 = -1.00000000000000 * imgP[2];
    double __temp_375 = Math.pow(q[0], 2.00000000000000);
    double __temp_376 = Math.pow(q[1], 2.00000000000000);
    double __temp_374 = __temp_375 + __temp_376;
    double __temp_373 = -2.00000000000000 * __temp_374;
    double __temp_372 = 1.00000000000000 + __temp_373;
    double __temp_371 = __temp_372 * p[2];
    double __temp_379 = q[0] * q[2];
    double __temp_380 = -1.00000000000000 * q[1] * q[3];
    double __temp_378 = __temp_379 + __temp_380;
    double __temp_377 = 2.00000000000000 * __temp_378 * p[0];
    double __temp_383 = q[0] * q[3];
    double __temp_384 = q[1] * q[2];
    double __temp_382 = __temp_383 + __temp_384;
    double __temp_381 = 2.00000000000000 * __temp_382 * p[1];
    double __temp_369 = __temp_370 + __temp_371 + __temp_377 + __temp_381;
    double __temp_368 = Math.pow(__temp_369, 2.00000000000000);
    double __temp_386 = -4.00000000000000 * q[0] * p[2];
    double __temp_387 = 2.00000000000000 * q[2] * p[0];
    double __temp_388 = 2.00000000000000 * q[3] * p[1];
    double __temp_385 = __temp_386 + __temp_387 + __temp_388;
    double __temp_391 = -1.00000000000000 * imgP[2];
    double __temp_396 = Math.pow(q[0], 2.00000000000000);
    double __temp_397 = Math.pow(q[1], 2.00000000000000);
    double __temp_395 = __temp_396 + __temp_397;
    double __temp_394 = -2.00000000000000 * __temp_395;
    double __temp_393 = 1.00000000000000 + __temp_394;
    double __temp_392 = __temp_393 * p[2];
    double __temp_400 = q[0] * q[2];
    double __temp_401 = -1.00000000000000 * q[1] * q[3];
    double __temp_399 = __temp_400 + __temp_401;
    double __temp_398 = 2.00000000000000 * __temp_399 * p[0];
    double __temp_404 = q[0] * q[3];
    double __temp_405 = q[1] * q[2];
    double __temp_403 = __temp_404 + __temp_405;
    double __temp_402 = 2.00000000000000 * __temp_403 * p[1];
    double __temp_390 = __temp_391 + __temp_392 + __temp_398 + __temp_402;
    double __temp_389 = Math.pow(__temp_390, -1.00000000000000);
    double __temp_407 = -4.00000000000000 * q[1] * p[2];
    double __temp_408 = -2.00000000000000 * q[3] * p[0];
    double __temp_409 = 2.00000000000000 * q[2] * p[1];
    double __temp_406 = __temp_407 + __temp_408 + __temp_409;
    double __temp_412 = -1.00000000000000 * imgP[2];
    double __temp_417 = Math.pow(q[0], 2.00000000000000);
    double __temp_418 = Math.pow(q[1], 2.00000000000000);
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = -2.00000000000000 * __temp_416;
    double __temp_414 = 1.00000000000000 + __temp_415;
    double __temp_413 = __temp_414 * p[2];
    double __temp_421 = q[0] * q[2];
    double __temp_422 = -1.00000000000000 * q[1] * q[3];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[0];
    double __temp_425 = q[0] * q[3];
    double __temp_426 = q[1] * q[2];
    double __temp_424 = __temp_425 + __temp_426;
    double __temp_423 = 2.00000000000000 * __temp_424 * p[1];
    double __temp_411 = __temp_412 + __temp_413 + __temp_419 + __temp_423;
    double __temp_410 = Math.pow(__temp_411, -1.00000000000000);
    double __temp_367 = 4.00000000000000 * __temp_368 * __temp_385 * __temp_389 * __temp_406 * __temp_410;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_130 + __temp_189 + __temp_249 + __temp_308 + __temp_367;
    return __temp_0;
  }

  public static double partialDerivative_1_1(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[2];
    double __temp_14 = q[1] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[2];
    double __temp_17 = q[1] * q[0];
    double __temp_18 = -1.00000000000000 * q[2] * q[3];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[1];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[0];
    double __temp_26 = Math.pow(q[1], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[0];
    double __temp_30 = q[0] * q[2];
    double __temp_31 = q[1] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[2];
    double __temp_34 = q[1] * q[0];
    double __temp_35 = -1.00000000000000 * q[2] * q[3];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[1];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = -8.00000000000000 * __temp_2 * p[0] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[2];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[1], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[2];
    double __temp_48 = q[0] * q[2];
    double __temp_49 = -1.00000000000000 * q[1] * q[3];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[0];
    double __temp_52 = q[0] * q[3];
    double __temp_53 = q[1] * q[2];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[1];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[2];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[1], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[2];
    double __temp_65 = q[0] * q[2];
    double __temp_66 = -1.00000000000000 * q[1] * q[3];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[0];
    double __temp_69 = q[0] * q[3];
    double __temp_70 = q[1] * q[2];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[1];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = -8.00000000000000 * __temp_37 * p[2] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[2];
    double __temp_84 = q[1] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[2];
    double __temp_87 = q[1] * q[0];
    double __temp_88 = -1.00000000000000 * q[2] * q[3];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[1];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -4.00000000000000 * q[1] * p[0];
    double __temp_91 = 2.00000000000000 * q[0] * p[1];
    double __temp_92 = 2.00000000000000 * q[3] * p[2];
    double __temp_89 = __temp_90 + __temp_91 + __temp_92;
    double __temp_95 = -1.00000000000000 * imgP[0];
    double __temp_100 = Math.pow(q[1], 2.00000000000000);
    double __temp_101 = Math.pow(q[2], 2.00000000000000);
    double __temp_99 = __temp_100 + __temp_101;
    double __temp_98 = -2.00000000000000 * __temp_99;
    double __temp_97 = 1.00000000000000 + __temp_98;
    double __temp_96 = __temp_97 * p[0];
    double __temp_104 = q[0] * q[2];
    double __temp_105 = q[1] * q[3];
    double __temp_103 = __temp_104 + __temp_105;
    double __temp_102 = 2.00000000000000 * __temp_103 * p[2];
    double __temp_108 = q[1] * q[0];
    double __temp_109 = -1.00000000000000 * q[2] * q[3];
    double __temp_107 = __temp_108 + __temp_109;
    double __temp_106 = 2.00000000000000 * __temp_107 * p[1];
    double __temp_94 = __temp_95 + __temp_96 + __temp_102 + __temp_106;
    double __temp_93 = Math.pow(__temp_94, -1.00000000000000);
    double __temp_111 = -4.00000000000000 * q[1] * p[0];
    double __temp_112 = 2.00000000000000 * q[0] * p[1];
    double __temp_113 = 2.00000000000000 * q[3] * p[2];
    double __temp_110 = __temp_111 + __temp_112 + __temp_113;
    double __temp_116 = -1.00000000000000 * imgP[0];
    double __temp_121 = Math.pow(q[1], 2.00000000000000);
    double __temp_122 = Math.pow(q[2], 2.00000000000000);
    double __temp_120 = __temp_121 + __temp_122;
    double __temp_119 = -2.00000000000000 * __temp_120;
    double __temp_118 = 1.00000000000000 + __temp_119;
    double __temp_117 = __temp_118 * p[0];
    double __temp_125 = q[0] * q[2];
    double __temp_126 = q[1] * q[3];
    double __temp_124 = __temp_125 + __temp_126;
    double __temp_123 = 2.00000000000000 * __temp_124 * p[2];
    double __temp_129 = q[1] * q[0];
    double __temp_130 = -1.00000000000000 * q[2] * q[3];
    double __temp_128 = __temp_129 + __temp_130;
    double __temp_127 = 2.00000000000000 * __temp_128 * p[1];
    double __temp_115 = __temp_116 + __temp_117 + __temp_123 + __temp_127;
    double __temp_114 = Math.pow(__temp_115, -1.00000000000000);
    double __temp_71 = 2.00000000000000 * __temp_72 * __temp_89 * __temp_93 * __temp_110 * __temp_114;
    double __temp_134 = -1.00000000000000 * imgP[1];
    double __temp_139 = Math.pow(q[0], 2.00000000000000);
    double __temp_140 = Math.pow(q[2], 2.00000000000000);
    double __temp_138 = __temp_139 + __temp_140;
    double __temp_137 = -2.00000000000000 * __temp_138;
    double __temp_136 = 1.00000000000000 + __temp_137;
    double __temp_135 = __temp_136 * p[1];
    double __temp_143 = q[1] * q[0];
    double __temp_144 = q[2] * q[3];
    double __temp_142 = __temp_143 + __temp_144;
    double __temp_141 = 2.00000000000000 * __temp_142 * p[0];
    double __temp_147 = q[1] * q[2];
    double __temp_148 = -1.00000000000000 * q[0] * q[3];
    double __temp_146 = __temp_147 + __temp_148;
    double __temp_145 = 2.00000000000000 * __temp_146 * p[2];
    double __temp_133 = __temp_134 + __temp_135 + __temp_141 + __temp_145;
    double __temp_132 = Math.pow(__temp_133, 2.00000000000000);
    double __temp_150 = 2.00000000000000 * q[0] * p[0];
    double __temp_151 = 2.00000000000000 * q[2] * p[2];
    double __temp_149 = __temp_150 + __temp_151;
    double __temp_154 = -1.00000000000000 * imgP[1];
    double __temp_159 = Math.pow(q[0], 2.00000000000000);
    double __temp_160 = Math.pow(q[2], 2.00000000000000);
    double __temp_158 = __temp_159 + __temp_160;
    double __temp_157 = -2.00000000000000 * __temp_158;
    double __temp_156 = 1.00000000000000 + __temp_157;
    double __temp_155 = __temp_156 * p[1];
    double __temp_163 = q[1] * q[0];
    double __temp_164 = q[2] * q[3];
    double __temp_162 = __temp_163 + __temp_164;
    double __temp_161 = 2.00000000000000 * __temp_162 * p[0];
    double __temp_167 = q[1] * q[2];
    double __temp_168 = -1.00000000000000 * q[0] * q[3];
    double __temp_166 = __temp_167 + __temp_168;
    double __temp_165 = 2.00000000000000 * __temp_166 * p[2];
    double __temp_153 = __temp_154 + __temp_155 + __temp_161 + __temp_165;
    double __temp_152 = Math.pow(__temp_153, -1.00000000000000);
    double __temp_170 = 2.00000000000000 * q[0] * p[0];
    double __temp_171 = 2.00000000000000 * q[2] * p[2];
    double __temp_169 = __temp_170 + __temp_171;
    double __temp_174 = -1.00000000000000 * imgP[1];
    double __temp_179 = Math.pow(q[0], 2.00000000000000);
    double __temp_180 = Math.pow(q[2], 2.00000000000000);
    double __temp_178 = __temp_179 + __temp_180;
    double __temp_177 = -2.00000000000000 * __temp_178;
    double __temp_176 = 1.00000000000000 + __temp_177;
    double __temp_175 = __temp_176 * p[1];
    double __temp_183 = q[1] * q[0];
    double __temp_184 = q[2] * q[3];
    double __temp_182 = __temp_183 + __temp_184;
    double __temp_181 = 2.00000000000000 * __temp_182 * p[0];
    double __temp_187 = q[1] * q[2];
    double __temp_188 = -1.00000000000000 * q[0] * q[3];
    double __temp_186 = __temp_187 + __temp_188;
    double __temp_185 = 2.00000000000000 * __temp_186 * p[2];
    double __temp_173 = __temp_174 + __temp_175 + __temp_181 + __temp_185;
    double __temp_172 = Math.pow(__temp_173, -1.00000000000000);
    double __temp_131 = 2.00000000000000 * __temp_132 * __temp_149 * __temp_152 * __temp_169 * __temp_172;
    double __temp_192 = -1.00000000000000 * imgP[2];
    double __temp_197 = Math.pow(q[0], 2.00000000000000);
    double __temp_198 = Math.pow(q[1], 2.00000000000000);
    double __temp_196 = __temp_197 + __temp_198;
    double __temp_195 = -2.00000000000000 * __temp_196;
    double __temp_194 = 1.00000000000000 + __temp_195;
    double __temp_193 = __temp_194 * p[2];
    double __temp_201 = q[0] * q[2];
    double __temp_202 = -1.00000000000000 * q[1] * q[3];
    double __temp_200 = __temp_201 + __temp_202;
    double __temp_199 = 2.00000000000000 * __temp_200 * p[0];
    double __temp_205 = q[0] * q[3];
    double __temp_206 = q[1] * q[2];
    double __temp_204 = __temp_205 + __temp_206;
    double __temp_203 = 2.00000000000000 * __temp_204 * p[1];
    double __temp_191 = __temp_192 + __temp_193 + __temp_199 + __temp_203;
    double __temp_190 = Math.pow(__temp_191, 2.00000000000000);
    double __temp_208 = -4.00000000000000 * q[1] * p[2];
    double __temp_209 = -2.00000000000000 * q[3] * p[0];
    double __temp_210 = 2.00000000000000 * q[2] * p[1];
    double __temp_207 = __temp_208 + __temp_209 + __temp_210;
    double __temp_213 = -1.00000000000000 * imgP[2];
    double __temp_218 = Math.pow(q[0], 2.00000000000000);
    double __temp_219 = Math.pow(q[1], 2.00000000000000);
    double __temp_217 = __temp_218 + __temp_219;
    double __temp_216 = -2.00000000000000 * __temp_217;
    double __temp_215 = 1.00000000000000 + __temp_216;
    double __temp_214 = __temp_215 * p[2];
    double __temp_222 = q[0] * q[2];
    double __temp_223 = -1.00000000000000 * q[1] * q[3];
    double __temp_221 = __temp_222 + __temp_223;
    double __temp_220 = 2.00000000000000 * __temp_221 * p[0];
    double __temp_226 = q[0] * q[3];
    double __temp_227 = q[1] * q[2];
    double __temp_225 = __temp_226 + __temp_227;
    double __temp_224 = 2.00000000000000 * __temp_225 * p[1];
    double __temp_212 = __temp_213 + __temp_214 + __temp_220 + __temp_224;
    double __temp_211 = Math.pow(__temp_212, -1.00000000000000);
    double __temp_229 = -4.00000000000000 * q[1] * p[2];
    double __temp_230 = -2.00000000000000 * q[3] * p[0];
    double __temp_231 = 2.00000000000000 * q[2] * p[1];
    double __temp_228 = __temp_229 + __temp_230 + __temp_231;
    double __temp_234 = -1.00000000000000 * imgP[2];
    double __temp_239 = Math.pow(q[0], 2.00000000000000);
    double __temp_240 = Math.pow(q[1], 2.00000000000000);
    double __temp_238 = __temp_239 + __temp_240;
    double __temp_237 = -2.00000000000000 * __temp_238;
    double __temp_236 = 1.00000000000000 + __temp_237;
    double __temp_235 = __temp_236 * p[2];
    double __temp_243 = q[0] * q[2];
    double __temp_244 = -1.00000000000000 * q[1] * q[3];
    double __temp_242 = __temp_243 + __temp_244;
    double __temp_241 = 2.00000000000000 * __temp_242 * p[0];
    double __temp_247 = q[0] * q[3];
    double __temp_248 = q[1] * q[2];
    double __temp_246 = __temp_247 + __temp_248;
    double __temp_245 = 2.00000000000000 * __temp_246 * p[1];
    double __temp_233 = __temp_234 + __temp_235 + __temp_241 + __temp_245;
    double __temp_232 = Math.pow(__temp_233, -1.00000000000000);
    double __temp_189 = 2.00000000000000 * __temp_190 * __temp_207 * __temp_211 * __temp_228 * __temp_232;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_131 + __temp_189;
    return __temp_0;
  }

  public static double partialDerivative_1_2(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[1];
    double __temp_9 = Math.pow(q[0], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[1];
    double __temp_13 = q[1] * q[0];
    double __temp_14 = q[2] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[0];
    double __temp_17 = q[2] * q[1];
    double __temp_18 = -1.00000000000000 * q[0] * q[3];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[1];
    double __temp_26 = Math.pow(q[0], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[1];
    double __temp_30 = q[1] * q[0];
    double __temp_31 = q[2] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[0];
    double __temp_34 = q[2] * q[1];
    double __temp_35 = -1.00000000000000 * q[0] * q[3];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = 4.00000000000000 * __temp_2 * p[2] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[2];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[1], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[2];
    double __temp_48 = q[0] * q[3];
    double __temp_49 = q[2] * q[1];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[1];
    double __temp_52 = q[2] * q[0];
    double __temp_53 = -1.00000000000000 * q[1] * q[3];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[0];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[2];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[1], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[2];
    double __temp_65 = q[0] * q[3];
    double __temp_66 = q[2] * q[1];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[1];
    double __temp_69 = q[2] * q[0];
    double __temp_70 = -1.00000000000000 * q[1] * q[3];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[0];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[1] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[1] * q[0];
    double __temp_84 = -1.00000000000000 * q[2] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[1] * q[3];
    double __temp_88 = q[2] * q[0];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -4.00000000000000 * q[1] * p[0];
    double __temp_91 = 2.00000000000000 * q[0] * p[1];
    double __temp_92 = 2.00000000000000 * q[3] * p[2];
    double __temp_89 = __temp_90 + __temp_91 + __temp_92;
    double __temp_95 = -1.00000000000000 * imgP[0];
    double __temp_100 = Math.pow(q[1], 2.00000000000000);
    double __temp_101 = Math.pow(q[2], 2.00000000000000);
    double __temp_99 = __temp_100 + __temp_101;
    double __temp_98 = -2.00000000000000 * __temp_99;
    double __temp_97 = 1.00000000000000 + __temp_98;
    double __temp_96 = __temp_97 * p[0];
    double __temp_104 = q[1] * q[0];
    double __temp_105 = -1.00000000000000 * q[2] * q[3];
    double __temp_103 = __temp_104 + __temp_105;
    double __temp_102 = 2.00000000000000 * __temp_103 * p[1];
    double __temp_108 = q[1] * q[3];
    double __temp_109 = q[2] * q[0];
    double __temp_107 = __temp_108 + __temp_109;
    double __temp_106 = 2.00000000000000 * __temp_107 * p[2];
    double __temp_94 = __temp_95 + __temp_96 + __temp_102 + __temp_106;
    double __temp_93 = Math.pow(__temp_94, -1.00000000000000);
    double __temp_111 = -4.00000000000000 * q[2] * p[0];
    double __temp_112 = -2.00000000000000 * q[3] * p[1];
    double __temp_113 = 2.00000000000000 * q[0] * p[2];
    double __temp_110 = __temp_111 + __temp_112 + __temp_113;
    double __temp_116 = -1.00000000000000 * imgP[0];
    double __temp_121 = Math.pow(q[1], 2.00000000000000);
    double __temp_122 = Math.pow(q[2], 2.00000000000000);
    double __temp_120 = __temp_121 + __temp_122;
    double __temp_119 = -2.00000000000000 * __temp_120;
    double __temp_118 = 1.00000000000000 + __temp_119;
    double __temp_117 = __temp_118 * p[0];
    double __temp_125 = q[1] * q[0];
    double __temp_126 = -1.00000000000000 * q[2] * q[3];
    double __temp_124 = __temp_125 + __temp_126;
    double __temp_123 = 2.00000000000000 * __temp_124 * p[1];
    double __temp_129 = q[1] * q[3];
    double __temp_130 = q[2] * q[0];
    double __temp_128 = __temp_129 + __temp_130;
    double __temp_127 = 2.00000000000000 * __temp_128 * p[2];
    double __temp_115 = __temp_116 + __temp_117 + __temp_123 + __temp_127;
    double __temp_114 = Math.pow(__temp_115, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_93 * __temp_110 * __temp_114;
    double __temp_134 = -1.00000000000000 * imgP[1];
    double __temp_139 = Math.pow(q[0], 2.00000000000000);
    double __temp_140 = Math.pow(q[2], 2.00000000000000);
    double __temp_138 = __temp_139 + __temp_140;
    double __temp_137 = -2.00000000000000 * __temp_138;
    double __temp_136 = 1.00000000000000 + __temp_137;
    double __temp_135 = __temp_136 * p[1];
    double __temp_143 = q[1] * q[0];
    double __temp_144 = q[2] * q[3];
    double __temp_142 = __temp_143 + __temp_144;
    double __temp_141 = 2.00000000000000 * __temp_142 * p[0];
    double __temp_147 = q[2] * q[1];
    double __temp_148 = -1.00000000000000 * q[0] * q[3];
    double __temp_146 = __temp_147 + __temp_148;
    double __temp_145 = 2.00000000000000 * __temp_146 * p[2];
    double __temp_133 = __temp_134 + __temp_135 + __temp_141 + __temp_145;
    double __temp_132 = Math.pow(__temp_133, 2.00000000000000);
    double __temp_150 = 2.00000000000000 * q[0] * p[0];
    double __temp_151 = 2.00000000000000 * q[2] * p[2];
    double __temp_149 = __temp_150 + __temp_151;
    double __temp_154 = -1.00000000000000 * imgP[1];
    double __temp_159 = Math.pow(q[0], 2.00000000000000);
    double __temp_160 = Math.pow(q[2], 2.00000000000000);
    double __temp_158 = __temp_159 + __temp_160;
    double __temp_157 = -2.00000000000000 * __temp_158;
    double __temp_156 = 1.00000000000000 + __temp_157;
    double __temp_155 = __temp_156 * p[1];
    double __temp_163 = q[1] * q[0];
    double __temp_164 = q[2] * q[3];
    double __temp_162 = __temp_163 + __temp_164;
    double __temp_161 = 2.00000000000000 * __temp_162 * p[0];
    double __temp_167 = q[2] * q[1];
    double __temp_168 = -1.00000000000000 * q[0] * q[3];
    double __temp_166 = __temp_167 + __temp_168;
    double __temp_165 = 2.00000000000000 * __temp_166 * p[2];
    double __temp_153 = __temp_154 + __temp_155 + __temp_161 + __temp_165;
    double __temp_152 = Math.pow(__temp_153, -1.00000000000000);
    double __temp_170 = -4.00000000000000 * q[2] * p[1];
    double __temp_171 = 2.00000000000000 * q[1] * p[2];
    double __temp_172 = 2.00000000000000 * q[3] * p[0];
    double __temp_169 = __temp_170 + __temp_171 + __temp_172;
    double __temp_175 = -1.00000000000000 * imgP[1];
    double __temp_180 = Math.pow(q[0], 2.00000000000000);
    double __temp_181 = Math.pow(q[2], 2.00000000000000);
    double __temp_179 = __temp_180 + __temp_181;
    double __temp_178 = -2.00000000000000 * __temp_179;
    double __temp_177 = 1.00000000000000 + __temp_178;
    double __temp_176 = __temp_177 * p[1];
    double __temp_184 = q[1] * q[0];
    double __temp_185 = q[2] * q[3];
    double __temp_183 = __temp_184 + __temp_185;
    double __temp_182 = 2.00000000000000 * __temp_183 * p[0];
    double __temp_188 = q[2] * q[1];
    double __temp_189 = -1.00000000000000 * q[0] * q[3];
    double __temp_187 = __temp_188 + __temp_189;
    double __temp_186 = 2.00000000000000 * __temp_187 * p[2];
    double __temp_174 = __temp_175 + __temp_176 + __temp_182 + __temp_186;
    double __temp_173 = Math.pow(__temp_174, -1.00000000000000);
    double __temp_131 = -2.00000000000000 * __temp_132 * __temp_149 * __temp_152 * __temp_169 * __temp_173;
    double __temp_193 = -1.00000000000000 * imgP[2];
    double __temp_198 = Math.pow(q[0], 2.00000000000000);
    double __temp_199 = Math.pow(q[1], 2.00000000000000);
    double __temp_197 = __temp_198 + __temp_199;
    double __temp_196 = -2.00000000000000 * __temp_197;
    double __temp_195 = 1.00000000000000 + __temp_196;
    double __temp_194 = __temp_195 * p[2];
    double __temp_202 = q[0] * q[3];
    double __temp_203 = q[2] * q[1];
    double __temp_201 = __temp_202 + __temp_203;
    double __temp_200 = 2.00000000000000 * __temp_201 * p[1];
    double __temp_206 = q[2] * q[0];
    double __temp_207 = -1.00000000000000 * q[1] * q[3];
    double __temp_205 = __temp_206 + __temp_207;
    double __temp_204 = 2.00000000000000 * __temp_205 * p[0];
    double __temp_192 = __temp_193 + __temp_194 + __temp_200 + __temp_204;
    double __temp_191 = Math.pow(__temp_192, 2.00000000000000);
    double __temp_209 = -4.00000000000000 * q[1] * p[2];
    double __temp_210 = -2.00000000000000 * q[3] * p[0];
    double __temp_211 = 2.00000000000000 * q[2] * p[1];
    double __temp_208 = __temp_209 + __temp_210 + __temp_211;
    double __temp_214 = -1.00000000000000 * imgP[2];
    double __temp_219 = Math.pow(q[0], 2.00000000000000);
    double __temp_220 = Math.pow(q[1], 2.00000000000000);
    double __temp_218 = __temp_219 + __temp_220;
    double __temp_217 = -2.00000000000000 * __temp_218;
    double __temp_216 = 1.00000000000000 + __temp_217;
    double __temp_215 = __temp_216 * p[2];
    double __temp_223 = q[0] * q[3];
    double __temp_224 = q[2] * q[1];
    double __temp_222 = __temp_223 + __temp_224;
    double __temp_221 = 2.00000000000000 * __temp_222 * p[1];
    double __temp_227 = q[2] * q[0];
    double __temp_228 = -1.00000000000000 * q[1] * q[3];
    double __temp_226 = __temp_227 + __temp_228;
    double __temp_225 = 2.00000000000000 * __temp_226 * p[0];
    double __temp_213 = __temp_214 + __temp_215 + __temp_221 + __temp_225;
    double __temp_212 = Math.pow(__temp_213, -1.00000000000000);
    double __temp_230 = 2.00000000000000 * q[0] * p[0];
    double __temp_231 = 2.00000000000000 * q[1] * p[1];
    double __temp_229 = __temp_230 + __temp_231;
    double __temp_234 = -1.00000000000000 * imgP[2];
    double __temp_239 = Math.pow(q[0], 2.00000000000000);
    double __temp_240 = Math.pow(q[1], 2.00000000000000);
    double __temp_238 = __temp_239 + __temp_240;
    double __temp_237 = -2.00000000000000 * __temp_238;
    double __temp_236 = 1.00000000000000 + __temp_237;
    double __temp_235 = __temp_236 * p[2];
    double __temp_243 = q[0] * q[3];
    double __temp_244 = q[2] * q[1];
    double __temp_242 = __temp_243 + __temp_244;
    double __temp_241 = 2.00000000000000 * __temp_242 * p[1];
    double __temp_247 = q[2] * q[0];
    double __temp_248 = -1.00000000000000 * q[1] * q[3];
    double __temp_246 = __temp_247 + __temp_248;
    double __temp_245 = 2.00000000000000 * __temp_246 * p[0];
    double __temp_233 = __temp_234 + __temp_235 + __temp_241 + __temp_245;
    double __temp_232 = Math.pow(__temp_233, -1.00000000000000);
    double __temp_190 = -2.00000000000000 * __temp_191 * __temp_208 * __temp_212 * __temp_229 * __temp_232;
    double __temp_252 = -1.00000000000000 * imgP[0];
    double __temp_257 = Math.pow(q[1], 2.00000000000000);
    double __temp_258 = Math.pow(q[2], 2.00000000000000);
    double __temp_256 = __temp_257 + __temp_258;
    double __temp_255 = -2.00000000000000 * __temp_256;
    double __temp_254 = 1.00000000000000 + __temp_255;
    double __temp_253 = __temp_254 * p[0];
    double __temp_261 = q[1] * q[0];
    double __temp_262 = -1.00000000000000 * q[2] * q[3];
    double __temp_260 = __temp_261 + __temp_262;
    double __temp_259 = 2.00000000000000 * __temp_260 * p[1];
    double __temp_265 = q[1] * q[3];
    double __temp_266 = q[2] * q[0];
    double __temp_264 = __temp_265 + __temp_266;
    double __temp_263 = 2.00000000000000 * __temp_264 * p[2];
    double __temp_251 = __temp_252 + __temp_253 + __temp_259 + __temp_263;
    double __temp_250 = Math.pow(__temp_251, 2.00000000000000);
    double __temp_268 = -4.00000000000000 * q[2] * p[0];
    double __temp_269 = -2.00000000000000 * q[3] * p[1];
    double __temp_270 = 2.00000000000000 * q[0] * p[2];
    double __temp_267 = __temp_268 + __temp_269 + __temp_270;
    double __temp_273 = -1.00000000000000 * imgP[0];
    double __temp_278 = Math.pow(q[1], 2.00000000000000);
    double __temp_279 = Math.pow(q[2], 2.00000000000000);
    double __temp_277 = __temp_278 + __temp_279;
    double __temp_276 = -2.00000000000000 * __temp_277;
    double __temp_275 = 1.00000000000000 + __temp_276;
    double __temp_274 = __temp_275 * p[0];
    double __temp_282 = q[1] * q[0];
    double __temp_283 = -1.00000000000000 * q[2] * q[3];
    double __temp_281 = __temp_282 + __temp_283;
    double __temp_280 = 2.00000000000000 * __temp_281 * p[1];
    double __temp_286 = q[1] * q[3];
    double __temp_287 = q[2] * q[0];
    double __temp_285 = __temp_286 + __temp_287;
    double __temp_284 = 2.00000000000000 * __temp_285 * p[2];
    double __temp_272 = __temp_273 + __temp_274 + __temp_280 + __temp_284;
    double __temp_271 = Math.pow(__temp_272, -1.00000000000000);
    double __temp_289 = -4.00000000000000 * q[1] * p[0];
    double __temp_290 = 2.00000000000000 * q[0] * p[1];
    double __temp_291 = 2.00000000000000 * q[3] * p[2];
    double __temp_288 = __temp_289 + __temp_290 + __temp_291;
    double __temp_294 = -1.00000000000000 * imgP[0];
    double __temp_299 = Math.pow(q[1], 2.00000000000000);
    double __temp_300 = Math.pow(q[2], 2.00000000000000);
    double __temp_298 = __temp_299 + __temp_300;
    double __temp_297 = -2.00000000000000 * __temp_298;
    double __temp_296 = 1.00000000000000 + __temp_297;
    double __temp_295 = __temp_296 * p[0];
    double __temp_303 = q[1] * q[0];
    double __temp_304 = -1.00000000000000 * q[2] * q[3];
    double __temp_302 = __temp_303 + __temp_304;
    double __temp_301 = 2.00000000000000 * __temp_302 * p[1];
    double __temp_307 = q[1] * q[3];
    double __temp_308 = q[2] * q[0];
    double __temp_306 = __temp_307 + __temp_308;
    double __temp_305 = 2.00000000000000 * __temp_306 * p[2];
    double __temp_293 = __temp_294 + __temp_295 + __temp_301 + __temp_305;
    double __temp_292 = Math.pow(__temp_293, -1.00000000000000);
    double __temp_249 = 4.00000000000000 * __temp_250 * __temp_267 * __temp_271 * __temp_288 * __temp_292;
    double __temp_312 = -1.00000000000000 * imgP[1];
    double __temp_317 = Math.pow(q[0], 2.00000000000000);
    double __temp_318 = Math.pow(q[2], 2.00000000000000);
    double __temp_316 = __temp_317 + __temp_318;
    double __temp_315 = -2.00000000000000 * __temp_316;
    double __temp_314 = 1.00000000000000 + __temp_315;
    double __temp_313 = __temp_314 * p[1];
    double __temp_321 = q[1] * q[0];
    double __temp_322 = q[2] * q[3];
    double __temp_320 = __temp_321 + __temp_322;
    double __temp_319 = 2.00000000000000 * __temp_320 * p[0];
    double __temp_325 = q[2] * q[1];
    double __temp_326 = -1.00000000000000 * q[0] * q[3];
    double __temp_324 = __temp_325 + __temp_326;
    double __temp_323 = 2.00000000000000 * __temp_324 * p[2];
    double __temp_311 = __temp_312 + __temp_313 + __temp_319 + __temp_323;
    double __temp_310 = Math.pow(__temp_311, 2.00000000000000);
    double __temp_328 = -4.00000000000000 * q[2] * p[1];
    double __temp_329 = 2.00000000000000 * q[1] * p[2];
    double __temp_330 = 2.00000000000000 * q[3] * p[0];
    double __temp_327 = __temp_328 + __temp_329 + __temp_330;
    double __temp_333 = -1.00000000000000 * imgP[1];
    double __temp_338 = Math.pow(q[0], 2.00000000000000);
    double __temp_339 = Math.pow(q[2], 2.00000000000000);
    double __temp_337 = __temp_338 + __temp_339;
    double __temp_336 = -2.00000000000000 * __temp_337;
    double __temp_335 = 1.00000000000000 + __temp_336;
    double __temp_334 = __temp_335 * p[1];
    double __temp_342 = q[1] * q[0];
    double __temp_343 = q[2] * q[3];
    double __temp_341 = __temp_342 + __temp_343;
    double __temp_340 = 2.00000000000000 * __temp_341 * p[0];
    double __temp_346 = q[2] * q[1];
    double __temp_347 = -1.00000000000000 * q[0] * q[3];
    double __temp_345 = __temp_346 + __temp_347;
    double __temp_344 = 2.00000000000000 * __temp_345 * p[2];
    double __temp_332 = __temp_333 + __temp_334 + __temp_340 + __temp_344;
    double __temp_331 = Math.pow(__temp_332, -1.00000000000000);
    double __temp_349 = 2.00000000000000 * q[0] * p[0];
    double __temp_350 = 2.00000000000000 * q[2] * p[2];
    double __temp_348 = __temp_349 + __temp_350;
    double __temp_353 = -1.00000000000000 * imgP[1];
    double __temp_358 = Math.pow(q[0], 2.00000000000000);
    double __temp_359 = Math.pow(q[2], 2.00000000000000);
    double __temp_357 = __temp_358 + __temp_359;
    double __temp_356 = -2.00000000000000 * __temp_357;
    double __temp_355 = 1.00000000000000 + __temp_356;
    double __temp_354 = __temp_355 * p[1];
    double __temp_362 = q[1] * q[0];
    double __temp_363 = q[2] * q[3];
    double __temp_361 = __temp_362 + __temp_363;
    double __temp_360 = 2.00000000000000 * __temp_361 * p[0];
    double __temp_366 = q[2] * q[1];
    double __temp_367 = -1.00000000000000 * q[0] * q[3];
    double __temp_365 = __temp_366 + __temp_367;
    double __temp_364 = 2.00000000000000 * __temp_365 * p[2];
    double __temp_352 = __temp_353 + __temp_354 + __temp_360 + __temp_364;
    double __temp_351 = Math.pow(__temp_352, -1.00000000000000);
    double __temp_309 = 4.00000000000000 * __temp_310 * __temp_327 * __temp_331 * __temp_348 * __temp_351;
    double __temp_371 = -1.00000000000000 * imgP[2];
    double __temp_376 = Math.pow(q[0], 2.00000000000000);
    double __temp_377 = Math.pow(q[1], 2.00000000000000);
    double __temp_375 = __temp_376 + __temp_377;
    double __temp_374 = -2.00000000000000 * __temp_375;
    double __temp_373 = 1.00000000000000 + __temp_374;
    double __temp_372 = __temp_373 * p[2];
    double __temp_380 = q[0] * q[3];
    double __temp_381 = q[2] * q[1];
    double __temp_379 = __temp_380 + __temp_381;
    double __temp_378 = 2.00000000000000 * __temp_379 * p[1];
    double __temp_384 = q[2] * q[0];
    double __temp_385 = -1.00000000000000 * q[1] * q[3];
    double __temp_383 = __temp_384 + __temp_385;
    double __temp_382 = 2.00000000000000 * __temp_383 * p[0];
    double __temp_370 = __temp_371 + __temp_372 + __temp_378 + __temp_382;
    double __temp_369 = Math.pow(__temp_370, 2.00000000000000);
    double __temp_387 = 2.00000000000000 * q[0] * p[0];
    double __temp_388 = 2.00000000000000 * q[1] * p[1];
    double __temp_386 = __temp_387 + __temp_388;
    double __temp_391 = -1.00000000000000 * imgP[2];
    double __temp_396 = Math.pow(q[0], 2.00000000000000);
    double __temp_397 = Math.pow(q[1], 2.00000000000000);
    double __temp_395 = __temp_396 + __temp_397;
    double __temp_394 = -2.00000000000000 * __temp_395;
    double __temp_393 = 1.00000000000000 + __temp_394;
    double __temp_392 = __temp_393 * p[2];
    double __temp_400 = q[0] * q[3];
    double __temp_401 = q[2] * q[1];
    double __temp_399 = __temp_400 + __temp_401;
    double __temp_398 = 2.00000000000000 * __temp_399 * p[1];
    double __temp_404 = q[2] * q[0];
    double __temp_405 = -1.00000000000000 * q[1] * q[3];
    double __temp_403 = __temp_404 + __temp_405;
    double __temp_402 = 2.00000000000000 * __temp_403 * p[0];
    double __temp_390 = __temp_391 + __temp_392 + __temp_398 + __temp_402;
    double __temp_389 = Math.pow(__temp_390, -1.00000000000000);
    double __temp_407 = -4.00000000000000 * q[1] * p[2];
    double __temp_408 = -2.00000000000000 * q[3] * p[0];
    double __temp_409 = 2.00000000000000 * q[2] * p[1];
    double __temp_406 = __temp_407 + __temp_408 + __temp_409;
    double __temp_412 = -1.00000000000000 * imgP[2];
    double __temp_417 = Math.pow(q[0], 2.00000000000000);
    double __temp_418 = Math.pow(q[1], 2.00000000000000);
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = -2.00000000000000 * __temp_416;
    double __temp_414 = 1.00000000000000 + __temp_415;
    double __temp_413 = __temp_414 * p[2];
    double __temp_421 = q[0] * q[3];
    double __temp_422 = q[2] * q[1];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[1];
    double __temp_425 = q[2] * q[0];
    double __temp_426 = -1.00000000000000 * q[1] * q[3];
    double __temp_424 = __temp_425 + __temp_426;
    double __temp_423 = 2.00000000000000 * __temp_424 * p[0];
    double __temp_411 = __temp_412 + __temp_413 + __temp_419 + __temp_423;
    double __temp_410 = Math.pow(__temp_411, -1.00000000000000);
    double __temp_368 = 4.00000000000000 * __temp_369 * __temp_386 * __temp_389 * __temp_406 * __temp_410;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_131 + __temp_190 + __temp_249 + __temp_309 + __temp_368;
    return __temp_0;
  }

  public static double partialDerivative_1_3(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[2];
    double __temp_9 = Math.pow(q[0], 2.00000000000000);
    double __temp_10 = Math.pow(q[1], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[2];
    double __temp_13 = q[0] * q[2];
    double __temp_14 = -1.00000000000000 * q[3] * q[1];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[0];
    double __temp_17 = q[1] * q[2];
    double __temp_18 = q[3] * q[0];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[1];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[2];
    double __temp_26 = Math.pow(q[0], 2.00000000000000);
    double __temp_27 = Math.pow(q[1], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[2];
    double __temp_30 = q[0] * q[2];
    double __temp_31 = -1.00000000000000 * q[3] * q[1];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[0];
    double __temp_34 = q[1] * q[2];
    double __temp_35 = q[3] * q[0];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[1];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = -4.00000000000000 * __temp_2 * p[0] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[0];
    double __temp_44 = Math.pow(q[1], 2.00000000000000);
    double __temp_45 = Math.pow(q[2], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[0];
    double __temp_48 = q[0] * q[2];
    double __temp_49 = q[3] * q[1];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[2];
    double __temp_52 = q[1] * q[0];
    double __temp_53 = -1.00000000000000 * q[3] * q[2];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[1];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[0];
    double __temp_61 = Math.pow(q[1], 2.00000000000000);
    double __temp_62 = Math.pow(q[2], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[0];
    double __temp_65 = q[0] * q[2];
    double __temp_66 = q[3] * q[1];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[2];
    double __temp_69 = q[1] * q[0];
    double __temp_70 = -1.00000000000000 * q[3] * q[2];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[1];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[2] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[2];
    double __temp_84 = q[3] * q[1];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[2];
    double __temp_87 = q[1] * q[0];
    double __temp_88 = -1.00000000000000 * q[3] * q[2];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[1];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -4.00000000000000 * q[1] * p[0];
    double __temp_91 = 2.00000000000000 * q[0] * p[1];
    double __temp_92 = 2.00000000000000 * q[3] * p[2];
    double __temp_89 = __temp_90 + __temp_91 + __temp_92;
    double __temp_95 = -1.00000000000000 * imgP[0];
    double __temp_100 = Math.pow(q[1], 2.00000000000000);
    double __temp_101 = Math.pow(q[2], 2.00000000000000);
    double __temp_99 = __temp_100 + __temp_101;
    double __temp_98 = -2.00000000000000 * __temp_99;
    double __temp_97 = 1.00000000000000 + __temp_98;
    double __temp_96 = __temp_97 * p[0];
    double __temp_104 = q[0] * q[2];
    double __temp_105 = q[3] * q[1];
    double __temp_103 = __temp_104 + __temp_105;
    double __temp_102 = 2.00000000000000 * __temp_103 * p[2];
    double __temp_108 = q[1] * q[0];
    double __temp_109 = -1.00000000000000 * q[3] * q[2];
    double __temp_107 = __temp_108 + __temp_109;
    double __temp_106 = 2.00000000000000 * __temp_107 * p[1];
    double __temp_94 = __temp_95 + __temp_96 + __temp_102 + __temp_106;
    double __temp_93 = Math.pow(__temp_94, -1.00000000000000);
    double __temp_111 = -2.00000000000000 * q[2] * p[1];
    double __temp_112 = 2.00000000000000 * q[1] * p[2];
    double __temp_110 = __temp_111 + __temp_112;
    double __temp_115 = -1.00000000000000 * imgP[0];
    double __temp_120 = Math.pow(q[1], 2.00000000000000);
    double __temp_121 = Math.pow(q[2], 2.00000000000000);
    double __temp_119 = __temp_120 + __temp_121;
    double __temp_118 = -2.00000000000000 * __temp_119;
    double __temp_117 = 1.00000000000000 + __temp_118;
    double __temp_116 = __temp_117 * p[0];
    double __temp_124 = q[0] * q[2];
    double __temp_125 = q[3] * q[1];
    double __temp_123 = __temp_124 + __temp_125;
    double __temp_122 = 2.00000000000000 * __temp_123 * p[2];
    double __temp_128 = q[1] * q[0];
    double __temp_129 = -1.00000000000000 * q[3] * q[2];
    double __temp_127 = __temp_128 + __temp_129;
    double __temp_126 = 2.00000000000000 * __temp_127 * p[1];
    double __temp_114 = __temp_115 + __temp_116 + __temp_122 + __temp_126;
    double __temp_113 = Math.pow(__temp_114, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_93 * __temp_110 * __temp_113;
    double __temp_133 = -1.00000000000000 * imgP[1];
    double __temp_138 = Math.pow(q[0], 2.00000000000000);
    double __temp_139 = Math.pow(q[2], 2.00000000000000);
    double __temp_137 = __temp_138 + __temp_139;
    double __temp_136 = -2.00000000000000 * __temp_137;
    double __temp_135 = 1.00000000000000 + __temp_136;
    double __temp_134 = __temp_135 * p[1];
    double __temp_142 = q[1] * q[0];
    double __temp_143 = q[3] * q[2];
    double __temp_141 = __temp_142 + __temp_143;
    double __temp_140 = 2.00000000000000 * __temp_141 * p[0];
    double __temp_146 = q[1] * q[2];
    double __temp_147 = -1.00000000000000 * q[3] * q[0];
    double __temp_145 = __temp_146 + __temp_147;
    double __temp_144 = 2.00000000000000 * __temp_145 * p[2];
    double __temp_132 = __temp_133 + __temp_134 + __temp_140 + __temp_144;
    double __temp_131 = Math.pow(__temp_132, 2.00000000000000);
    double __temp_149 = 2.00000000000000 * q[0] * p[0];
    double __temp_150 = 2.00000000000000 * q[2] * p[2];
    double __temp_148 = __temp_149 + __temp_150;
    double __temp_153 = -1.00000000000000 * imgP[1];
    double __temp_158 = Math.pow(q[0], 2.00000000000000);
    double __temp_159 = Math.pow(q[2], 2.00000000000000);
    double __temp_157 = __temp_158 + __temp_159;
    double __temp_156 = -2.00000000000000 * __temp_157;
    double __temp_155 = 1.00000000000000 + __temp_156;
    double __temp_154 = __temp_155 * p[1];
    double __temp_162 = q[1] * q[0];
    double __temp_163 = q[3] * q[2];
    double __temp_161 = __temp_162 + __temp_163;
    double __temp_160 = 2.00000000000000 * __temp_161 * p[0];
    double __temp_166 = q[1] * q[2];
    double __temp_167 = -1.00000000000000 * q[3] * q[0];
    double __temp_165 = __temp_166 + __temp_167;
    double __temp_164 = 2.00000000000000 * __temp_165 * p[2];
    double __temp_152 = __temp_153 + __temp_154 + __temp_160 + __temp_164;
    double __temp_151 = Math.pow(__temp_152, -1.00000000000000);
    double __temp_169 = -2.00000000000000 * q[0] * p[2];
    double __temp_170 = 2.00000000000000 * q[2] * p[0];
    double __temp_168 = __temp_169 + __temp_170;
    double __temp_173 = -1.00000000000000 * imgP[1];
    double __temp_178 = Math.pow(q[0], 2.00000000000000);
    double __temp_179 = Math.pow(q[2], 2.00000000000000);
    double __temp_177 = __temp_178 + __temp_179;
    double __temp_176 = -2.00000000000000 * __temp_177;
    double __temp_175 = 1.00000000000000 + __temp_176;
    double __temp_174 = __temp_175 * p[1];
    double __temp_182 = q[1] * q[0];
    double __temp_183 = q[3] * q[2];
    double __temp_181 = __temp_182 + __temp_183;
    double __temp_180 = 2.00000000000000 * __temp_181 * p[0];
    double __temp_186 = q[1] * q[2];
    double __temp_187 = -1.00000000000000 * q[3] * q[0];
    double __temp_185 = __temp_186 + __temp_187;
    double __temp_184 = 2.00000000000000 * __temp_185 * p[2];
    double __temp_172 = __temp_173 + __temp_174 + __temp_180 + __temp_184;
    double __temp_171 = Math.pow(__temp_172, -1.00000000000000);
    double __temp_130 = -2.00000000000000 * __temp_131 * __temp_148 * __temp_151 * __temp_168 * __temp_171;
    double __temp_191 = -1.00000000000000 * imgP[2];
    double __temp_196 = Math.pow(q[0], 2.00000000000000);
    double __temp_197 = Math.pow(q[1], 2.00000000000000);
    double __temp_195 = __temp_196 + __temp_197;
    double __temp_194 = -2.00000000000000 * __temp_195;
    double __temp_193 = 1.00000000000000 + __temp_194;
    double __temp_192 = __temp_193 * p[2];
    double __temp_200 = q[0] * q[2];
    double __temp_201 = -1.00000000000000 * q[3] * q[1];
    double __temp_199 = __temp_200 + __temp_201;
    double __temp_198 = 2.00000000000000 * __temp_199 * p[0];
    double __temp_204 = q[1] * q[2];
    double __temp_205 = q[3] * q[0];
    double __temp_203 = __temp_204 + __temp_205;
    double __temp_202 = 2.00000000000000 * __temp_203 * p[1];
    double __temp_190 = __temp_191 + __temp_192 + __temp_198 + __temp_202;
    double __temp_189 = Math.pow(__temp_190, 2.00000000000000);
    double __temp_207 = -4.00000000000000 * q[1] * p[2];
    double __temp_208 = -2.00000000000000 * q[3] * p[0];
    double __temp_209 = 2.00000000000000 * q[2] * p[1];
    double __temp_206 = __temp_207 + __temp_208 + __temp_209;
    double __temp_212 = -1.00000000000000 * imgP[2];
    double __temp_217 = Math.pow(q[0], 2.00000000000000);
    double __temp_218 = Math.pow(q[1], 2.00000000000000);
    double __temp_216 = __temp_217 + __temp_218;
    double __temp_215 = -2.00000000000000 * __temp_216;
    double __temp_214 = 1.00000000000000 + __temp_215;
    double __temp_213 = __temp_214 * p[2];
    double __temp_221 = q[0] * q[2];
    double __temp_222 = -1.00000000000000 * q[3] * q[1];
    double __temp_220 = __temp_221 + __temp_222;
    double __temp_219 = 2.00000000000000 * __temp_220 * p[0];
    double __temp_225 = q[1] * q[2];
    double __temp_226 = q[3] * q[0];
    double __temp_224 = __temp_225 + __temp_226;
    double __temp_223 = 2.00000000000000 * __temp_224 * p[1];
    double __temp_211 = __temp_212 + __temp_213 + __temp_219 + __temp_223;
    double __temp_210 = Math.pow(__temp_211, -1.00000000000000);
    double __temp_228 = -2.00000000000000 * q[1] * p[0];
    double __temp_229 = 2.00000000000000 * q[0] * p[1];
    double __temp_227 = __temp_228 + __temp_229;
    double __temp_232 = -1.00000000000000 * imgP[2];
    double __temp_237 = Math.pow(q[0], 2.00000000000000);
    double __temp_238 = Math.pow(q[1], 2.00000000000000);
    double __temp_236 = __temp_237 + __temp_238;
    double __temp_235 = -2.00000000000000 * __temp_236;
    double __temp_234 = 1.00000000000000 + __temp_235;
    double __temp_233 = __temp_234 * p[2];
    double __temp_241 = q[0] * q[2];
    double __temp_242 = -1.00000000000000 * q[3] * q[1];
    double __temp_240 = __temp_241 + __temp_242;
    double __temp_239 = 2.00000000000000 * __temp_240 * p[0];
    double __temp_245 = q[1] * q[2];
    double __temp_246 = q[3] * q[0];
    double __temp_244 = __temp_245 + __temp_246;
    double __temp_243 = 2.00000000000000 * __temp_244 * p[1];
    double __temp_231 = __temp_232 + __temp_233 + __temp_239 + __temp_243;
    double __temp_230 = Math.pow(__temp_231, -1.00000000000000);
    double __temp_188 = -2.00000000000000 * __temp_189 * __temp_206 * __temp_210 * __temp_227 * __temp_230;
    double __temp_250 = -1.00000000000000 * imgP[0];
    double __temp_255 = Math.pow(q[1], 2.00000000000000);
    double __temp_256 = Math.pow(q[2], 2.00000000000000);
    double __temp_254 = __temp_255 + __temp_256;
    double __temp_253 = -2.00000000000000 * __temp_254;
    double __temp_252 = 1.00000000000000 + __temp_253;
    double __temp_251 = __temp_252 * p[0];
    double __temp_259 = q[0] * q[2];
    double __temp_260 = q[3] * q[1];
    double __temp_258 = __temp_259 + __temp_260;
    double __temp_257 = 2.00000000000000 * __temp_258 * p[2];
    double __temp_263 = q[1] * q[0];
    double __temp_264 = -1.00000000000000 * q[3] * q[2];
    double __temp_262 = __temp_263 + __temp_264;
    double __temp_261 = 2.00000000000000 * __temp_262 * p[1];
    double __temp_249 = __temp_250 + __temp_251 + __temp_257 + __temp_261;
    double __temp_248 = Math.pow(__temp_249, 2.00000000000000);
    double __temp_266 = -2.00000000000000 * q[2] * p[1];
    double __temp_267 = 2.00000000000000 * q[1] * p[2];
    double __temp_265 = __temp_266 + __temp_267;
    double __temp_270 = -1.00000000000000 * imgP[0];
    double __temp_275 = Math.pow(q[1], 2.00000000000000);
    double __temp_276 = Math.pow(q[2], 2.00000000000000);
    double __temp_274 = __temp_275 + __temp_276;
    double __temp_273 = -2.00000000000000 * __temp_274;
    double __temp_272 = 1.00000000000000 + __temp_273;
    double __temp_271 = __temp_272 * p[0];
    double __temp_279 = q[0] * q[2];
    double __temp_280 = q[3] * q[1];
    double __temp_278 = __temp_279 + __temp_280;
    double __temp_277 = 2.00000000000000 * __temp_278 * p[2];
    double __temp_283 = q[1] * q[0];
    double __temp_284 = -1.00000000000000 * q[3] * q[2];
    double __temp_282 = __temp_283 + __temp_284;
    double __temp_281 = 2.00000000000000 * __temp_282 * p[1];
    double __temp_269 = __temp_270 + __temp_271 + __temp_277 + __temp_281;
    double __temp_268 = Math.pow(__temp_269, -1.00000000000000);
    double __temp_286 = -4.00000000000000 * q[1] * p[0];
    double __temp_287 = 2.00000000000000 * q[0] * p[1];
    double __temp_288 = 2.00000000000000 * q[3] * p[2];
    double __temp_285 = __temp_286 + __temp_287 + __temp_288;
    double __temp_291 = -1.00000000000000 * imgP[0];
    double __temp_296 = Math.pow(q[1], 2.00000000000000);
    double __temp_297 = Math.pow(q[2], 2.00000000000000);
    double __temp_295 = __temp_296 + __temp_297;
    double __temp_294 = -2.00000000000000 * __temp_295;
    double __temp_293 = 1.00000000000000 + __temp_294;
    double __temp_292 = __temp_293 * p[0];
    double __temp_300 = q[0] * q[2];
    double __temp_301 = q[3] * q[1];
    double __temp_299 = __temp_300 + __temp_301;
    double __temp_298 = 2.00000000000000 * __temp_299 * p[2];
    double __temp_304 = q[1] * q[0];
    double __temp_305 = -1.00000000000000 * q[3] * q[2];
    double __temp_303 = __temp_304 + __temp_305;
    double __temp_302 = 2.00000000000000 * __temp_303 * p[1];
    double __temp_290 = __temp_291 + __temp_292 + __temp_298 + __temp_302;
    double __temp_289 = Math.pow(__temp_290, -1.00000000000000);
    double __temp_247 = 4.00000000000000 * __temp_248 * __temp_265 * __temp_268 * __temp_285 * __temp_289;
    double __temp_309 = -1.00000000000000 * imgP[1];
    double __temp_314 = Math.pow(q[0], 2.00000000000000);
    double __temp_315 = Math.pow(q[2], 2.00000000000000);
    double __temp_313 = __temp_314 + __temp_315;
    double __temp_312 = -2.00000000000000 * __temp_313;
    double __temp_311 = 1.00000000000000 + __temp_312;
    double __temp_310 = __temp_311 * p[1];
    double __temp_318 = q[1] * q[0];
    double __temp_319 = q[3] * q[2];
    double __temp_317 = __temp_318 + __temp_319;
    double __temp_316 = 2.00000000000000 * __temp_317 * p[0];
    double __temp_322 = q[1] * q[2];
    double __temp_323 = -1.00000000000000 * q[3] * q[0];
    double __temp_321 = __temp_322 + __temp_323;
    double __temp_320 = 2.00000000000000 * __temp_321 * p[2];
    double __temp_308 = __temp_309 + __temp_310 + __temp_316 + __temp_320;
    double __temp_307 = Math.pow(__temp_308, 2.00000000000000);
    double __temp_325 = -2.00000000000000 * q[0] * p[2];
    double __temp_326 = 2.00000000000000 * q[2] * p[0];
    double __temp_324 = __temp_325 + __temp_326;
    double __temp_329 = -1.00000000000000 * imgP[1];
    double __temp_334 = Math.pow(q[0], 2.00000000000000);
    double __temp_335 = Math.pow(q[2], 2.00000000000000);
    double __temp_333 = __temp_334 + __temp_335;
    double __temp_332 = -2.00000000000000 * __temp_333;
    double __temp_331 = 1.00000000000000 + __temp_332;
    double __temp_330 = __temp_331 * p[1];
    double __temp_338 = q[1] * q[0];
    double __temp_339 = q[3] * q[2];
    double __temp_337 = __temp_338 + __temp_339;
    double __temp_336 = 2.00000000000000 * __temp_337 * p[0];
    double __temp_342 = q[1] * q[2];
    double __temp_343 = -1.00000000000000 * q[3] * q[0];
    double __temp_341 = __temp_342 + __temp_343;
    double __temp_340 = 2.00000000000000 * __temp_341 * p[2];
    double __temp_328 = __temp_329 + __temp_330 + __temp_336 + __temp_340;
    double __temp_327 = Math.pow(__temp_328, -1.00000000000000);
    double __temp_345 = 2.00000000000000 * q[0] * p[0];
    double __temp_346 = 2.00000000000000 * q[2] * p[2];
    double __temp_344 = __temp_345 + __temp_346;
    double __temp_349 = -1.00000000000000 * imgP[1];
    double __temp_354 = Math.pow(q[0], 2.00000000000000);
    double __temp_355 = Math.pow(q[2], 2.00000000000000);
    double __temp_353 = __temp_354 + __temp_355;
    double __temp_352 = -2.00000000000000 * __temp_353;
    double __temp_351 = 1.00000000000000 + __temp_352;
    double __temp_350 = __temp_351 * p[1];
    double __temp_358 = q[1] * q[0];
    double __temp_359 = q[3] * q[2];
    double __temp_357 = __temp_358 + __temp_359;
    double __temp_356 = 2.00000000000000 * __temp_357 * p[0];
    double __temp_362 = q[1] * q[2];
    double __temp_363 = -1.00000000000000 * q[3] * q[0];
    double __temp_361 = __temp_362 + __temp_363;
    double __temp_360 = 2.00000000000000 * __temp_361 * p[2];
    double __temp_348 = __temp_349 + __temp_350 + __temp_356 + __temp_360;
    double __temp_347 = Math.pow(__temp_348, -1.00000000000000);
    double __temp_306 = 4.00000000000000 * __temp_307 * __temp_324 * __temp_327 * __temp_344 * __temp_347;
    double __temp_367 = -1.00000000000000 * imgP[2];
    double __temp_372 = Math.pow(q[0], 2.00000000000000);
    double __temp_373 = Math.pow(q[1], 2.00000000000000);
    double __temp_371 = __temp_372 + __temp_373;
    double __temp_370 = -2.00000000000000 * __temp_371;
    double __temp_369 = 1.00000000000000 + __temp_370;
    double __temp_368 = __temp_369 * p[2];
    double __temp_376 = q[0] * q[2];
    double __temp_377 = -1.00000000000000 * q[3] * q[1];
    double __temp_375 = __temp_376 + __temp_377;
    double __temp_374 = 2.00000000000000 * __temp_375 * p[0];
    double __temp_380 = q[1] * q[2];
    double __temp_381 = q[3] * q[0];
    double __temp_379 = __temp_380 + __temp_381;
    double __temp_378 = 2.00000000000000 * __temp_379 * p[1];
    double __temp_366 = __temp_367 + __temp_368 + __temp_374 + __temp_378;
    double __temp_365 = Math.pow(__temp_366, 2.00000000000000);
    double __temp_383 = -2.00000000000000 * q[1] * p[0];
    double __temp_384 = 2.00000000000000 * q[0] * p[1];
    double __temp_382 = __temp_383 + __temp_384;
    double __temp_387 = -1.00000000000000 * imgP[2];
    double __temp_392 = Math.pow(q[0], 2.00000000000000);
    double __temp_393 = Math.pow(q[1], 2.00000000000000);
    double __temp_391 = __temp_392 + __temp_393;
    double __temp_390 = -2.00000000000000 * __temp_391;
    double __temp_389 = 1.00000000000000 + __temp_390;
    double __temp_388 = __temp_389 * p[2];
    double __temp_396 = q[0] * q[2];
    double __temp_397 = -1.00000000000000 * q[3] * q[1];
    double __temp_395 = __temp_396 + __temp_397;
    double __temp_394 = 2.00000000000000 * __temp_395 * p[0];
    double __temp_400 = q[1] * q[2];
    double __temp_401 = q[3] * q[0];
    double __temp_399 = __temp_400 + __temp_401;
    double __temp_398 = 2.00000000000000 * __temp_399 * p[1];
    double __temp_386 = __temp_387 + __temp_388 + __temp_394 + __temp_398;
    double __temp_385 = Math.pow(__temp_386, -1.00000000000000);
    double __temp_403 = -4.00000000000000 * q[1] * p[2];
    double __temp_404 = -2.00000000000000 * q[3] * p[0];
    double __temp_405 = 2.00000000000000 * q[2] * p[1];
    double __temp_402 = __temp_403 + __temp_404 + __temp_405;
    double __temp_408 = -1.00000000000000 * imgP[2];
    double __temp_413 = Math.pow(q[0], 2.00000000000000);
    double __temp_414 = Math.pow(q[1], 2.00000000000000);
    double __temp_412 = __temp_413 + __temp_414;
    double __temp_411 = -2.00000000000000 * __temp_412;
    double __temp_410 = 1.00000000000000 + __temp_411;
    double __temp_409 = __temp_410 * p[2];
    double __temp_417 = q[0] * q[2];
    double __temp_418 = -1.00000000000000 * q[3] * q[1];
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = 2.00000000000000 * __temp_416 * p[0];
    double __temp_421 = q[1] * q[2];
    double __temp_422 = q[3] * q[0];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[1];
    double __temp_407 = __temp_408 + __temp_409 + __temp_415 + __temp_419;
    double __temp_406 = Math.pow(__temp_407, -1.00000000000000);
    double __temp_364 = 4.00000000000000 * __temp_365 * __temp_382 * __temp_385 * __temp_402 * __temp_406;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_130 + __temp_188 + __temp_247 + __temp_306 + __temp_364;
    return __temp_0;
  }

  public static double partialDerivative_2_0(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = -1.00000000000000 * q[2] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[1];
    double __temp_17 = q[0] * q[2];
    double __temp_18 = q[1] * q[3];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[0];
    double __temp_26 = Math.pow(q[1], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[0];
    double __temp_30 = q[0] * q[1];
    double __temp_31 = -1.00000000000000 * q[2] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[1];
    double __temp_34 = q[0] * q[2];
    double __temp_35 = q[1] * q[3];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = 4.00000000000000 * __temp_2 * p[2] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[2];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[1], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[2];
    double __temp_48 = q[0] * q[2];
    double __temp_49 = -1.00000000000000 * q[1] * q[3];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[0];
    double __temp_52 = q[0] * q[3];
    double __temp_53 = q[2] * q[1];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[1];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[2];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[1], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[2];
    double __temp_65 = q[0] * q[2];
    double __temp_66 = -1.00000000000000 * q[1] * q[3];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[0];
    double __temp_69 = q[0] * q[3];
    double __temp_70 = q[2] * q[1];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[1];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[0] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[1];
    double __temp_84 = -1.00000000000000 * q[2] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[0] * q[2];
    double __temp_88 = q[1] * q[3];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -4.00000000000000 * q[2] * p[0];
    double __temp_91 = -2.00000000000000 * q[3] * p[1];
    double __temp_92 = 2.00000000000000 * q[0] * p[2];
    double __temp_89 = __temp_90 + __temp_91 + __temp_92;
    double __temp_95 = -1.00000000000000 * imgP[0];
    double __temp_100 = Math.pow(q[1], 2.00000000000000);
    double __temp_101 = Math.pow(q[2], 2.00000000000000);
    double __temp_99 = __temp_100 + __temp_101;
    double __temp_98 = -2.00000000000000 * __temp_99;
    double __temp_97 = 1.00000000000000 + __temp_98;
    double __temp_96 = __temp_97 * p[0];
    double __temp_104 = q[0] * q[1];
    double __temp_105 = -1.00000000000000 * q[2] * q[3];
    double __temp_103 = __temp_104 + __temp_105;
    double __temp_102 = 2.00000000000000 * __temp_103 * p[1];
    double __temp_108 = q[0] * q[2];
    double __temp_109 = q[1] * q[3];
    double __temp_107 = __temp_108 + __temp_109;
    double __temp_106 = 2.00000000000000 * __temp_107 * p[2];
    double __temp_94 = __temp_95 + __temp_96 + __temp_102 + __temp_106;
    double __temp_93 = Math.pow(__temp_94, -1.00000000000000);
    double __temp_111 = 2.00000000000000 * q[1] * p[1];
    double __temp_112 = 2.00000000000000 * q[2] * p[2];
    double __temp_110 = __temp_111 + __temp_112;
    double __temp_115 = -1.00000000000000 * imgP[0];
    double __temp_120 = Math.pow(q[1], 2.00000000000000);
    double __temp_121 = Math.pow(q[2], 2.00000000000000);
    double __temp_119 = __temp_120 + __temp_121;
    double __temp_118 = -2.00000000000000 * __temp_119;
    double __temp_117 = 1.00000000000000 + __temp_118;
    double __temp_116 = __temp_117 * p[0];
    double __temp_124 = q[0] * q[1];
    double __temp_125 = -1.00000000000000 * q[2] * q[3];
    double __temp_123 = __temp_124 + __temp_125;
    double __temp_122 = 2.00000000000000 * __temp_123 * p[1];
    double __temp_128 = q[0] * q[2];
    double __temp_129 = q[1] * q[3];
    double __temp_127 = __temp_128 + __temp_129;
    double __temp_126 = 2.00000000000000 * __temp_127 * p[2];
    double __temp_114 = __temp_115 + __temp_116 + __temp_122 + __temp_126;
    double __temp_113 = Math.pow(__temp_114, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_93 * __temp_110 * __temp_113;
    double __temp_133 = -1.00000000000000 * imgP[1];
    double __temp_138 = Math.pow(q[0], 2.00000000000000);
    double __temp_139 = Math.pow(q[2], 2.00000000000000);
    double __temp_137 = __temp_138 + __temp_139;
    double __temp_136 = -2.00000000000000 * __temp_137;
    double __temp_135 = 1.00000000000000 + __temp_136;
    double __temp_134 = __temp_135 * p[1];
    double __temp_142 = q[0] * q[1];
    double __temp_143 = q[2] * q[3];
    double __temp_141 = __temp_142 + __temp_143;
    double __temp_140 = 2.00000000000000 * __temp_141 * p[0];
    double __temp_146 = q[2] * q[1];
    double __temp_147 = -1.00000000000000 * q[0] * q[3];
    double __temp_145 = __temp_146 + __temp_147;
    double __temp_144 = 2.00000000000000 * __temp_145 * p[2];
    double __temp_132 = __temp_133 + __temp_134 + __temp_140 + __temp_144;
    double __temp_131 = Math.pow(__temp_132, 2.00000000000000);
    double __temp_149 = -4.00000000000000 * q[2] * p[1];
    double __temp_150 = 2.00000000000000 * q[1] * p[2];
    double __temp_151 = 2.00000000000000 * q[3] * p[0];
    double __temp_148 = __temp_149 + __temp_150 + __temp_151;
    double __temp_154 = -1.00000000000000 * imgP[1];
    double __temp_159 = Math.pow(q[0], 2.00000000000000);
    double __temp_160 = Math.pow(q[2], 2.00000000000000);
    double __temp_158 = __temp_159 + __temp_160;
    double __temp_157 = -2.00000000000000 * __temp_158;
    double __temp_156 = 1.00000000000000 + __temp_157;
    double __temp_155 = __temp_156 * p[1];
    double __temp_163 = q[0] * q[1];
    double __temp_164 = q[2] * q[3];
    double __temp_162 = __temp_163 + __temp_164;
    double __temp_161 = 2.00000000000000 * __temp_162 * p[0];
    double __temp_167 = q[2] * q[1];
    double __temp_168 = -1.00000000000000 * q[0] * q[3];
    double __temp_166 = __temp_167 + __temp_168;
    double __temp_165 = 2.00000000000000 * __temp_166 * p[2];
    double __temp_153 = __temp_154 + __temp_155 + __temp_161 + __temp_165;
    double __temp_152 = Math.pow(__temp_153, -1.00000000000000);
    double __temp_170 = -4.00000000000000 * q[0] * p[1];
    double __temp_171 = -2.00000000000000 * q[3] * p[2];
    double __temp_172 = 2.00000000000000 * q[1] * p[0];
    double __temp_169 = __temp_170 + __temp_171 + __temp_172;
    double __temp_175 = -1.00000000000000 * imgP[1];
    double __temp_180 = Math.pow(q[0], 2.00000000000000);
    double __temp_181 = Math.pow(q[2], 2.00000000000000);
    double __temp_179 = __temp_180 + __temp_181;
    double __temp_178 = -2.00000000000000 * __temp_179;
    double __temp_177 = 1.00000000000000 + __temp_178;
    double __temp_176 = __temp_177 * p[1];
    double __temp_184 = q[0] * q[1];
    double __temp_185 = q[2] * q[3];
    double __temp_183 = __temp_184 + __temp_185;
    double __temp_182 = 2.00000000000000 * __temp_183 * p[0];
    double __temp_188 = q[2] * q[1];
    double __temp_189 = -1.00000000000000 * q[0] * q[3];
    double __temp_187 = __temp_188 + __temp_189;
    double __temp_186 = 2.00000000000000 * __temp_187 * p[2];
    double __temp_174 = __temp_175 + __temp_176 + __temp_182 + __temp_186;
    double __temp_173 = Math.pow(__temp_174, -1.00000000000000);
    double __temp_130 = -2.00000000000000 * __temp_131 * __temp_148 * __temp_152 * __temp_169 * __temp_173;
    double __temp_193 = -1.00000000000000 * imgP[2];
    double __temp_198 = Math.pow(q[0], 2.00000000000000);
    double __temp_199 = Math.pow(q[1], 2.00000000000000);
    double __temp_197 = __temp_198 + __temp_199;
    double __temp_196 = -2.00000000000000 * __temp_197;
    double __temp_195 = 1.00000000000000 + __temp_196;
    double __temp_194 = __temp_195 * p[2];
    double __temp_202 = q[0] * q[2];
    double __temp_203 = -1.00000000000000 * q[1] * q[3];
    double __temp_201 = __temp_202 + __temp_203;
    double __temp_200 = 2.00000000000000 * __temp_201 * p[0];
    double __temp_206 = q[0] * q[3];
    double __temp_207 = q[2] * q[1];
    double __temp_205 = __temp_206 + __temp_207;
    double __temp_204 = 2.00000000000000 * __temp_205 * p[1];
    double __temp_192 = __temp_193 + __temp_194 + __temp_200 + __temp_204;
    double __temp_191 = Math.pow(__temp_192, 2.00000000000000);
    double __temp_209 = 2.00000000000000 * q[0] * p[0];
    double __temp_210 = 2.00000000000000 * q[1] * p[1];
    double __temp_208 = __temp_209 + __temp_210;
    double __temp_213 = -1.00000000000000 * imgP[2];
    double __temp_218 = Math.pow(q[0], 2.00000000000000);
    double __temp_219 = Math.pow(q[1], 2.00000000000000);
    double __temp_217 = __temp_218 + __temp_219;
    double __temp_216 = -2.00000000000000 * __temp_217;
    double __temp_215 = 1.00000000000000 + __temp_216;
    double __temp_214 = __temp_215 * p[2];
    double __temp_222 = q[0] * q[2];
    double __temp_223 = -1.00000000000000 * q[1] * q[3];
    double __temp_221 = __temp_222 + __temp_223;
    double __temp_220 = 2.00000000000000 * __temp_221 * p[0];
    double __temp_226 = q[0] * q[3];
    double __temp_227 = q[2] * q[1];
    double __temp_225 = __temp_226 + __temp_227;
    double __temp_224 = 2.00000000000000 * __temp_225 * p[1];
    double __temp_212 = __temp_213 + __temp_214 + __temp_220 + __temp_224;
    double __temp_211 = Math.pow(__temp_212, -1.00000000000000);
    double __temp_229 = -4.00000000000000 * q[0] * p[2];
    double __temp_230 = 2.00000000000000 * q[2] * p[0];
    double __temp_231 = 2.00000000000000 * q[3] * p[1];
    double __temp_228 = __temp_229 + __temp_230 + __temp_231;
    double __temp_234 = -1.00000000000000 * imgP[2];
    double __temp_239 = Math.pow(q[0], 2.00000000000000);
    double __temp_240 = Math.pow(q[1], 2.00000000000000);
    double __temp_238 = __temp_239 + __temp_240;
    double __temp_237 = -2.00000000000000 * __temp_238;
    double __temp_236 = 1.00000000000000 + __temp_237;
    double __temp_235 = __temp_236 * p[2];
    double __temp_243 = q[0] * q[2];
    double __temp_244 = -1.00000000000000 * q[1] * q[3];
    double __temp_242 = __temp_243 + __temp_244;
    double __temp_241 = 2.00000000000000 * __temp_242 * p[0];
    double __temp_247 = q[0] * q[3];
    double __temp_248 = q[2] * q[1];
    double __temp_246 = __temp_247 + __temp_248;
    double __temp_245 = 2.00000000000000 * __temp_246 * p[1];
    double __temp_233 = __temp_234 + __temp_235 + __temp_241 + __temp_245;
    double __temp_232 = Math.pow(__temp_233, -1.00000000000000);
    double __temp_190 = -2.00000000000000 * __temp_191 * __temp_208 * __temp_211 * __temp_228 * __temp_232;
    double __temp_252 = -1.00000000000000 * imgP[0];
    double __temp_257 = Math.pow(q[1], 2.00000000000000);
    double __temp_258 = Math.pow(q[2], 2.00000000000000);
    double __temp_256 = __temp_257 + __temp_258;
    double __temp_255 = -2.00000000000000 * __temp_256;
    double __temp_254 = 1.00000000000000 + __temp_255;
    double __temp_253 = __temp_254 * p[0];
    double __temp_261 = q[0] * q[1];
    double __temp_262 = -1.00000000000000 * q[2] * q[3];
    double __temp_260 = __temp_261 + __temp_262;
    double __temp_259 = 2.00000000000000 * __temp_260 * p[1];
    double __temp_265 = q[0] * q[2];
    double __temp_266 = q[1] * q[3];
    double __temp_264 = __temp_265 + __temp_266;
    double __temp_263 = 2.00000000000000 * __temp_264 * p[2];
    double __temp_251 = __temp_252 + __temp_253 + __temp_259 + __temp_263;
    double __temp_250 = Math.pow(__temp_251, 2.00000000000000);
    double __temp_268 = 2.00000000000000 * q[1] * p[1];
    double __temp_269 = 2.00000000000000 * q[2] * p[2];
    double __temp_267 = __temp_268 + __temp_269;
    double __temp_272 = -1.00000000000000 * imgP[0];
    double __temp_277 = Math.pow(q[1], 2.00000000000000);
    double __temp_278 = Math.pow(q[2], 2.00000000000000);
    double __temp_276 = __temp_277 + __temp_278;
    double __temp_275 = -2.00000000000000 * __temp_276;
    double __temp_274 = 1.00000000000000 + __temp_275;
    double __temp_273 = __temp_274 * p[0];
    double __temp_281 = q[0] * q[1];
    double __temp_282 = -1.00000000000000 * q[2] * q[3];
    double __temp_280 = __temp_281 + __temp_282;
    double __temp_279 = 2.00000000000000 * __temp_280 * p[1];
    double __temp_285 = q[0] * q[2];
    double __temp_286 = q[1] * q[3];
    double __temp_284 = __temp_285 + __temp_286;
    double __temp_283 = 2.00000000000000 * __temp_284 * p[2];
    double __temp_271 = __temp_272 + __temp_273 + __temp_279 + __temp_283;
    double __temp_270 = Math.pow(__temp_271, -1.00000000000000);
    double __temp_288 = -4.00000000000000 * q[2] * p[0];
    double __temp_289 = -2.00000000000000 * q[3] * p[1];
    double __temp_290 = 2.00000000000000 * q[0] * p[2];
    double __temp_287 = __temp_288 + __temp_289 + __temp_290;
    double __temp_293 = -1.00000000000000 * imgP[0];
    double __temp_298 = Math.pow(q[1], 2.00000000000000);
    double __temp_299 = Math.pow(q[2], 2.00000000000000);
    double __temp_297 = __temp_298 + __temp_299;
    double __temp_296 = -2.00000000000000 * __temp_297;
    double __temp_295 = 1.00000000000000 + __temp_296;
    double __temp_294 = __temp_295 * p[0];
    double __temp_302 = q[0] * q[1];
    double __temp_303 = -1.00000000000000 * q[2] * q[3];
    double __temp_301 = __temp_302 + __temp_303;
    double __temp_300 = 2.00000000000000 * __temp_301 * p[1];
    double __temp_306 = q[0] * q[2];
    double __temp_307 = q[1] * q[3];
    double __temp_305 = __temp_306 + __temp_307;
    double __temp_304 = 2.00000000000000 * __temp_305 * p[2];
    double __temp_292 = __temp_293 + __temp_294 + __temp_300 + __temp_304;
    double __temp_291 = Math.pow(__temp_292, -1.00000000000000);
    double __temp_249 = 4.00000000000000 * __temp_250 * __temp_267 * __temp_270 * __temp_287 * __temp_291;
    double __temp_311 = -1.00000000000000 * imgP[1];
    double __temp_316 = Math.pow(q[0], 2.00000000000000);
    double __temp_317 = Math.pow(q[2], 2.00000000000000);
    double __temp_315 = __temp_316 + __temp_317;
    double __temp_314 = -2.00000000000000 * __temp_315;
    double __temp_313 = 1.00000000000000 + __temp_314;
    double __temp_312 = __temp_313 * p[1];
    double __temp_320 = q[0] * q[1];
    double __temp_321 = q[2] * q[3];
    double __temp_319 = __temp_320 + __temp_321;
    double __temp_318 = 2.00000000000000 * __temp_319 * p[0];
    double __temp_324 = q[2] * q[1];
    double __temp_325 = -1.00000000000000 * q[0] * q[3];
    double __temp_323 = __temp_324 + __temp_325;
    double __temp_322 = 2.00000000000000 * __temp_323 * p[2];
    double __temp_310 = __temp_311 + __temp_312 + __temp_318 + __temp_322;
    double __temp_309 = Math.pow(__temp_310, 2.00000000000000);
    double __temp_327 = -4.00000000000000 * q[0] * p[1];
    double __temp_328 = -2.00000000000000 * q[3] * p[2];
    double __temp_329 = 2.00000000000000 * q[1] * p[0];
    double __temp_326 = __temp_327 + __temp_328 + __temp_329;
    double __temp_332 = -1.00000000000000 * imgP[1];
    double __temp_337 = Math.pow(q[0], 2.00000000000000);
    double __temp_338 = Math.pow(q[2], 2.00000000000000);
    double __temp_336 = __temp_337 + __temp_338;
    double __temp_335 = -2.00000000000000 * __temp_336;
    double __temp_334 = 1.00000000000000 + __temp_335;
    double __temp_333 = __temp_334 * p[1];
    double __temp_341 = q[0] * q[1];
    double __temp_342 = q[2] * q[3];
    double __temp_340 = __temp_341 + __temp_342;
    double __temp_339 = 2.00000000000000 * __temp_340 * p[0];
    double __temp_345 = q[2] * q[1];
    double __temp_346 = -1.00000000000000 * q[0] * q[3];
    double __temp_344 = __temp_345 + __temp_346;
    double __temp_343 = 2.00000000000000 * __temp_344 * p[2];
    double __temp_331 = __temp_332 + __temp_333 + __temp_339 + __temp_343;
    double __temp_330 = Math.pow(__temp_331, -1.00000000000000);
    double __temp_348 = -4.00000000000000 * q[2] * p[1];
    double __temp_349 = 2.00000000000000 * q[1] * p[2];
    double __temp_350 = 2.00000000000000 * q[3] * p[0];
    double __temp_347 = __temp_348 + __temp_349 + __temp_350;
    double __temp_353 = -1.00000000000000 * imgP[1];
    double __temp_358 = Math.pow(q[0], 2.00000000000000);
    double __temp_359 = Math.pow(q[2], 2.00000000000000);
    double __temp_357 = __temp_358 + __temp_359;
    double __temp_356 = -2.00000000000000 * __temp_357;
    double __temp_355 = 1.00000000000000 + __temp_356;
    double __temp_354 = __temp_355 * p[1];
    double __temp_362 = q[0] * q[1];
    double __temp_363 = q[2] * q[3];
    double __temp_361 = __temp_362 + __temp_363;
    double __temp_360 = 2.00000000000000 * __temp_361 * p[0];
    double __temp_366 = q[2] * q[1];
    double __temp_367 = -1.00000000000000 * q[0] * q[3];
    double __temp_365 = __temp_366 + __temp_367;
    double __temp_364 = 2.00000000000000 * __temp_365 * p[2];
    double __temp_352 = __temp_353 + __temp_354 + __temp_360 + __temp_364;
    double __temp_351 = Math.pow(__temp_352, -1.00000000000000);
    double __temp_308 = 4.00000000000000 * __temp_309 * __temp_326 * __temp_330 * __temp_347 * __temp_351;
    double __temp_371 = -1.00000000000000 * imgP[2];
    double __temp_376 = Math.pow(q[0], 2.00000000000000);
    double __temp_377 = Math.pow(q[1], 2.00000000000000);
    double __temp_375 = __temp_376 + __temp_377;
    double __temp_374 = -2.00000000000000 * __temp_375;
    double __temp_373 = 1.00000000000000 + __temp_374;
    double __temp_372 = __temp_373 * p[2];
    double __temp_380 = q[0] * q[2];
    double __temp_381 = -1.00000000000000 * q[1] * q[3];
    double __temp_379 = __temp_380 + __temp_381;
    double __temp_378 = 2.00000000000000 * __temp_379 * p[0];
    double __temp_384 = q[0] * q[3];
    double __temp_385 = q[2] * q[1];
    double __temp_383 = __temp_384 + __temp_385;
    double __temp_382 = 2.00000000000000 * __temp_383 * p[1];
    double __temp_370 = __temp_371 + __temp_372 + __temp_378 + __temp_382;
    double __temp_369 = Math.pow(__temp_370, 2.00000000000000);
    double __temp_387 = -4.00000000000000 * q[0] * p[2];
    double __temp_388 = 2.00000000000000 * q[2] * p[0];
    double __temp_389 = 2.00000000000000 * q[3] * p[1];
    double __temp_386 = __temp_387 + __temp_388 + __temp_389;
    double __temp_392 = -1.00000000000000 * imgP[2];
    double __temp_397 = Math.pow(q[0], 2.00000000000000);
    double __temp_398 = Math.pow(q[1], 2.00000000000000);
    double __temp_396 = __temp_397 + __temp_398;
    double __temp_395 = -2.00000000000000 * __temp_396;
    double __temp_394 = 1.00000000000000 + __temp_395;
    double __temp_393 = __temp_394 * p[2];
    double __temp_401 = q[0] * q[2];
    double __temp_402 = -1.00000000000000 * q[1] * q[3];
    double __temp_400 = __temp_401 + __temp_402;
    double __temp_399 = 2.00000000000000 * __temp_400 * p[0];
    double __temp_405 = q[0] * q[3];
    double __temp_406 = q[2] * q[1];
    double __temp_404 = __temp_405 + __temp_406;
    double __temp_403 = 2.00000000000000 * __temp_404 * p[1];
    double __temp_391 = __temp_392 + __temp_393 + __temp_399 + __temp_403;
    double __temp_390 = Math.pow(__temp_391, -1.00000000000000);
    double __temp_408 = 2.00000000000000 * q[0] * p[0];
    double __temp_409 = 2.00000000000000 * q[1] * p[1];
    double __temp_407 = __temp_408 + __temp_409;
    double __temp_412 = -1.00000000000000 * imgP[2];
    double __temp_417 = Math.pow(q[0], 2.00000000000000);
    double __temp_418 = Math.pow(q[1], 2.00000000000000);
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = -2.00000000000000 * __temp_416;
    double __temp_414 = 1.00000000000000 + __temp_415;
    double __temp_413 = __temp_414 * p[2];
    double __temp_421 = q[0] * q[2];
    double __temp_422 = -1.00000000000000 * q[1] * q[3];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[0];
    double __temp_425 = q[0] * q[3];
    double __temp_426 = q[2] * q[1];
    double __temp_424 = __temp_425 + __temp_426;
    double __temp_423 = 2.00000000000000 * __temp_424 * p[1];
    double __temp_411 = __temp_412 + __temp_413 + __temp_419 + __temp_423;
    double __temp_410 = Math.pow(__temp_411, -1.00000000000000);
    double __temp_368 = 4.00000000000000 * __temp_369 * __temp_386 * __temp_390 * __temp_407 * __temp_410;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_130 + __temp_190 + __temp_249 + __temp_308 + __temp_368;
    return __temp_0;
  }

  public static double partialDerivative_2_1(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[1];
    double __temp_9 = Math.pow(q[0], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[1];
    double __temp_13 = q[1] * q[0];
    double __temp_14 = q[2] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[0];
    double __temp_17 = q[1] * q[2];
    double __temp_18 = -1.00000000000000 * q[0] * q[3];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[1];
    double __temp_26 = Math.pow(q[0], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[1];
    double __temp_30 = q[1] * q[0];
    double __temp_31 = q[2] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[0];
    double __temp_34 = q[1] * q[2];
    double __temp_35 = -1.00000000000000 * q[0] * q[3];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = 4.00000000000000 * __temp_2 * p[2] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[2];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[1], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[2];
    double __temp_48 = q[0] * q[3];
    double __temp_49 = q[1] * q[2];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[1];
    double __temp_52 = q[2] * q[0];
    double __temp_53 = -1.00000000000000 * q[1] * q[3];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[0];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[2];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[1], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[2];
    double __temp_65 = q[0] * q[3];
    double __temp_66 = q[1] * q[2];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[1];
    double __temp_69 = q[2] * q[0];
    double __temp_70 = -1.00000000000000 * q[1] * q[3];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[0];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[1] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[1] * q[0];
    double __temp_84 = -1.00000000000000 * q[2] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[1] * q[3];
    double __temp_88 = q[2] * q[0];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -4.00000000000000 * q[2] * p[0];
    double __temp_91 = -2.00000000000000 * q[3] * p[1];
    double __temp_92 = 2.00000000000000 * q[0] * p[2];
    double __temp_89 = __temp_90 + __temp_91 + __temp_92;
    double __temp_95 = -1.00000000000000 * imgP[0];
    double __temp_100 = Math.pow(q[1], 2.00000000000000);
    double __temp_101 = Math.pow(q[2], 2.00000000000000);
    double __temp_99 = __temp_100 + __temp_101;
    double __temp_98 = -2.00000000000000 * __temp_99;
    double __temp_97 = 1.00000000000000 + __temp_98;
    double __temp_96 = __temp_97 * p[0];
    double __temp_104 = q[1] * q[0];
    double __temp_105 = -1.00000000000000 * q[2] * q[3];
    double __temp_103 = __temp_104 + __temp_105;
    double __temp_102 = 2.00000000000000 * __temp_103 * p[1];
    double __temp_108 = q[1] * q[3];
    double __temp_109 = q[2] * q[0];
    double __temp_107 = __temp_108 + __temp_109;
    double __temp_106 = 2.00000000000000 * __temp_107 * p[2];
    double __temp_94 = __temp_95 + __temp_96 + __temp_102 + __temp_106;
    double __temp_93 = Math.pow(__temp_94, -1.00000000000000);
    double __temp_111 = -4.00000000000000 * q[1] * p[0];
    double __temp_112 = 2.00000000000000 * q[0] * p[1];
    double __temp_113 = 2.00000000000000 * q[3] * p[2];
    double __temp_110 = __temp_111 + __temp_112 + __temp_113;
    double __temp_116 = -1.00000000000000 * imgP[0];
    double __temp_121 = Math.pow(q[1], 2.00000000000000);
    double __temp_122 = Math.pow(q[2], 2.00000000000000);
    double __temp_120 = __temp_121 + __temp_122;
    double __temp_119 = -2.00000000000000 * __temp_120;
    double __temp_118 = 1.00000000000000 + __temp_119;
    double __temp_117 = __temp_118 * p[0];
    double __temp_125 = q[1] * q[0];
    double __temp_126 = -1.00000000000000 * q[2] * q[3];
    double __temp_124 = __temp_125 + __temp_126;
    double __temp_123 = 2.00000000000000 * __temp_124 * p[1];
    double __temp_129 = q[1] * q[3];
    double __temp_130 = q[2] * q[0];
    double __temp_128 = __temp_129 + __temp_130;
    double __temp_127 = 2.00000000000000 * __temp_128 * p[2];
    double __temp_115 = __temp_116 + __temp_117 + __temp_123 + __temp_127;
    double __temp_114 = Math.pow(__temp_115, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_93 * __temp_110 * __temp_114;
    double __temp_134 = -1.00000000000000 * imgP[1];
    double __temp_139 = Math.pow(q[0], 2.00000000000000);
    double __temp_140 = Math.pow(q[2], 2.00000000000000);
    double __temp_138 = __temp_139 + __temp_140;
    double __temp_137 = -2.00000000000000 * __temp_138;
    double __temp_136 = 1.00000000000000 + __temp_137;
    double __temp_135 = __temp_136 * p[1];
    double __temp_143 = q[1] * q[0];
    double __temp_144 = q[2] * q[3];
    double __temp_142 = __temp_143 + __temp_144;
    double __temp_141 = 2.00000000000000 * __temp_142 * p[0];
    double __temp_147 = q[1] * q[2];
    double __temp_148 = -1.00000000000000 * q[0] * q[3];
    double __temp_146 = __temp_147 + __temp_148;
    double __temp_145 = 2.00000000000000 * __temp_146 * p[2];
    double __temp_133 = __temp_134 + __temp_135 + __temp_141 + __temp_145;
    double __temp_132 = Math.pow(__temp_133, 2.00000000000000);
    double __temp_150 = -4.00000000000000 * q[2] * p[1];
    double __temp_151 = 2.00000000000000 * q[1] * p[2];
    double __temp_152 = 2.00000000000000 * q[3] * p[0];
    double __temp_149 = __temp_150 + __temp_151 + __temp_152;
    double __temp_155 = -1.00000000000000 * imgP[1];
    double __temp_160 = Math.pow(q[0], 2.00000000000000);
    double __temp_161 = Math.pow(q[2], 2.00000000000000);
    double __temp_159 = __temp_160 + __temp_161;
    double __temp_158 = -2.00000000000000 * __temp_159;
    double __temp_157 = 1.00000000000000 + __temp_158;
    double __temp_156 = __temp_157 * p[1];
    double __temp_164 = q[1] * q[0];
    double __temp_165 = q[2] * q[3];
    double __temp_163 = __temp_164 + __temp_165;
    double __temp_162 = 2.00000000000000 * __temp_163 * p[0];
    double __temp_168 = q[1] * q[2];
    double __temp_169 = -1.00000000000000 * q[0] * q[3];
    double __temp_167 = __temp_168 + __temp_169;
    double __temp_166 = 2.00000000000000 * __temp_167 * p[2];
    double __temp_154 = __temp_155 + __temp_156 + __temp_162 + __temp_166;
    double __temp_153 = Math.pow(__temp_154, -1.00000000000000);
    double __temp_171 = 2.00000000000000 * q[0] * p[0];
    double __temp_172 = 2.00000000000000 * q[2] * p[2];
    double __temp_170 = __temp_171 + __temp_172;
    double __temp_175 = -1.00000000000000 * imgP[1];
    double __temp_180 = Math.pow(q[0], 2.00000000000000);
    double __temp_181 = Math.pow(q[2], 2.00000000000000);
    double __temp_179 = __temp_180 + __temp_181;
    double __temp_178 = -2.00000000000000 * __temp_179;
    double __temp_177 = 1.00000000000000 + __temp_178;
    double __temp_176 = __temp_177 * p[1];
    double __temp_184 = q[1] * q[0];
    double __temp_185 = q[2] * q[3];
    double __temp_183 = __temp_184 + __temp_185;
    double __temp_182 = 2.00000000000000 * __temp_183 * p[0];
    double __temp_188 = q[1] * q[2];
    double __temp_189 = -1.00000000000000 * q[0] * q[3];
    double __temp_187 = __temp_188 + __temp_189;
    double __temp_186 = 2.00000000000000 * __temp_187 * p[2];
    double __temp_174 = __temp_175 + __temp_176 + __temp_182 + __temp_186;
    double __temp_173 = Math.pow(__temp_174, -1.00000000000000);
    double __temp_131 = -2.00000000000000 * __temp_132 * __temp_149 * __temp_153 * __temp_170 * __temp_173;
    double __temp_193 = -1.00000000000000 * imgP[2];
    double __temp_198 = Math.pow(q[0], 2.00000000000000);
    double __temp_199 = Math.pow(q[1], 2.00000000000000);
    double __temp_197 = __temp_198 + __temp_199;
    double __temp_196 = -2.00000000000000 * __temp_197;
    double __temp_195 = 1.00000000000000 + __temp_196;
    double __temp_194 = __temp_195 * p[2];
    double __temp_202 = q[0] * q[3];
    double __temp_203 = q[1] * q[2];
    double __temp_201 = __temp_202 + __temp_203;
    double __temp_200 = 2.00000000000000 * __temp_201 * p[1];
    double __temp_206 = q[2] * q[0];
    double __temp_207 = -1.00000000000000 * q[1] * q[3];
    double __temp_205 = __temp_206 + __temp_207;
    double __temp_204 = 2.00000000000000 * __temp_205 * p[0];
    double __temp_192 = __temp_193 + __temp_194 + __temp_200 + __temp_204;
    double __temp_191 = Math.pow(__temp_192, 2.00000000000000);
    double __temp_209 = 2.00000000000000 * q[0] * p[0];
    double __temp_210 = 2.00000000000000 * q[1] * p[1];
    double __temp_208 = __temp_209 + __temp_210;
    double __temp_213 = -1.00000000000000 * imgP[2];
    double __temp_218 = Math.pow(q[0], 2.00000000000000);
    double __temp_219 = Math.pow(q[1], 2.00000000000000);
    double __temp_217 = __temp_218 + __temp_219;
    double __temp_216 = -2.00000000000000 * __temp_217;
    double __temp_215 = 1.00000000000000 + __temp_216;
    double __temp_214 = __temp_215 * p[2];
    double __temp_222 = q[0] * q[3];
    double __temp_223 = q[1] * q[2];
    double __temp_221 = __temp_222 + __temp_223;
    double __temp_220 = 2.00000000000000 * __temp_221 * p[1];
    double __temp_226 = q[2] * q[0];
    double __temp_227 = -1.00000000000000 * q[1] * q[3];
    double __temp_225 = __temp_226 + __temp_227;
    double __temp_224 = 2.00000000000000 * __temp_225 * p[0];
    double __temp_212 = __temp_213 + __temp_214 + __temp_220 + __temp_224;
    double __temp_211 = Math.pow(__temp_212, -1.00000000000000);
    double __temp_229 = -4.00000000000000 * q[1] * p[2];
    double __temp_230 = -2.00000000000000 * q[3] * p[0];
    double __temp_231 = 2.00000000000000 * q[2] * p[1];
    double __temp_228 = __temp_229 + __temp_230 + __temp_231;
    double __temp_234 = -1.00000000000000 * imgP[2];
    double __temp_239 = Math.pow(q[0], 2.00000000000000);
    double __temp_240 = Math.pow(q[1], 2.00000000000000);
    double __temp_238 = __temp_239 + __temp_240;
    double __temp_237 = -2.00000000000000 * __temp_238;
    double __temp_236 = 1.00000000000000 + __temp_237;
    double __temp_235 = __temp_236 * p[2];
    double __temp_243 = q[0] * q[3];
    double __temp_244 = q[1] * q[2];
    double __temp_242 = __temp_243 + __temp_244;
    double __temp_241 = 2.00000000000000 * __temp_242 * p[1];
    double __temp_247 = q[2] * q[0];
    double __temp_248 = -1.00000000000000 * q[1] * q[3];
    double __temp_246 = __temp_247 + __temp_248;
    double __temp_245 = 2.00000000000000 * __temp_246 * p[0];
    double __temp_233 = __temp_234 + __temp_235 + __temp_241 + __temp_245;
    double __temp_232 = Math.pow(__temp_233, -1.00000000000000);
    double __temp_190 = -2.00000000000000 * __temp_191 * __temp_208 * __temp_211 * __temp_228 * __temp_232;
    double __temp_252 = -1.00000000000000 * imgP[0];
    double __temp_257 = Math.pow(q[1], 2.00000000000000);
    double __temp_258 = Math.pow(q[2], 2.00000000000000);
    double __temp_256 = __temp_257 + __temp_258;
    double __temp_255 = -2.00000000000000 * __temp_256;
    double __temp_254 = 1.00000000000000 + __temp_255;
    double __temp_253 = __temp_254 * p[0];
    double __temp_261 = q[1] * q[0];
    double __temp_262 = -1.00000000000000 * q[2] * q[3];
    double __temp_260 = __temp_261 + __temp_262;
    double __temp_259 = 2.00000000000000 * __temp_260 * p[1];
    double __temp_265 = q[1] * q[3];
    double __temp_266 = q[2] * q[0];
    double __temp_264 = __temp_265 + __temp_266;
    double __temp_263 = 2.00000000000000 * __temp_264 * p[2];
    double __temp_251 = __temp_252 + __temp_253 + __temp_259 + __temp_263;
    double __temp_250 = Math.pow(__temp_251, 2.00000000000000);
    double __temp_268 = -4.00000000000000 * q[1] * p[0];
    double __temp_269 = 2.00000000000000 * q[0] * p[1];
    double __temp_270 = 2.00000000000000 * q[3] * p[2];
    double __temp_267 = __temp_268 + __temp_269 + __temp_270;
    double __temp_273 = -1.00000000000000 * imgP[0];
    double __temp_278 = Math.pow(q[1], 2.00000000000000);
    double __temp_279 = Math.pow(q[2], 2.00000000000000);
    double __temp_277 = __temp_278 + __temp_279;
    double __temp_276 = -2.00000000000000 * __temp_277;
    double __temp_275 = 1.00000000000000 + __temp_276;
    double __temp_274 = __temp_275 * p[0];
    double __temp_282 = q[1] * q[0];
    double __temp_283 = -1.00000000000000 * q[2] * q[3];
    double __temp_281 = __temp_282 + __temp_283;
    double __temp_280 = 2.00000000000000 * __temp_281 * p[1];
    double __temp_286 = q[1] * q[3];
    double __temp_287 = q[2] * q[0];
    double __temp_285 = __temp_286 + __temp_287;
    double __temp_284 = 2.00000000000000 * __temp_285 * p[2];
    double __temp_272 = __temp_273 + __temp_274 + __temp_280 + __temp_284;
    double __temp_271 = Math.pow(__temp_272, -1.00000000000000);
    double __temp_289 = -4.00000000000000 * q[2] * p[0];
    double __temp_290 = -2.00000000000000 * q[3] * p[1];
    double __temp_291 = 2.00000000000000 * q[0] * p[2];
    double __temp_288 = __temp_289 + __temp_290 + __temp_291;
    double __temp_294 = -1.00000000000000 * imgP[0];
    double __temp_299 = Math.pow(q[1], 2.00000000000000);
    double __temp_300 = Math.pow(q[2], 2.00000000000000);
    double __temp_298 = __temp_299 + __temp_300;
    double __temp_297 = -2.00000000000000 * __temp_298;
    double __temp_296 = 1.00000000000000 + __temp_297;
    double __temp_295 = __temp_296 * p[0];
    double __temp_303 = q[1] * q[0];
    double __temp_304 = -1.00000000000000 * q[2] * q[3];
    double __temp_302 = __temp_303 + __temp_304;
    double __temp_301 = 2.00000000000000 * __temp_302 * p[1];
    double __temp_307 = q[1] * q[3];
    double __temp_308 = q[2] * q[0];
    double __temp_306 = __temp_307 + __temp_308;
    double __temp_305 = 2.00000000000000 * __temp_306 * p[2];
    double __temp_293 = __temp_294 + __temp_295 + __temp_301 + __temp_305;
    double __temp_292 = Math.pow(__temp_293, -1.00000000000000);
    double __temp_249 = 4.00000000000000 * __temp_250 * __temp_267 * __temp_271 * __temp_288 * __temp_292;
    double __temp_312 = -1.00000000000000 * imgP[1];
    double __temp_317 = Math.pow(q[0], 2.00000000000000);
    double __temp_318 = Math.pow(q[2], 2.00000000000000);
    double __temp_316 = __temp_317 + __temp_318;
    double __temp_315 = -2.00000000000000 * __temp_316;
    double __temp_314 = 1.00000000000000 + __temp_315;
    double __temp_313 = __temp_314 * p[1];
    double __temp_321 = q[1] * q[0];
    double __temp_322 = q[2] * q[3];
    double __temp_320 = __temp_321 + __temp_322;
    double __temp_319 = 2.00000000000000 * __temp_320 * p[0];
    double __temp_325 = q[1] * q[2];
    double __temp_326 = -1.00000000000000 * q[0] * q[3];
    double __temp_324 = __temp_325 + __temp_326;
    double __temp_323 = 2.00000000000000 * __temp_324 * p[2];
    double __temp_311 = __temp_312 + __temp_313 + __temp_319 + __temp_323;
    double __temp_310 = Math.pow(__temp_311, 2.00000000000000);
    double __temp_328 = 2.00000000000000 * q[0] * p[0];
    double __temp_329 = 2.00000000000000 * q[2] * p[2];
    double __temp_327 = __temp_328 + __temp_329;
    double __temp_332 = -1.00000000000000 * imgP[1];
    double __temp_337 = Math.pow(q[0], 2.00000000000000);
    double __temp_338 = Math.pow(q[2], 2.00000000000000);
    double __temp_336 = __temp_337 + __temp_338;
    double __temp_335 = -2.00000000000000 * __temp_336;
    double __temp_334 = 1.00000000000000 + __temp_335;
    double __temp_333 = __temp_334 * p[1];
    double __temp_341 = q[1] * q[0];
    double __temp_342 = q[2] * q[3];
    double __temp_340 = __temp_341 + __temp_342;
    double __temp_339 = 2.00000000000000 * __temp_340 * p[0];
    double __temp_345 = q[1] * q[2];
    double __temp_346 = -1.00000000000000 * q[0] * q[3];
    double __temp_344 = __temp_345 + __temp_346;
    double __temp_343 = 2.00000000000000 * __temp_344 * p[2];
    double __temp_331 = __temp_332 + __temp_333 + __temp_339 + __temp_343;
    double __temp_330 = Math.pow(__temp_331, -1.00000000000000);
    double __temp_348 = -4.00000000000000 * q[2] * p[1];
    double __temp_349 = 2.00000000000000 * q[1] * p[2];
    double __temp_350 = 2.00000000000000 * q[3] * p[0];
    double __temp_347 = __temp_348 + __temp_349 + __temp_350;
    double __temp_353 = -1.00000000000000 * imgP[1];
    double __temp_358 = Math.pow(q[0], 2.00000000000000);
    double __temp_359 = Math.pow(q[2], 2.00000000000000);
    double __temp_357 = __temp_358 + __temp_359;
    double __temp_356 = -2.00000000000000 * __temp_357;
    double __temp_355 = 1.00000000000000 + __temp_356;
    double __temp_354 = __temp_355 * p[1];
    double __temp_362 = q[1] * q[0];
    double __temp_363 = q[2] * q[3];
    double __temp_361 = __temp_362 + __temp_363;
    double __temp_360 = 2.00000000000000 * __temp_361 * p[0];
    double __temp_366 = q[1] * q[2];
    double __temp_367 = -1.00000000000000 * q[0] * q[3];
    double __temp_365 = __temp_366 + __temp_367;
    double __temp_364 = 2.00000000000000 * __temp_365 * p[2];
    double __temp_352 = __temp_353 + __temp_354 + __temp_360 + __temp_364;
    double __temp_351 = Math.pow(__temp_352, -1.00000000000000);
    double __temp_309 = 4.00000000000000 * __temp_310 * __temp_327 * __temp_330 * __temp_347 * __temp_351;
    double __temp_371 = -1.00000000000000 * imgP[2];
    double __temp_376 = Math.pow(q[0], 2.00000000000000);
    double __temp_377 = Math.pow(q[1], 2.00000000000000);
    double __temp_375 = __temp_376 + __temp_377;
    double __temp_374 = -2.00000000000000 * __temp_375;
    double __temp_373 = 1.00000000000000 + __temp_374;
    double __temp_372 = __temp_373 * p[2];
    double __temp_380 = q[0] * q[3];
    double __temp_381 = q[1] * q[2];
    double __temp_379 = __temp_380 + __temp_381;
    double __temp_378 = 2.00000000000000 * __temp_379 * p[1];
    double __temp_384 = q[2] * q[0];
    double __temp_385 = -1.00000000000000 * q[1] * q[3];
    double __temp_383 = __temp_384 + __temp_385;
    double __temp_382 = 2.00000000000000 * __temp_383 * p[0];
    double __temp_370 = __temp_371 + __temp_372 + __temp_378 + __temp_382;
    double __temp_369 = Math.pow(__temp_370, 2.00000000000000);
    double __temp_387 = -4.00000000000000 * q[1] * p[2];
    double __temp_388 = -2.00000000000000 * q[3] * p[0];
    double __temp_389 = 2.00000000000000 * q[2] * p[1];
    double __temp_386 = __temp_387 + __temp_388 + __temp_389;
    double __temp_392 = -1.00000000000000 * imgP[2];
    double __temp_397 = Math.pow(q[0], 2.00000000000000);
    double __temp_398 = Math.pow(q[1], 2.00000000000000);
    double __temp_396 = __temp_397 + __temp_398;
    double __temp_395 = -2.00000000000000 * __temp_396;
    double __temp_394 = 1.00000000000000 + __temp_395;
    double __temp_393 = __temp_394 * p[2];
    double __temp_401 = q[0] * q[3];
    double __temp_402 = q[1] * q[2];
    double __temp_400 = __temp_401 + __temp_402;
    double __temp_399 = 2.00000000000000 * __temp_400 * p[1];
    double __temp_405 = q[2] * q[0];
    double __temp_406 = -1.00000000000000 * q[1] * q[3];
    double __temp_404 = __temp_405 + __temp_406;
    double __temp_403 = 2.00000000000000 * __temp_404 * p[0];
    double __temp_391 = __temp_392 + __temp_393 + __temp_399 + __temp_403;
    double __temp_390 = Math.pow(__temp_391, -1.00000000000000);
    double __temp_408 = 2.00000000000000 * q[0] * p[0];
    double __temp_409 = 2.00000000000000 * q[1] * p[1];
    double __temp_407 = __temp_408 + __temp_409;
    double __temp_412 = -1.00000000000000 * imgP[2];
    double __temp_417 = Math.pow(q[0], 2.00000000000000);
    double __temp_418 = Math.pow(q[1], 2.00000000000000);
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = -2.00000000000000 * __temp_416;
    double __temp_414 = 1.00000000000000 + __temp_415;
    double __temp_413 = __temp_414 * p[2];
    double __temp_421 = q[0] * q[3];
    double __temp_422 = q[1] * q[2];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[1];
    double __temp_425 = q[2] * q[0];
    double __temp_426 = -1.00000000000000 * q[1] * q[3];
    double __temp_424 = __temp_425 + __temp_426;
    double __temp_423 = 2.00000000000000 * __temp_424 * p[0];
    double __temp_411 = __temp_412 + __temp_413 + __temp_419 + __temp_423;
    double __temp_410 = Math.pow(__temp_411, -1.00000000000000);
    double __temp_368 = 4.00000000000000 * __temp_369 * __temp_386 * __temp_390 * __temp_407 * __temp_410;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_131 + __temp_190 + __temp_249 + __temp_309 + __temp_368;
    return __temp_0;
  }

  public static double partialDerivative_2_2(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = -1.00000000000000 * q[2] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[1];
    double __temp_17 = q[1] * q[3];
    double __temp_18 = q[2] * q[0];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[0];
    double __temp_26 = Math.pow(q[1], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[0];
    double __temp_30 = q[0] * q[1];
    double __temp_31 = -1.00000000000000 * q[2] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[1];
    double __temp_34 = q[1] * q[3];
    double __temp_35 = q[2] * q[0];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = -8.00000000000000 * __temp_2 * p[0] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[1];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[2], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[1];
    double __temp_48 = q[0] * q[1];
    double __temp_49 = q[2] * q[3];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[0];
    double __temp_52 = q[2] * q[1];
    double __temp_53 = -1.00000000000000 * q[0] * q[3];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[2];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[1];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[2], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[1];
    double __temp_65 = q[0] * q[1];
    double __temp_66 = q[2] * q[3];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[0];
    double __temp_69 = q[2] * q[1];
    double __temp_70 = -1.00000000000000 * q[0] * q[3];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[2];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = -8.00000000000000 * __temp_37 * p[1] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[1];
    double __temp_84 = -1.00000000000000 * q[2] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[1] * q[3];
    double __temp_88 = q[2] * q[0];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -4.00000000000000 * q[2] * p[0];
    double __temp_91 = -2.00000000000000 * q[3] * p[1];
    double __temp_92 = 2.00000000000000 * q[0] * p[2];
    double __temp_89 = __temp_90 + __temp_91 + __temp_92;
    double __temp_95 = -1.00000000000000 * imgP[0];
    double __temp_100 = Math.pow(q[1], 2.00000000000000);
    double __temp_101 = Math.pow(q[2], 2.00000000000000);
    double __temp_99 = __temp_100 + __temp_101;
    double __temp_98 = -2.00000000000000 * __temp_99;
    double __temp_97 = 1.00000000000000 + __temp_98;
    double __temp_96 = __temp_97 * p[0];
    double __temp_104 = q[0] * q[1];
    double __temp_105 = -1.00000000000000 * q[2] * q[3];
    double __temp_103 = __temp_104 + __temp_105;
    double __temp_102 = 2.00000000000000 * __temp_103 * p[1];
    double __temp_108 = q[1] * q[3];
    double __temp_109 = q[2] * q[0];
    double __temp_107 = __temp_108 + __temp_109;
    double __temp_106 = 2.00000000000000 * __temp_107 * p[2];
    double __temp_94 = __temp_95 + __temp_96 + __temp_102 + __temp_106;
    double __temp_93 = Math.pow(__temp_94, -1.00000000000000);
    double __temp_111 = -4.00000000000000 * q[2] * p[0];
    double __temp_112 = -2.00000000000000 * q[3] * p[1];
    double __temp_113 = 2.00000000000000 * q[0] * p[2];
    double __temp_110 = __temp_111 + __temp_112 + __temp_113;
    double __temp_116 = -1.00000000000000 * imgP[0];
    double __temp_121 = Math.pow(q[1], 2.00000000000000);
    double __temp_122 = Math.pow(q[2], 2.00000000000000);
    double __temp_120 = __temp_121 + __temp_122;
    double __temp_119 = -2.00000000000000 * __temp_120;
    double __temp_118 = 1.00000000000000 + __temp_119;
    double __temp_117 = __temp_118 * p[0];
    double __temp_125 = q[0] * q[1];
    double __temp_126 = -1.00000000000000 * q[2] * q[3];
    double __temp_124 = __temp_125 + __temp_126;
    double __temp_123 = 2.00000000000000 * __temp_124 * p[1];
    double __temp_129 = q[1] * q[3];
    double __temp_130 = q[2] * q[0];
    double __temp_128 = __temp_129 + __temp_130;
    double __temp_127 = 2.00000000000000 * __temp_128 * p[2];
    double __temp_115 = __temp_116 + __temp_117 + __temp_123 + __temp_127;
    double __temp_114 = Math.pow(__temp_115, -1.00000000000000);
    double __temp_71 = 2.00000000000000 * __temp_72 * __temp_89 * __temp_93 * __temp_110 * __temp_114;
    double __temp_134 = -1.00000000000000 * imgP[1];
    double __temp_139 = Math.pow(q[0], 2.00000000000000);
    double __temp_140 = Math.pow(q[2], 2.00000000000000);
    double __temp_138 = __temp_139 + __temp_140;
    double __temp_137 = -2.00000000000000 * __temp_138;
    double __temp_136 = 1.00000000000000 + __temp_137;
    double __temp_135 = __temp_136 * p[1];
    double __temp_143 = q[0] * q[1];
    double __temp_144 = q[2] * q[3];
    double __temp_142 = __temp_143 + __temp_144;
    double __temp_141 = 2.00000000000000 * __temp_142 * p[0];
    double __temp_147 = q[2] * q[1];
    double __temp_148 = -1.00000000000000 * q[0] * q[3];
    double __temp_146 = __temp_147 + __temp_148;
    double __temp_145 = 2.00000000000000 * __temp_146 * p[2];
    double __temp_133 = __temp_134 + __temp_135 + __temp_141 + __temp_145;
    double __temp_132 = Math.pow(__temp_133, 2.00000000000000);
    double __temp_150 = -4.00000000000000 * q[2] * p[1];
    double __temp_151 = 2.00000000000000 * q[1] * p[2];
    double __temp_152 = 2.00000000000000 * q[3] * p[0];
    double __temp_149 = __temp_150 + __temp_151 + __temp_152;
    double __temp_155 = -1.00000000000000 * imgP[1];
    double __temp_160 = Math.pow(q[0], 2.00000000000000);
    double __temp_161 = Math.pow(q[2], 2.00000000000000);
    double __temp_159 = __temp_160 + __temp_161;
    double __temp_158 = -2.00000000000000 * __temp_159;
    double __temp_157 = 1.00000000000000 + __temp_158;
    double __temp_156 = __temp_157 * p[1];
    double __temp_164 = q[0] * q[1];
    double __temp_165 = q[2] * q[3];
    double __temp_163 = __temp_164 + __temp_165;
    double __temp_162 = 2.00000000000000 * __temp_163 * p[0];
    double __temp_168 = q[2] * q[1];
    double __temp_169 = -1.00000000000000 * q[0] * q[3];
    double __temp_167 = __temp_168 + __temp_169;
    double __temp_166 = 2.00000000000000 * __temp_167 * p[2];
    double __temp_154 = __temp_155 + __temp_156 + __temp_162 + __temp_166;
    double __temp_153 = Math.pow(__temp_154, -1.00000000000000);
    double __temp_171 = -4.00000000000000 * q[2] * p[1];
    double __temp_172 = 2.00000000000000 * q[1] * p[2];
    double __temp_173 = 2.00000000000000 * q[3] * p[0];
    double __temp_170 = __temp_171 + __temp_172 + __temp_173;
    double __temp_176 = -1.00000000000000 * imgP[1];
    double __temp_181 = Math.pow(q[0], 2.00000000000000);
    double __temp_182 = Math.pow(q[2], 2.00000000000000);
    double __temp_180 = __temp_181 + __temp_182;
    double __temp_179 = -2.00000000000000 * __temp_180;
    double __temp_178 = 1.00000000000000 + __temp_179;
    double __temp_177 = __temp_178 * p[1];
    double __temp_185 = q[0] * q[1];
    double __temp_186 = q[2] * q[3];
    double __temp_184 = __temp_185 + __temp_186;
    double __temp_183 = 2.00000000000000 * __temp_184 * p[0];
    double __temp_189 = q[2] * q[1];
    double __temp_190 = -1.00000000000000 * q[0] * q[3];
    double __temp_188 = __temp_189 + __temp_190;
    double __temp_187 = 2.00000000000000 * __temp_188 * p[2];
    double __temp_175 = __temp_176 + __temp_177 + __temp_183 + __temp_187;
    double __temp_174 = Math.pow(__temp_175, -1.00000000000000);
    double __temp_131 = 2.00000000000000 * __temp_132 * __temp_149 * __temp_153 * __temp_170 * __temp_174;
    double __temp_194 = -1.00000000000000 * imgP[2];
    double __temp_199 = Math.pow(q[0], 2.00000000000000);
    double __temp_200 = Math.pow(q[1], 2.00000000000000);
    double __temp_198 = __temp_199 + __temp_200;
    double __temp_197 = -2.00000000000000 * __temp_198;
    double __temp_196 = 1.00000000000000 + __temp_197;
    double __temp_195 = __temp_196 * p[2];
    double __temp_203 = q[0] * q[3];
    double __temp_204 = q[2] * q[1];
    double __temp_202 = __temp_203 + __temp_204;
    double __temp_201 = 2.00000000000000 * __temp_202 * p[1];
    double __temp_207 = q[2] * q[0];
    double __temp_208 = -1.00000000000000 * q[1] * q[3];
    double __temp_206 = __temp_207 + __temp_208;
    double __temp_205 = 2.00000000000000 * __temp_206 * p[0];
    double __temp_193 = __temp_194 + __temp_195 + __temp_201 + __temp_205;
    double __temp_192 = Math.pow(__temp_193, 2.00000000000000);
    double __temp_210 = 2.00000000000000 * q[0] * p[0];
    double __temp_211 = 2.00000000000000 * q[1] * p[1];
    double __temp_209 = __temp_210 + __temp_211;
    double __temp_214 = -1.00000000000000 * imgP[2];
    double __temp_219 = Math.pow(q[0], 2.00000000000000);
    double __temp_220 = Math.pow(q[1], 2.00000000000000);
    double __temp_218 = __temp_219 + __temp_220;
    double __temp_217 = -2.00000000000000 * __temp_218;
    double __temp_216 = 1.00000000000000 + __temp_217;
    double __temp_215 = __temp_216 * p[2];
    double __temp_223 = q[0] * q[3];
    double __temp_224 = q[2] * q[1];
    double __temp_222 = __temp_223 + __temp_224;
    double __temp_221 = 2.00000000000000 * __temp_222 * p[1];
    double __temp_227 = q[2] * q[0];
    double __temp_228 = -1.00000000000000 * q[1] * q[3];
    double __temp_226 = __temp_227 + __temp_228;
    double __temp_225 = 2.00000000000000 * __temp_226 * p[0];
    double __temp_213 = __temp_214 + __temp_215 + __temp_221 + __temp_225;
    double __temp_212 = Math.pow(__temp_213, -1.00000000000000);
    double __temp_230 = 2.00000000000000 * q[0] * p[0];
    double __temp_231 = 2.00000000000000 * q[1] * p[1];
    double __temp_229 = __temp_230 + __temp_231;
    double __temp_234 = -1.00000000000000 * imgP[2];
    double __temp_239 = Math.pow(q[0], 2.00000000000000);
    double __temp_240 = Math.pow(q[1], 2.00000000000000);
    double __temp_238 = __temp_239 + __temp_240;
    double __temp_237 = -2.00000000000000 * __temp_238;
    double __temp_236 = 1.00000000000000 + __temp_237;
    double __temp_235 = __temp_236 * p[2];
    double __temp_243 = q[0] * q[3];
    double __temp_244 = q[2] * q[1];
    double __temp_242 = __temp_243 + __temp_244;
    double __temp_241 = 2.00000000000000 * __temp_242 * p[1];
    double __temp_247 = q[2] * q[0];
    double __temp_248 = -1.00000000000000 * q[1] * q[3];
    double __temp_246 = __temp_247 + __temp_248;
    double __temp_245 = 2.00000000000000 * __temp_246 * p[0];
    double __temp_233 = __temp_234 + __temp_235 + __temp_241 + __temp_245;
    double __temp_232 = Math.pow(__temp_233, -1.00000000000000);
    double __temp_191 = 2.00000000000000 * __temp_192 * __temp_209 * __temp_212 * __temp_229 * __temp_232;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_131 + __temp_191;
    return __temp_0;
  }

  public static double partialDerivative_2_3(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = -1.00000000000000 * q[3] * q[2];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[1];
    double __temp_17 = q[2] * q[0];
    double __temp_18 = q[3] * q[1];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[0];
    double __temp_26 = Math.pow(q[1], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[0];
    double __temp_30 = q[0] * q[1];
    double __temp_31 = -1.00000000000000 * q[3] * q[2];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[1];
    double __temp_34 = q[2] * q[0];
    double __temp_35 = q[3] * q[1];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = -4.00000000000000 * __temp_2 * p[1] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[1];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[2], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[1];
    double __temp_48 = q[0] * q[1];
    double __temp_49 = q[3] * q[2];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[0];
    double __temp_52 = q[2] * q[1];
    double __temp_53 = -1.00000000000000 * q[3] * q[0];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[2];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[1];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[2], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[1];
    double __temp_65 = q[0] * q[1];
    double __temp_66 = q[3] * q[2];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[0];
    double __temp_69 = q[2] * q[1];
    double __temp_70 = -1.00000000000000 * q[3] * q[0];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[2];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[0] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[1];
    double __temp_84 = -1.00000000000000 * q[3] * q[2];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[2] * q[0];
    double __temp_88 = q[3] * q[1];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -4.00000000000000 * q[2] * p[0];
    double __temp_91 = -2.00000000000000 * q[3] * p[1];
    double __temp_92 = 2.00000000000000 * q[0] * p[2];
    double __temp_89 = __temp_90 + __temp_91 + __temp_92;
    double __temp_95 = -1.00000000000000 * imgP[0];
    double __temp_100 = Math.pow(q[1], 2.00000000000000);
    double __temp_101 = Math.pow(q[2], 2.00000000000000);
    double __temp_99 = __temp_100 + __temp_101;
    double __temp_98 = -2.00000000000000 * __temp_99;
    double __temp_97 = 1.00000000000000 + __temp_98;
    double __temp_96 = __temp_97 * p[0];
    double __temp_104 = q[0] * q[1];
    double __temp_105 = -1.00000000000000 * q[3] * q[2];
    double __temp_103 = __temp_104 + __temp_105;
    double __temp_102 = 2.00000000000000 * __temp_103 * p[1];
    double __temp_108 = q[2] * q[0];
    double __temp_109 = q[3] * q[1];
    double __temp_107 = __temp_108 + __temp_109;
    double __temp_106 = 2.00000000000000 * __temp_107 * p[2];
    double __temp_94 = __temp_95 + __temp_96 + __temp_102 + __temp_106;
    double __temp_93 = Math.pow(__temp_94, -1.00000000000000);
    double __temp_111 = -2.00000000000000 * q[2] * p[1];
    double __temp_112 = 2.00000000000000 * q[1] * p[2];
    double __temp_110 = __temp_111 + __temp_112;
    double __temp_115 = -1.00000000000000 * imgP[0];
    double __temp_120 = Math.pow(q[1], 2.00000000000000);
    double __temp_121 = Math.pow(q[2], 2.00000000000000);
    double __temp_119 = __temp_120 + __temp_121;
    double __temp_118 = -2.00000000000000 * __temp_119;
    double __temp_117 = 1.00000000000000 + __temp_118;
    double __temp_116 = __temp_117 * p[0];
    double __temp_124 = q[0] * q[1];
    double __temp_125 = -1.00000000000000 * q[3] * q[2];
    double __temp_123 = __temp_124 + __temp_125;
    double __temp_122 = 2.00000000000000 * __temp_123 * p[1];
    double __temp_128 = q[2] * q[0];
    double __temp_129 = q[3] * q[1];
    double __temp_127 = __temp_128 + __temp_129;
    double __temp_126 = 2.00000000000000 * __temp_127 * p[2];
    double __temp_114 = __temp_115 + __temp_116 + __temp_122 + __temp_126;
    double __temp_113 = Math.pow(__temp_114, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_93 * __temp_110 * __temp_113;
    double __temp_133 = -1.00000000000000 * imgP[1];
    double __temp_138 = Math.pow(q[0], 2.00000000000000);
    double __temp_139 = Math.pow(q[2], 2.00000000000000);
    double __temp_137 = __temp_138 + __temp_139;
    double __temp_136 = -2.00000000000000 * __temp_137;
    double __temp_135 = 1.00000000000000 + __temp_136;
    double __temp_134 = __temp_135 * p[1];
    double __temp_142 = q[0] * q[1];
    double __temp_143 = q[3] * q[2];
    double __temp_141 = __temp_142 + __temp_143;
    double __temp_140 = 2.00000000000000 * __temp_141 * p[0];
    double __temp_146 = q[2] * q[1];
    double __temp_147 = -1.00000000000000 * q[3] * q[0];
    double __temp_145 = __temp_146 + __temp_147;
    double __temp_144 = 2.00000000000000 * __temp_145 * p[2];
    double __temp_132 = __temp_133 + __temp_134 + __temp_140 + __temp_144;
    double __temp_131 = Math.pow(__temp_132, 2.00000000000000);
    double __temp_149 = -4.00000000000000 * q[2] * p[1];
    double __temp_150 = 2.00000000000000 * q[1] * p[2];
    double __temp_151 = 2.00000000000000 * q[3] * p[0];
    double __temp_148 = __temp_149 + __temp_150 + __temp_151;
    double __temp_154 = -1.00000000000000 * imgP[1];
    double __temp_159 = Math.pow(q[0], 2.00000000000000);
    double __temp_160 = Math.pow(q[2], 2.00000000000000);
    double __temp_158 = __temp_159 + __temp_160;
    double __temp_157 = -2.00000000000000 * __temp_158;
    double __temp_156 = 1.00000000000000 + __temp_157;
    double __temp_155 = __temp_156 * p[1];
    double __temp_163 = q[0] * q[1];
    double __temp_164 = q[3] * q[2];
    double __temp_162 = __temp_163 + __temp_164;
    double __temp_161 = 2.00000000000000 * __temp_162 * p[0];
    double __temp_167 = q[2] * q[1];
    double __temp_168 = -1.00000000000000 * q[3] * q[0];
    double __temp_166 = __temp_167 + __temp_168;
    double __temp_165 = 2.00000000000000 * __temp_166 * p[2];
    double __temp_153 = __temp_154 + __temp_155 + __temp_161 + __temp_165;
    double __temp_152 = Math.pow(__temp_153, -1.00000000000000);
    double __temp_170 = -2.00000000000000 * q[0] * p[2];
    double __temp_171 = 2.00000000000000 * q[2] * p[0];
    double __temp_169 = __temp_170 + __temp_171;
    double __temp_174 = -1.00000000000000 * imgP[1];
    double __temp_179 = Math.pow(q[0], 2.00000000000000);
    double __temp_180 = Math.pow(q[2], 2.00000000000000);
    double __temp_178 = __temp_179 + __temp_180;
    double __temp_177 = -2.00000000000000 * __temp_178;
    double __temp_176 = 1.00000000000000 + __temp_177;
    double __temp_175 = __temp_176 * p[1];
    double __temp_183 = q[0] * q[1];
    double __temp_184 = q[3] * q[2];
    double __temp_182 = __temp_183 + __temp_184;
    double __temp_181 = 2.00000000000000 * __temp_182 * p[0];
    double __temp_187 = q[2] * q[1];
    double __temp_188 = -1.00000000000000 * q[3] * q[0];
    double __temp_186 = __temp_187 + __temp_188;
    double __temp_185 = 2.00000000000000 * __temp_186 * p[2];
    double __temp_173 = __temp_174 + __temp_175 + __temp_181 + __temp_185;
    double __temp_172 = Math.pow(__temp_173, -1.00000000000000);
    double __temp_130 = -2.00000000000000 * __temp_131 * __temp_148 * __temp_152 * __temp_169 * __temp_172;
    double __temp_192 = -1.00000000000000 * imgP[2];
    double __temp_197 = Math.pow(q[0], 2.00000000000000);
    double __temp_198 = Math.pow(q[1], 2.00000000000000);
    double __temp_196 = __temp_197 + __temp_198;
    double __temp_195 = -2.00000000000000 * __temp_196;
    double __temp_194 = 1.00000000000000 + __temp_195;
    double __temp_193 = __temp_194 * p[2];
    double __temp_201 = q[2] * q[0];
    double __temp_202 = -1.00000000000000 * q[3] * q[1];
    double __temp_200 = __temp_201 + __temp_202;
    double __temp_199 = 2.00000000000000 * __temp_200 * p[0];
    double __temp_205 = q[2] * q[1];
    double __temp_206 = q[3] * q[0];
    double __temp_204 = __temp_205 + __temp_206;
    double __temp_203 = 2.00000000000000 * __temp_204 * p[1];
    double __temp_191 = __temp_192 + __temp_193 + __temp_199 + __temp_203;
    double __temp_190 = Math.pow(__temp_191, 2.00000000000000);
    double __temp_208 = 2.00000000000000 * q[0] * p[0];
    double __temp_209 = 2.00000000000000 * q[1] * p[1];
    double __temp_207 = __temp_208 + __temp_209;
    double __temp_212 = -1.00000000000000 * imgP[2];
    double __temp_217 = Math.pow(q[0], 2.00000000000000);
    double __temp_218 = Math.pow(q[1], 2.00000000000000);
    double __temp_216 = __temp_217 + __temp_218;
    double __temp_215 = -2.00000000000000 * __temp_216;
    double __temp_214 = 1.00000000000000 + __temp_215;
    double __temp_213 = __temp_214 * p[2];
    double __temp_221 = q[2] * q[0];
    double __temp_222 = -1.00000000000000 * q[3] * q[1];
    double __temp_220 = __temp_221 + __temp_222;
    double __temp_219 = 2.00000000000000 * __temp_220 * p[0];
    double __temp_225 = q[2] * q[1];
    double __temp_226 = q[3] * q[0];
    double __temp_224 = __temp_225 + __temp_226;
    double __temp_223 = 2.00000000000000 * __temp_224 * p[1];
    double __temp_211 = __temp_212 + __temp_213 + __temp_219 + __temp_223;
    double __temp_210 = Math.pow(__temp_211, -1.00000000000000);
    double __temp_228 = -2.00000000000000 * q[1] * p[0];
    double __temp_229 = 2.00000000000000 * q[0] * p[1];
    double __temp_227 = __temp_228 + __temp_229;
    double __temp_232 = -1.00000000000000 * imgP[2];
    double __temp_237 = Math.pow(q[0], 2.00000000000000);
    double __temp_238 = Math.pow(q[1], 2.00000000000000);
    double __temp_236 = __temp_237 + __temp_238;
    double __temp_235 = -2.00000000000000 * __temp_236;
    double __temp_234 = 1.00000000000000 + __temp_235;
    double __temp_233 = __temp_234 * p[2];
    double __temp_241 = q[2] * q[0];
    double __temp_242 = -1.00000000000000 * q[3] * q[1];
    double __temp_240 = __temp_241 + __temp_242;
    double __temp_239 = 2.00000000000000 * __temp_240 * p[0];
    double __temp_245 = q[2] * q[1];
    double __temp_246 = q[3] * q[0];
    double __temp_244 = __temp_245 + __temp_246;
    double __temp_243 = 2.00000000000000 * __temp_244 * p[1];
    double __temp_231 = __temp_232 + __temp_233 + __temp_239 + __temp_243;
    double __temp_230 = Math.pow(__temp_231, -1.00000000000000);
    double __temp_189 = -2.00000000000000 * __temp_190 * __temp_207 * __temp_210 * __temp_227 * __temp_230;
    double __temp_250 = -1.00000000000000 * imgP[0];
    double __temp_255 = Math.pow(q[1], 2.00000000000000);
    double __temp_256 = Math.pow(q[2], 2.00000000000000);
    double __temp_254 = __temp_255 + __temp_256;
    double __temp_253 = -2.00000000000000 * __temp_254;
    double __temp_252 = 1.00000000000000 + __temp_253;
    double __temp_251 = __temp_252 * p[0];
    double __temp_259 = q[0] * q[1];
    double __temp_260 = -1.00000000000000 * q[3] * q[2];
    double __temp_258 = __temp_259 + __temp_260;
    double __temp_257 = 2.00000000000000 * __temp_258 * p[1];
    double __temp_263 = q[2] * q[0];
    double __temp_264 = q[3] * q[1];
    double __temp_262 = __temp_263 + __temp_264;
    double __temp_261 = 2.00000000000000 * __temp_262 * p[2];
    double __temp_249 = __temp_250 + __temp_251 + __temp_257 + __temp_261;
    double __temp_248 = Math.pow(__temp_249, 2.00000000000000);
    double __temp_266 = -2.00000000000000 * q[2] * p[1];
    double __temp_267 = 2.00000000000000 * q[1] * p[2];
    double __temp_265 = __temp_266 + __temp_267;
    double __temp_270 = -1.00000000000000 * imgP[0];
    double __temp_275 = Math.pow(q[1], 2.00000000000000);
    double __temp_276 = Math.pow(q[2], 2.00000000000000);
    double __temp_274 = __temp_275 + __temp_276;
    double __temp_273 = -2.00000000000000 * __temp_274;
    double __temp_272 = 1.00000000000000 + __temp_273;
    double __temp_271 = __temp_272 * p[0];
    double __temp_279 = q[0] * q[1];
    double __temp_280 = -1.00000000000000 * q[3] * q[2];
    double __temp_278 = __temp_279 + __temp_280;
    double __temp_277 = 2.00000000000000 * __temp_278 * p[1];
    double __temp_283 = q[2] * q[0];
    double __temp_284 = q[3] * q[1];
    double __temp_282 = __temp_283 + __temp_284;
    double __temp_281 = 2.00000000000000 * __temp_282 * p[2];
    double __temp_269 = __temp_270 + __temp_271 + __temp_277 + __temp_281;
    double __temp_268 = Math.pow(__temp_269, -1.00000000000000);
    double __temp_286 = -4.00000000000000 * q[2] * p[0];
    double __temp_287 = -2.00000000000000 * q[3] * p[1];
    double __temp_288 = 2.00000000000000 * q[0] * p[2];
    double __temp_285 = __temp_286 + __temp_287 + __temp_288;
    double __temp_291 = -1.00000000000000 * imgP[0];
    double __temp_296 = Math.pow(q[1], 2.00000000000000);
    double __temp_297 = Math.pow(q[2], 2.00000000000000);
    double __temp_295 = __temp_296 + __temp_297;
    double __temp_294 = -2.00000000000000 * __temp_295;
    double __temp_293 = 1.00000000000000 + __temp_294;
    double __temp_292 = __temp_293 * p[0];
    double __temp_300 = q[0] * q[1];
    double __temp_301 = -1.00000000000000 * q[3] * q[2];
    double __temp_299 = __temp_300 + __temp_301;
    double __temp_298 = 2.00000000000000 * __temp_299 * p[1];
    double __temp_304 = q[2] * q[0];
    double __temp_305 = q[3] * q[1];
    double __temp_303 = __temp_304 + __temp_305;
    double __temp_302 = 2.00000000000000 * __temp_303 * p[2];
    double __temp_290 = __temp_291 + __temp_292 + __temp_298 + __temp_302;
    double __temp_289 = Math.pow(__temp_290, -1.00000000000000);
    double __temp_247 = 4.00000000000000 * __temp_248 * __temp_265 * __temp_268 * __temp_285 * __temp_289;
    double __temp_309 = -1.00000000000000 * imgP[1];
    double __temp_314 = Math.pow(q[0], 2.00000000000000);
    double __temp_315 = Math.pow(q[2], 2.00000000000000);
    double __temp_313 = __temp_314 + __temp_315;
    double __temp_312 = -2.00000000000000 * __temp_313;
    double __temp_311 = 1.00000000000000 + __temp_312;
    double __temp_310 = __temp_311 * p[1];
    double __temp_318 = q[0] * q[1];
    double __temp_319 = q[3] * q[2];
    double __temp_317 = __temp_318 + __temp_319;
    double __temp_316 = 2.00000000000000 * __temp_317 * p[0];
    double __temp_322 = q[2] * q[1];
    double __temp_323 = -1.00000000000000 * q[3] * q[0];
    double __temp_321 = __temp_322 + __temp_323;
    double __temp_320 = 2.00000000000000 * __temp_321 * p[2];
    double __temp_308 = __temp_309 + __temp_310 + __temp_316 + __temp_320;
    double __temp_307 = Math.pow(__temp_308, 2.00000000000000);
    double __temp_325 = -2.00000000000000 * q[0] * p[2];
    double __temp_326 = 2.00000000000000 * q[2] * p[0];
    double __temp_324 = __temp_325 + __temp_326;
    double __temp_329 = -1.00000000000000 * imgP[1];
    double __temp_334 = Math.pow(q[0], 2.00000000000000);
    double __temp_335 = Math.pow(q[2], 2.00000000000000);
    double __temp_333 = __temp_334 + __temp_335;
    double __temp_332 = -2.00000000000000 * __temp_333;
    double __temp_331 = 1.00000000000000 + __temp_332;
    double __temp_330 = __temp_331 * p[1];
    double __temp_338 = q[0] * q[1];
    double __temp_339 = q[3] * q[2];
    double __temp_337 = __temp_338 + __temp_339;
    double __temp_336 = 2.00000000000000 * __temp_337 * p[0];
    double __temp_342 = q[2] * q[1];
    double __temp_343 = -1.00000000000000 * q[3] * q[0];
    double __temp_341 = __temp_342 + __temp_343;
    double __temp_340 = 2.00000000000000 * __temp_341 * p[2];
    double __temp_328 = __temp_329 + __temp_330 + __temp_336 + __temp_340;
    double __temp_327 = Math.pow(__temp_328, -1.00000000000000);
    double __temp_345 = -4.00000000000000 * q[2] * p[1];
    double __temp_346 = 2.00000000000000 * q[1] * p[2];
    double __temp_347 = 2.00000000000000 * q[3] * p[0];
    double __temp_344 = __temp_345 + __temp_346 + __temp_347;
    double __temp_350 = -1.00000000000000 * imgP[1];
    double __temp_355 = Math.pow(q[0], 2.00000000000000);
    double __temp_356 = Math.pow(q[2], 2.00000000000000);
    double __temp_354 = __temp_355 + __temp_356;
    double __temp_353 = -2.00000000000000 * __temp_354;
    double __temp_352 = 1.00000000000000 + __temp_353;
    double __temp_351 = __temp_352 * p[1];
    double __temp_359 = q[0] * q[1];
    double __temp_360 = q[3] * q[2];
    double __temp_358 = __temp_359 + __temp_360;
    double __temp_357 = 2.00000000000000 * __temp_358 * p[0];
    double __temp_363 = q[2] * q[1];
    double __temp_364 = -1.00000000000000 * q[3] * q[0];
    double __temp_362 = __temp_363 + __temp_364;
    double __temp_361 = 2.00000000000000 * __temp_362 * p[2];
    double __temp_349 = __temp_350 + __temp_351 + __temp_357 + __temp_361;
    double __temp_348 = Math.pow(__temp_349, -1.00000000000000);
    double __temp_306 = 4.00000000000000 * __temp_307 * __temp_324 * __temp_327 * __temp_344 * __temp_348;
    double __temp_368 = -1.00000000000000 * imgP[2];
    double __temp_373 = Math.pow(q[0], 2.00000000000000);
    double __temp_374 = Math.pow(q[1], 2.00000000000000);
    double __temp_372 = __temp_373 + __temp_374;
    double __temp_371 = -2.00000000000000 * __temp_372;
    double __temp_370 = 1.00000000000000 + __temp_371;
    double __temp_369 = __temp_370 * p[2];
    double __temp_377 = q[2] * q[0];
    double __temp_378 = -1.00000000000000 * q[3] * q[1];
    double __temp_376 = __temp_377 + __temp_378;
    double __temp_375 = 2.00000000000000 * __temp_376 * p[0];
    double __temp_381 = q[2] * q[1];
    double __temp_382 = q[3] * q[0];
    double __temp_380 = __temp_381 + __temp_382;
    double __temp_379 = 2.00000000000000 * __temp_380 * p[1];
    double __temp_367 = __temp_368 + __temp_369 + __temp_375 + __temp_379;
    double __temp_366 = Math.pow(__temp_367, 2.00000000000000);
    double __temp_384 = -2.00000000000000 * q[1] * p[0];
    double __temp_385 = 2.00000000000000 * q[0] * p[1];
    double __temp_383 = __temp_384 + __temp_385;
    double __temp_388 = -1.00000000000000 * imgP[2];
    double __temp_393 = Math.pow(q[0], 2.00000000000000);
    double __temp_394 = Math.pow(q[1], 2.00000000000000);
    double __temp_392 = __temp_393 + __temp_394;
    double __temp_391 = -2.00000000000000 * __temp_392;
    double __temp_390 = 1.00000000000000 + __temp_391;
    double __temp_389 = __temp_390 * p[2];
    double __temp_397 = q[2] * q[0];
    double __temp_398 = -1.00000000000000 * q[3] * q[1];
    double __temp_396 = __temp_397 + __temp_398;
    double __temp_395 = 2.00000000000000 * __temp_396 * p[0];
    double __temp_401 = q[2] * q[1];
    double __temp_402 = q[3] * q[0];
    double __temp_400 = __temp_401 + __temp_402;
    double __temp_399 = 2.00000000000000 * __temp_400 * p[1];
    double __temp_387 = __temp_388 + __temp_389 + __temp_395 + __temp_399;
    double __temp_386 = Math.pow(__temp_387, -1.00000000000000);
    double __temp_404 = 2.00000000000000 * q[0] * p[0];
    double __temp_405 = 2.00000000000000 * q[1] * p[1];
    double __temp_403 = __temp_404 + __temp_405;
    double __temp_408 = -1.00000000000000 * imgP[2];
    double __temp_413 = Math.pow(q[0], 2.00000000000000);
    double __temp_414 = Math.pow(q[1], 2.00000000000000);
    double __temp_412 = __temp_413 + __temp_414;
    double __temp_411 = -2.00000000000000 * __temp_412;
    double __temp_410 = 1.00000000000000 + __temp_411;
    double __temp_409 = __temp_410 * p[2];
    double __temp_417 = q[2] * q[0];
    double __temp_418 = -1.00000000000000 * q[3] * q[1];
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = 2.00000000000000 * __temp_416 * p[0];
    double __temp_421 = q[2] * q[1];
    double __temp_422 = q[3] * q[0];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[1];
    double __temp_407 = __temp_408 + __temp_409 + __temp_415 + __temp_419;
    double __temp_406 = Math.pow(__temp_407, -1.00000000000000);
    double __temp_365 = 4.00000000000000 * __temp_366 * __temp_383 * __temp_386 * __temp_403 * __temp_406;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_130 + __temp_189 + __temp_247 + __temp_306 + __temp_365;
    return __temp_0;
  }

  public static double partialDerivative_3_0(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[1];
    double __temp_9 = Math.pow(q[0], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[1];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = q[3] * q[2];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[0];
    double __temp_17 = q[1] * q[2];
    double __temp_18 = -1.00000000000000 * q[0] * q[3];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[1];
    double __temp_26 = Math.pow(q[0], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[1];
    double __temp_30 = q[0] * q[1];
    double __temp_31 = q[3] * q[2];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[0];
    double __temp_34 = q[1] * q[2];
    double __temp_35 = -1.00000000000000 * q[0] * q[3];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = -4.00000000000000 * __temp_2 * p[2] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[2];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[1], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[2];
    double __temp_48 = q[0] * q[2];
    double __temp_49 = -1.00000000000000 * q[3] * q[1];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[0];
    double __temp_52 = q[0] * q[3];
    double __temp_53 = q[1] * q[2];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[1];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[2];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[1], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[2];
    double __temp_65 = q[0] * q[2];
    double __temp_66 = -1.00000000000000 * q[3] * q[1];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[0];
    double __temp_69 = q[0] * q[3];
    double __temp_70 = q[1] * q[2];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[1];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[1] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[1];
    double __temp_84 = -1.00000000000000 * q[3] * q[2];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[0] * q[2];
    double __temp_88 = q[3] * q[1];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -2.00000000000000 * q[2] * p[1];
    double __temp_91 = 2.00000000000000 * q[1] * p[2];
    double __temp_89 = __temp_90 + __temp_91;
    double __temp_94 = -1.00000000000000 * imgP[0];
    double __temp_99 = Math.pow(q[1], 2.00000000000000);
    double __temp_100 = Math.pow(q[2], 2.00000000000000);
    double __temp_98 = __temp_99 + __temp_100;
    double __temp_97 = -2.00000000000000 * __temp_98;
    double __temp_96 = 1.00000000000000 + __temp_97;
    double __temp_95 = __temp_96 * p[0];
    double __temp_103 = q[0] * q[1];
    double __temp_104 = -1.00000000000000 * q[3] * q[2];
    double __temp_102 = __temp_103 + __temp_104;
    double __temp_101 = 2.00000000000000 * __temp_102 * p[1];
    double __temp_107 = q[0] * q[2];
    double __temp_108 = q[3] * q[1];
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = 2.00000000000000 * __temp_106 * p[2];
    double __temp_93 = __temp_94 + __temp_95 + __temp_101 + __temp_105;
    double __temp_92 = Math.pow(__temp_93, -1.00000000000000);
    double __temp_110 = 2.00000000000000 * q[1] * p[1];
    double __temp_111 = 2.00000000000000 * q[2] * p[2];
    double __temp_109 = __temp_110 + __temp_111;
    double __temp_114 = -1.00000000000000 * imgP[0];
    double __temp_119 = Math.pow(q[1], 2.00000000000000);
    double __temp_120 = Math.pow(q[2], 2.00000000000000);
    double __temp_118 = __temp_119 + __temp_120;
    double __temp_117 = -2.00000000000000 * __temp_118;
    double __temp_116 = 1.00000000000000 + __temp_117;
    double __temp_115 = __temp_116 * p[0];
    double __temp_123 = q[0] * q[1];
    double __temp_124 = -1.00000000000000 * q[3] * q[2];
    double __temp_122 = __temp_123 + __temp_124;
    double __temp_121 = 2.00000000000000 * __temp_122 * p[1];
    double __temp_127 = q[0] * q[2];
    double __temp_128 = q[3] * q[1];
    double __temp_126 = __temp_127 + __temp_128;
    double __temp_125 = 2.00000000000000 * __temp_126 * p[2];
    double __temp_113 = __temp_114 + __temp_115 + __temp_121 + __temp_125;
    double __temp_112 = Math.pow(__temp_113, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_92 * __temp_109 * __temp_112;
    double __temp_132 = -1.00000000000000 * imgP[1];
    double __temp_137 = Math.pow(q[0], 2.00000000000000);
    double __temp_138 = Math.pow(q[2], 2.00000000000000);
    double __temp_136 = __temp_137 + __temp_138;
    double __temp_135 = -2.00000000000000 * __temp_136;
    double __temp_134 = 1.00000000000000 + __temp_135;
    double __temp_133 = __temp_134 * p[1];
    double __temp_141 = q[0] * q[1];
    double __temp_142 = q[3] * q[2];
    double __temp_140 = __temp_141 + __temp_142;
    double __temp_139 = 2.00000000000000 * __temp_140 * p[0];
    double __temp_145 = q[1] * q[2];
    double __temp_146 = -1.00000000000000 * q[0] * q[3];
    double __temp_144 = __temp_145 + __temp_146;
    double __temp_143 = 2.00000000000000 * __temp_144 * p[2];
    double __temp_131 = __temp_132 + __temp_133 + __temp_139 + __temp_143;
    double __temp_130 = Math.pow(__temp_131, 2.00000000000000);
    double __temp_148 = -2.00000000000000 * q[0] * p[2];
    double __temp_149 = 2.00000000000000 * q[2] * p[0];
    double __temp_147 = __temp_148 + __temp_149;
    double __temp_152 = -1.00000000000000 * imgP[1];
    double __temp_157 = Math.pow(q[0], 2.00000000000000);
    double __temp_158 = Math.pow(q[2], 2.00000000000000);
    double __temp_156 = __temp_157 + __temp_158;
    double __temp_155 = -2.00000000000000 * __temp_156;
    double __temp_154 = 1.00000000000000 + __temp_155;
    double __temp_153 = __temp_154 * p[1];
    double __temp_161 = q[0] * q[1];
    double __temp_162 = q[3] * q[2];
    double __temp_160 = __temp_161 + __temp_162;
    double __temp_159 = 2.00000000000000 * __temp_160 * p[0];
    double __temp_165 = q[1] * q[2];
    double __temp_166 = -1.00000000000000 * q[0] * q[3];
    double __temp_164 = __temp_165 + __temp_166;
    double __temp_163 = 2.00000000000000 * __temp_164 * p[2];
    double __temp_151 = __temp_152 + __temp_153 + __temp_159 + __temp_163;
    double __temp_150 = Math.pow(__temp_151, -1.00000000000000);
    double __temp_168 = -4.00000000000000 * q[0] * p[1];
    double __temp_169 = -2.00000000000000 * q[3] * p[2];
    double __temp_170 = 2.00000000000000 * q[1] * p[0];
    double __temp_167 = __temp_168 + __temp_169 + __temp_170;
    double __temp_173 = -1.00000000000000 * imgP[1];
    double __temp_178 = Math.pow(q[0], 2.00000000000000);
    double __temp_179 = Math.pow(q[2], 2.00000000000000);
    double __temp_177 = __temp_178 + __temp_179;
    double __temp_176 = -2.00000000000000 * __temp_177;
    double __temp_175 = 1.00000000000000 + __temp_176;
    double __temp_174 = __temp_175 * p[1];
    double __temp_182 = q[0] * q[1];
    double __temp_183 = q[3] * q[2];
    double __temp_181 = __temp_182 + __temp_183;
    double __temp_180 = 2.00000000000000 * __temp_181 * p[0];
    double __temp_186 = q[1] * q[2];
    double __temp_187 = -1.00000000000000 * q[0] * q[3];
    double __temp_185 = __temp_186 + __temp_187;
    double __temp_184 = 2.00000000000000 * __temp_185 * p[2];
    double __temp_172 = __temp_173 + __temp_174 + __temp_180 + __temp_184;
    double __temp_171 = Math.pow(__temp_172, -1.00000000000000);
    double __temp_129 = -2.00000000000000 * __temp_130 * __temp_147 * __temp_150 * __temp_167 * __temp_171;
    double __temp_191 = -1.00000000000000 * imgP[2];
    double __temp_196 = Math.pow(q[0], 2.00000000000000);
    double __temp_197 = Math.pow(q[1], 2.00000000000000);
    double __temp_195 = __temp_196 + __temp_197;
    double __temp_194 = -2.00000000000000 * __temp_195;
    double __temp_193 = 1.00000000000000 + __temp_194;
    double __temp_192 = __temp_193 * p[2];
    double __temp_200 = q[0] * q[2];
    double __temp_201 = -1.00000000000000 * q[3] * q[1];
    double __temp_199 = __temp_200 + __temp_201;
    double __temp_198 = 2.00000000000000 * __temp_199 * p[0];
    double __temp_204 = q[0] * q[3];
    double __temp_205 = q[1] * q[2];
    double __temp_203 = __temp_204 + __temp_205;
    double __temp_202 = 2.00000000000000 * __temp_203 * p[1];
    double __temp_190 = __temp_191 + __temp_192 + __temp_198 + __temp_202;
    double __temp_189 = Math.pow(__temp_190, 2.00000000000000);
    double __temp_207 = -2.00000000000000 * q[1] * p[0];
    double __temp_208 = 2.00000000000000 * q[0] * p[1];
    double __temp_206 = __temp_207 + __temp_208;
    double __temp_211 = -1.00000000000000 * imgP[2];
    double __temp_216 = Math.pow(q[0], 2.00000000000000);
    double __temp_217 = Math.pow(q[1], 2.00000000000000);
    double __temp_215 = __temp_216 + __temp_217;
    double __temp_214 = -2.00000000000000 * __temp_215;
    double __temp_213 = 1.00000000000000 + __temp_214;
    double __temp_212 = __temp_213 * p[2];
    double __temp_220 = q[0] * q[2];
    double __temp_221 = -1.00000000000000 * q[3] * q[1];
    double __temp_219 = __temp_220 + __temp_221;
    double __temp_218 = 2.00000000000000 * __temp_219 * p[0];
    double __temp_224 = q[0] * q[3];
    double __temp_225 = q[1] * q[2];
    double __temp_223 = __temp_224 + __temp_225;
    double __temp_222 = 2.00000000000000 * __temp_223 * p[1];
    double __temp_210 = __temp_211 + __temp_212 + __temp_218 + __temp_222;
    double __temp_209 = Math.pow(__temp_210, -1.00000000000000);
    double __temp_227 = -4.00000000000000 * q[0] * p[2];
    double __temp_228 = 2.00000000000000 * q[2] * p[0];
    double __temp_229 = 2.00000000000000 * q[3] * p[1];
    double __temp_226 = __temp_227 + __temp_228 + __temp_229;
    double __temp_232 = -1.00000000000000 * imgP[2];
    double __temp_237 = Math.pow(q[0], 2.00000000000000);
    double __temp_238 = Math.pow(q[1], 2.00000000000000);
    double __temp_236 = __temp_237 + __temp_238;
    double __temp_235 = -2.00000000000000 * __temp_236;
    double __temp_234 = 1.00000000000000 + __temp_235;
    double __temp_233 = __temp_234 * p[2];
    double __temp_241 = q[0] * q[2];
    double __temp_242 = -1.00000000000000 * q[3] * q[1];
    double __temp_240 = __temp_241 + __temp_242;
    double __temp_239 = 2.00000000000000 * __temp_240 * p[0];
    double __temp_245 = q[0] * q[3];
    double __temp_246 = q[1] * q[2];
    double __temp_244 = __temp_245 + __temp_246;
    double __temp_243 = 2.00000000000000 * __temp_244 * p[1];
    double __temp_231 = __temp_232 + __temp_233 + __temp_239 + __temp_243;
    double __temp_230 = Math.pow(__temp_231, -1.00000000000000);
    double __temp_188 = -2.00000000000000 * __temp_189 * __temp_206 * __temp_209 * __temp_226 * __temp_230;
    double __temp_250 = -1.00000000000000 * imgP[0];
    double __temp_255 = Math.pow(q[1], 2.00000000000000);
    double __temp_256 = Math.pow(q[2], 2.00000000000000);
    double __temp_254 = __temp_255 + __temp_256;
    double __temp_253 = -2.00000000000000 * __temp_254;
    double __temp_252 = 1.00000000000000 + __temp_253;
    double __temp_251 = __temp_252 * p[0];
    double __temp_259 = q[0] * q[1];
    double __temp_260 = -1.00000000000000 * q[3] * q[2];
    double __temp_258 = __temp_259 + __temp_260;
    double __temp_257 = 2.00000000000000 * __temp_258 * p[1];
    double __temp_263 = q[0] * q[2];
    double __temp_264 = q[3] * q[1];
    double __temp_262 = __temp_263 + __temp_264;
    double __temp_261 = 2.00000000000000 * __temp_262 * p[2];
    double __temp_249 = __temp_250 + __temp_251 + __temp_257 + __temp_261;
    double __temp_248 = Math.pow(__temp_249, 2.00000000000000);
    double __temp_266 = 2.00000000000000 * q[1] * p[1];
    double __temp_267 = 2.00000000000000 * q[2] * p[2];
    double __temp_265 = __temp_266 + __temp_267;
    double __temp_270 = -1.00000000000000 * imgP[0];
    double __temp_275 = Math.pow(q[1], 2.00000000000000);
    double __temp_276 = Math.pow(q[2], 2.00000000000000);
    double __temp_274 = __temp_275 + __temp_276;
    double __temp_273 = -2.00000000000000 * __temp_274;
    double __temp_272 = 1.00000000000000 + __temp_273;
    double __temp_271 = __temp_272 * p[0];
    double __temp_279 = q[0] * q[1];
    double __temp_280 = -1.00000000000000 * q[3] * q[2];
    double __temp_278 = __temp_279 + __temp_280;
    double __temp_277 = 2.00000000000000 * __temp_278 * p[1];
    double __temp_283 = q[0] * q[2];
    double __temp_284 = q[3] * q[1];
    double __temp_282 = __temp_283 + __temp_284;
    double __temp_281 = 2.00000000000000 * __temp_282 * p[2];
    double __temp_269 = __temp_270 + __temp_271 + __temp_277 + __temp_281;
    double __temp_268 = Math.pow(__temp_269, -1.00000000000000);
    double __temp_286 = -2.00000000000000 * q[2] * p[1];
    double __temp_287 = 2.00000000000000 * q[1] * p[2];
    double __temp_285 = __temp_286 + __temp_287;
    double __temp_290 = -1.00000000000000 * imgP[0];
    double __temp_295 = Math.pow(q[1], 2.00000000000000);
    double __temp_296 = Math.pow(q[2], 2.00000000000000);
    double __temp_294 = __temp_295 + __temp_296;
    double __temp_293 = -2.00000000000000 * __temp_294;
    double __temp_292 = 1.00000000000000 + __temp_293;
    double __temp_291 = __temp_292 * p[0];
    double __temp_299 = q[0] * q[1];
    double __temp_300 = -1.00000000000000 * q[3] * q[2];
    double __temp_298 = __temp_299 + __temp_300;
    double __temp_297 = 2.00000000000000 * __temp_298 * p[1];
    double __temp_303 = q[0] * q[2];
    double __temp_304 = q[3] * q[1];
    double __temp_302 = __temp_303 + __temp_304;
    double __temp_301 = 2.00000000000000 * __temp_302 * p[2];
    double __temp_289 = __temp_290 + __temp_291 + __temp_297 + __temp_301;
    double __temp_288 = Math.pow(__temp_289, -1.00000000000000);
    double __temp_247 = 4.00000000000000 * __temp_248 * __temp_265 * __temp_268 * __temp_285 * __temp_288;
    double __temp_308 = -1.00000000000000 * imgP[1];
    double __temp_313 = Math.pow(q[0], 2.00000000000000);
    double __temp_314 = Math.pow(q[2], 2.00000000000000);
    double __temp_312 = __temp_313 + __temp_314;
    double __temp_311 = -2.00000000000000 * __temp_312;
    double __temp_310 = 1.00000000000000 + __temp_311;
    double __temp_309 = __temp_310 * p[1];
    double __temp_317 = q[0] * q[1];
    double __temp_318 = q[3] * q[2];
    double __temp_316 = __temp_317 + __temp_318;
    double __temp_315 = 2.00000000000000 * __temp_316 * p[0];
    double __temp_321 = q[1] * q[2];
    double __temp_322 = -1.00000000000000 * q[0] * q[3];
    double __temp_320 = __temp_321 + __temp_322;
    double __temp_319 = 2.00000000000000 * __temp_320 * p[2];
    double __temp_307 = __temp_308 + __temp_309 + __temp_315 + __temp_319;
    double __temp_306 = Math.pow(__temp_307, 2.00000000000000);
    double __temp_324 = -4.00000000000000 * q[0] * p[1];
    double __temp_325 = -2.00000000000000 * q[3] * p[2];
    double __temp_326 = 2.00000000000000 * q[1] * p[0];
    double __temp_323 = __temp_324 + __temp_325 + __temp_326;
    double __temp_329 = -1.00000000000000 * imgP[1];
    double __temp_334 = Math.pow(q[0], 2.00000000000000);
    double __temp_335 = Math.pow(q[2], 2.00000000000000);
    double __temp_333 = __temp_334 + __temp_335;
    double __temp_332 = -2.00000000000000 * __temp_333;
    double __temp_331 = 1.00000000000000 + __temp_332;
    double __temp_330 = __temp_331 * p[1];
    double __temp_338 = q[0] * q[1];
    double __temp_339 = q[3] * q[2];
    double __temp_337 = __temp_338 + __temp_339;
    double __temp_336 = 2.00000000000000 * __temp_337 * p[0];
    double __temp_342 = q[1] * q[2];
    double __temp_343 = -1.00000000000000 * q[0] * q[3];
    double __temp_341 = __temp_342 + __temp_343;
    double __temp_340 = 2.00000000000000 * __temp_341 * p[2];
    double __temp_328 = __temp_329 + __temp_330 + __temp_336 + __temp_340;
    double __temp_327 = Math.pow(__temp_328, -1.00000000000000);
    double __temp_345 = -2.00000000000000 * q[0] * p[2];
    double __temp_346 = 2.00000000000000 * q[2] * p[0];
    double __temp_344 = __temp_345 + __temp_346;
    double __temp_349 = -1.00000000000000 * imgP[1];
    double __temp_354 = Math.pow(q[0], 2.00000000000000);
    double __temp_355 = Math.pow(q[2], 2.00000000000000);
    double __temp_353 = __temp_354 + __temp_355;
    double __temp_352 = -2.00000000000000 * __temp_353;
    double __temp_351 = 1.00000000000000 + __temp_352;
    double __temp_350 = __temp_351 * p[1];
    double __temp_358 = q[0] * q[1];
    double __temp_359 = q[3] * q[2];
    double __temp_357 = __temp_358 + __temp_359;
    double __temp_356 = 2.00000000000000 * __temp_357 * p[0];
    double __temp_362 = q[1] * q[2];
    double __temp_363 = -1.00000000000000 * q[0] * q[3];
    double __temp_361 = __temp_362 + __temp_363;
    double __temp_360 = 2.00000000000000 * __temp_361 * p[2];
    double __temp_348 = __temp_349 + __temp_350 + __temp_356 + __temp_360;
    double __temp_347 = Math.pow(__temp_348, -1.00000000000000);
    double __temp_305 = 4.00000000000000 * __temp_306 * __temp_323 * __temp_327 * __temp_344 * __temp_347;
    double __temp_367 = -1.00000000000000 * imgP[2];
    double __temp_372 = Math.pow(q[0], 2.00000000000000);
    double __temp_373 = Math.pow(q[1], 2.00000000000000);
    double __temp_371 = __temp_372 + __temp_373;
    double __temp_370 = -2.00000000000000 * __temp_371;
    double __temp_369 = 1.00000000000000 + __temp_370;
    double __temp_368 = __temp_369 * p[2];
    double __temp_376 = q[0] * q[2];
    double __temp_377 = -1.00000000000000 * q[3] * q[1];
    double __temp_375 = __temp_376 + __temp_377;
    double __temp_374 = 2.00000000000000 * __temp_375 * p[0];
    double __temp_380 = q[0] * q[3];
    double __temp_381 = q[1] * q[2];
    double __temp_379 = __temp_380 + __temp_381;
    double __temp_378 = 2.00000000000000 * __temp_379 * p[1];
    double __temp_366 = __temp_367 + __temp_368 + __temp_374 + __temp_378;
    double __temp_365 = Math.pow(__temp_366, 2.00000000000000);
    double __temp_383 = -4.00000000000000 * q[0] * p[2];
    double __temp_384 = 2.00000000000000 * q[2] * p[0];
    double __temp_385 = 2.00000000000000 * q[3] * p[1];
    double __temp_382 = __temp_383 + __temp_384 + __temp_385;
    double __temp_388 = -1.00000000000000 * imgP[2];
    double __temp_393 = Math.pow(q[0], 2.00000000000000);
    double __temp_394 = Math.pow(q[1], 2.00000000000000);
    double __temp_392 = __temp_393 + __temp_394;
    double __temp_391 = -2.00000000000000 * __temp_392;
    double __temp_390 = 1.00000000000000 + __temp_391;
    double __temp_389 = __temp_390 * p[2];
    double __temp_397 = q[0] * q[2];
    double __temp_398 = -1.00000000000000 * q[3] * q[1];
    double __temp_396 = __temp_397 + __temp_398;
    double __temp_395 = 2.00000000000000 * __temp_396 * p[0];
    double __temp_401 = q[0] * q[3];
    double __temp_402 = q[1] * q[2];
    double __temp_400 = __temp_401 + __temp_402;
    double __temp_399 = 2.00000000000000 * __temp_400 * p[1];
    double __temp_387 = __temp_388 + __temp_389 + __temp_395 + __temp_399;
    double __temp_386 = Math.pow(__temp_387, -1.00000000000000);
    double __temp_404 = -2.00000000000000 * q[1] * p[0];
    double __temp_405 = 2.00000000000000 * q[0] * p[1];
    double __temp_403 = __temp_404 + __temp_405;
    double __temp_408 = -1.00000000000000 * imgP[2];
    double __temp_413 = Math.pow(q[0], 2.00000000000000);
    double __temp_414 = Math.pow(q[1], 2.00000000000000);
    double __temp_412 = __temp_413 + __temp_414;
    double __temp_411 = -2.00000000000000 * __temp_412;
    double __temp_410 = 1.00000000000000 + __temp_411;
    double __temp_409 = __temp_410 * p[2];
    double __temp_417 = q[0] * q[2];
    double __temp_418 = -1.00000000000000 * q[3] * q[1];
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = 2.00000000000000 * __temp_416 * p[0];
    double __temp_421 = q[0] * q[3];
    double __temp_422 = q[1] * q[2];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[1];
    double __temp_407 = __temp_408 + __temp_409 + __temp_415 + __temp_419;
    double __temp_406 = Math.pow(__temp_407, -1.00000000000000);
    double __temp_364 = 4.00000000000000 * __temp_365 * __temp_382 * __temp_386 * __temp_403 * __temp_406;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_129 + __temp_188 + __temp_247 + __temp_305 + __temp_364;
    return __temp_0;
  }

  public static double partialDerivative_3_1(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[2];
    double __temp_9 = Math.pow(q[0], 2.00000000000000);
    double __temp_10 = Math.pow(q[1], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[2];
    double __temp_13 = q[0] * q[2];
    double __temp_14 = -1.00000000000000 * q[1] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[0];
    double __temp_17 = q[1] * q[2];
    double __temp_18 = q[3] * q[0];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[1];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[2];
    double __temp_26 = Math.pow(q[0], 2.00000000000000);
    double __temp_27 = Math.pow(q[1], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[2];
    double __temp_30 = q[0] * q[2];
    double __temp_31 = -1.00000000000000 * q[1] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[0];
    double __temp_34 = q[1] * q[2];
    double __temp_35 = q[3] * q[0];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[1];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = -4.00000000000000 * __temp_2 * p[0] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[0];
    double __temp_44 = Math.pow(q[1], 2.00000000000000);
    double __temp_45 = Math.pow(q[2], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[0];
    double __temp_48 = q[0] * q[2];
    double __temp_49 = q[1] * q[3];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[2];
    double __temp_52 = q[1] * q[0];
    double __temp_53 = -1.00000000000000 * q[3] * q[2];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[1];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[0];
    double __temp_61 = Math.pow(q[1], 2.00000000000000);
    double __temp_62 = Math.pow(q[2], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[0];
    double __temp_65 = q[0] * q[2];
    double __temp_66 = q[1] * q[3];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[2];
    double __temp_69 = q[1] * q[0];
    double __temp_70 = -1.00000000000000 * q[3] * q[2];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[1];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[2] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[2];
    double __temp_84 = q[1] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[2];
    double __temp_87 = q[1] * q[0];
    double __temp_88 = -1.00000000000000 * q[3] * q[2];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[1];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -2.00000000000000 * q[2] * p[1];
    double __temp_91 = 2.00000000000000 * q[1] * p[2];
    double __temp_89 = __temp_90 + __temp_91;
    double __temp_94 = -1.00000000000000 * imgP[0];
    double __temp_99 = Math.pow(q[1], 2.00000000000000);
    double __temp_100 = Math.pow(q[2], 2.00000000000000);
    double __temp_98 = __temp_99 + __temp_100;
    double __temp_97 = -2.00000000000000 * __temp_98;
    double __temp_96 = 1.00000000000000 + __temp_97;
    double __temp_95 = __temp_96 * p[0];
    double __temp_103 = q[0] * q[2];
    double __temp_104 = q[1] * q[3];
    double __temp_102 = __temp_103 + __temp_104;
    double __temp_101 = 2.00000000000000 * __temp_102 * p[2];
    double __temp_107 = q[1] * q[0];
    double __temp_108 = -1.00000000000000 * q[3] * q[2];
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = 2.00000000000000 * __temp_106 * p[1];
    double __temp_93 = __temp_94 + __temp_95 + __temp_101 + __temp_105;
    double __temp_92 = Math.pow(__temp_93, -1.00000000000000);
    double __temp_110 = -4.00000000000000 * q[1] * p[0];
    double __temp_111 = 2.00000000000000 * q[0] * p[1];
    double __temp_112 = 2.00000000000000 * q[3] * p[2];
    double __temp_109 = __temp_110 + __temp_111 + __temp_112;
    double __temp_115 = -1.00000000000000 * imgP[0];
    double __temp_120 = Math.pow(q[1], 2.00000000000000);
    double __temp_121 = Math.pow(q[2], 2.00000000000000);
    double __temp_119 = __temp_120 + __temp_121;
    double __temp_118 = -2.00000000000000 * __temp_119;
    double __temp_117 = 1.00000000000000 + __temp_118;
    double __temp_116 = __temp_117 * p[0];
    double __temp_124 = q[0] * q[2];
    double __temp_125 = q[1] * q[3];
    double __temp_123 = __temp_124 + __temp_125;
    double __temp_122 = 2.00000000000000 * __temp_123 * p[2];
    double __temp_128 = q[1] * q[0];
    double __temp_129 = -1.00000000000000 * q[3] * q[2];
    double __temp_127 = __temp_128 + __temp_129;
    double __temp_126 = 2.00000000000000 * __temp_127 * p[1];
    double __temp_114 = __temp_115 + __temp_116 + __temp_122 + __temp_126;
    double __temp_113 = Math.pow(__temp_114, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_92 * __temp_109 * __temp_113;
    double __temp_133 = -1.00000000000000 * imgP[1];
    double __temp_138 = Math.pow(q[0], 2.00000000000000);
    double __temp_139 = Math.pow(q[2], 2.00000000000000);
    double __temp_137 = __temp_138 + __temp_139;
    double __temp_136 = -2.00000000000000 * __temp_137;
    double __temp_135 = 1.00000000000000 + __temp_136;
    double __temp_134 = __temp_135 * p[1];
    double __temp_142 = q[1] * q[0];
    double __temp_143 = q[3] * q[2];
    double __temp_141 = __temp_142 + __temp_143;
    double __temp_140 = 2.00000000000000 * __temp_141 * p[0];
    double __temp_146 = q[1] * q[2];
    double __temp_147 = -1.00000000000000 * q[3] * q[0];
    double __temp_145 = __temp_146 + __temp_147;
    double __temp_144 = 2.00000000000000 * __temp_145 * p[2];
    double __temp_132 = __temp_133 + __temp_134 + __temp_140 + __temp_144;
    double __temp_131 = Math.pow(__temp_132, 2.00000000000000);
    double __temp_149 = -2.00000000000000 * q[0] * p[2];
    double __temp_150 = 2.00000000000000 * q[2] * p[0];
    double __temp_148 = __temp_149 + __temp_150;
    double __temp_153 = -1.00000000000000 * imgP[1];
    double __temp_158 = Math.pow(q[0], 2.00000000000000);
    double __temp_159 = Math.pow(q[2], 2.00000000000000);
    double __temp_157 = __temp_158 + __temp_159;
    double __temp_156 = -2.00000000000000 * __temp_157;
    double __temp_155 = 1.00000000000000 + __temp_156;
    double __temp_154 = __temp_155 * p[1];
    double __temp_162 = q[1] * q[0];
    double __temp_163 = q[3] * q[2];
    double __temp_161 = __temp_162 + __temp_163;
    double __temp_160 = 2.00000000000000 * __temp_161 * p[0];
    double __temp_166 = q[1] * q[2];
    double __temp_167 = -1.00000000000000 * q[3] * q[0];
    double __temp_165 = __temp_166 + __temp_167;
    double __temp_164 = 2.00000000000000 * __temp_165 * p[2];
    double __temp_152 = __temp_153 + __temp_154 + __temp_160 + __temp_164;
    double __temp_151 = Math.pow(__temp_152, -1.00000000000000);
    double __temp_169 = 2.00000000000000 * q[0] * p[0];
    double __temp_170 = 2.00000000000000 * q[2] * p[2];
    double __temp_168 = __temp_169 + __temp_170;
    double __temp_173 = -1.00000000000000 * imgP[1];
    double __temp_178 = Math.pow(q[0], 2.00000000000000);
    double __temp_179 = Math.pow(q[2], 2.00000000000000);
    double __temp_177 = __temp_178 + __temp_179;
    double __temp_176 = -2.00000000000000 * __temp_177;
    double __temp_175 = 1.00000000000000 + __temp_176;
    double __temp_174 = __temp_175 * p[1];
    double __temp_182 = q[1] * q[0];
    double __temp_183 = q[3] * q[2];
    double __temp_181 = __temp_182 + __temp_183;
    double __temp_180 = 2.00000000000000 * __temp_181 * p[0];
    double __temp_186 = q[1] * q[2];
    double __temp_187 = -1.00000000000000 * q[3] * q[0];
    double __temp_185 = __temp_186 + __temp_187;
    double __temp_184 = 2.00000000000000 * __temp_185 * p[2];
    double __temp_172 = __temp_173 + __temp_174 + __temp_180 + __temp_184;
    double __temp_171 = Math.pow(__temp_172, -1.00000000000000);
    double __temp_130 = -2.00000000000000 * __temp_131 * __temp_148 * __temp_151 * __temp_168 * __temp_171;
    double __temp_191 = -1.00000000000000 * imgP[2];
    double __temp_196 = Math.pow(q[0], 2.00000000000000);
    double __temp_197 = Math.pow(q[1], 2.00000000000000);
    double __temp_195 = __temp_196 + __temp_197;
    double __temp_194 = -2.00000000000000 * __temp_195;
    double __temp_193 = 1.00000000000000 + __temp_194;
    double __temp_192 = __temp_193 * p[2];
    double __temp_200 = q[0] * q[2];
    double __temp_201 = -1.00000000000000 * q[1] * q[3];
    double __temp_199 = __temp_200 + __temp_201;
    double __temp_198 = 2.00000000000000 * __temp_199 * p[0];
    double __temp_204 = q[1] * q[2];
    double __temp_205 = q[3] * q[0];
    double __temp_203 = __temp_204 + __temp_205;
    double __temp_202 = 2.00000000000000 * __temp_203 * p[1];
    double __temp_190 = __temp_191 + __temp_192 + __temp_198 + __temp_202;
    double __temp_189 = Math.pow(__temp_190, 2.00000000000000);
    double __temp_207 = -2.00000000000000 * q[1] * p[0];
    double __temp_208 = 2.00000000000000 * q[0] * p[1];
    double __temp_206 = __temp_207 + __temp_208;
    double __temp_211 = -1.00000000000000 * imgP[2];
    double __temp_216 = Math.pow(q[0], 2.00000000000000);
    double __temp_217 = Math.pow(q[1], 2.00000000000000);
    double __temp_215 = __temp_216 + __temp_217;
    double __temp_214 = -2.00000000000000 * __temp_215;
    double __temp_213 = 1.00000000000000 + __temp_214;
    double __temp_212 = __temp_213 * p[2];
    double __temp_220 = q[0] * q[2];
    double __temp_221 = -1.00000000000000 * q[1] * q[3];
    double __temp_219 = __temp_220 + __temp_221;
    double __temp_218 = 2.00000000000000 * __temp_219 * p[0];
    double __temp_224 = q[1] * q[2];
    double __temp_225 = q[3] * q[0];
    double __temp_223 = __temp_224 + __temp_225;
    double __temp_222 = 2.00000000000000 * __temp_223 * p[1];
    double __temp_210 = __temp_211 + __temp_212 + __temp_218 + __temp_222;
    double __temp_209 = Math.pow(__temp_210, -1.00000000000000);
    double __temp_227 = -4.00000000000000 * q[1] * p[2];
    double __temp_228 = -2.00000000000000 * q[3] * p[0];
    double __temp_229 = 2.00000000000000 * q[2] * p[1];
    double __temp_226 = __temp_227 + __temp_228 + __temp_229;
    double __temp_232 = -1.00000000000000 * imgP[2];
    double __temp_237 = Math.pow(q[0], 2.00000000000000);
    double __temp_238 = Math.pow(q[1], 2.00000000000000);
    double __temp_236 = __temp_237 + __temp_238;
    double __temp_235 = -2.00000000000000 * __temp_236;
    double __temp_234 = 1.00000000000000 + __temp_235;
    double __temp_233 = __temp_234 * p[2];
    double __temp_241 = q[0] * q[2];
    double __temp_242 = -1.00000000000000 * q[1] * q[3];
    double __temp_240 = __temp_241 + __temp_242;
    double __temp_239 = 2.00000000000000 * __temp_240 * p[0];
    double __temp_245 = q[1] * q[2];
    double __temp_246 = q[3] * q[0];
    double __temp_244 = __temp_245 + __temp_246;
    double __temp_243 = 2.00000000000000 * __temp_244 * p[1];
    double __temp_231 = __temp_232 + __temp_233 + __temp_239 + __temp_243;
    double __temp_230 = Math.pow(__temp_231, -1.00000000000000);
    double __temp_188 = -2.00000000000000 * __temp_189 * __temp_206 * __temp_209 * __temp_226 * __temp_230;
    double __temp_250 = -1.00000000000000 * imgP[0];
    double __temp_255 = Math.pow(q[1], 2.00000000000000);
    double __temp_256 = Math.pow(q[2], 2.00000000000000);
    double __temp_254 = __temp_255 + __temp_256;
    double __temp_253 = -2.00000000000000 * __temp_254;
    double __temp_252 = 1.00000000000000 + __temp_253;
    double __temp_251 = __temp_252 * p[0];
    double __temp_259 = q[0] * q[2];
    double __temp_260 = q[1] * q[3];
    double __temp_258 = __temp_259 + __temp_260;
    double __temp_257 = 2.00000000000000 * __temp_258 * p[2];
    double __temp_263 = q[1] * q[0];
    double __temp_264 = -1.00000000000000 * q[3] * q[2];
    double __temp_262 = __temp_263 + __temp_264;
    double __temp_261 = 2.00000000000000 * __temp_262 * p[1];
    double __temp_249 = __temp_250 + __temp_251 + __temp_257 + __temp_261;
    double __temp_248 = Math.pow(__temp_249, 2.00000000000000);
    double __temp_266 = -4.00000000000000 * q[1] * p[0];
    double __temp_267 = 2.00000000000000 * q[0] * p[1];
    double __temp_268 = 2.00000000000000 * q[3] * p[2];
    double __temp_265 = __temp_266 + __temp_267 + __temp_268;
    double __temp_271 = -1.00000000000000 * imgP[0];
    double __temp_276 = Math.pow(q[1], 2.00000000000000);
    double __temp_277 = Math.pow(q[2], 2.00000000000000);
    double __temp_275 = __temp_276 + __temp_277;
    double __temp_274 = -2.00000000000000 * __temp_275;
    double __temp_273 = 1.00000000000000 + __temp_274;
    double __temp_272 = __temp_273 * p[0];
    double __temp_280 = q[0] * q[2];
    double __temp_281 = q[1] * q[3];
    double __temp_279 = __temp_280 + __temp_281;
    double __temp_278 = 2.00000000000000 * __temp_279 * p[2];
    double __temp_284 = q[1] * q[0];
    double __temp_285 = -1.00000000000000 * q[3] * q[2];
    double __temp_283 = __temp_284 + __temp_285;
    double __temp_282 = 2.00000000000000 * __temp_283 * p[1];
    double __temp_270 = __temp_271 + __temp_272 + __temp_278 + __temp_282;
    double __temp_269 = Math.pow(__temp_270, -1.00000000000000);
    double __temp_287 = -2.00000000000000 * q[2] * p[1];
    double __temp_288 = 2.00000000000000 * q[1] * p[2];
    double __temp_286 = __temp_287 + __temp_288;
    double __temp_291 = -1.00000000000000 * imgP[0];
    double __temp_296 = Math.pow(q[1], 2.00000000000000);
    double __temp_297 = Math.pow(q[2], 2.00000000000000);
    double __temp_295 = __temp_296 + __temp_297;
    double __temp_294 = -2.00000000000000 * __temp_295;
    double __temp_293 = 1.00000000000000 + __temp_294;
    double __temp_292 = __temp_293 * p[0];
    double __temp_300 = q[0] * q[2];
    double __temp_301 = q[1] * q[3];
    double __temp_299 = __temp_300 + __temp_301;
    double __temp_298 = 2.00000000000000 * __temp_299 * p[2];
    double __temp_304 = q[1] * q[0];
    double __temp_305 = -1.00000000000000 * q[3] * q[2];
    double __temp_303 = __temp_304 + __temp_305;
    double __temp_302 = 2.00000000000000 * __temp_303 * p[1];
    double __temp_290 = __temp_291 + __temp_292 + __temp_298 + __temp_302;
    double __temp_289 = Math.pow(__temp_290, -1.00000000000000);
    double __temp_247 = 4.00000000000000 * __temp_248 * __temp_265 * __temp_269 * __temp_286 * __temp_289;
    double __temp_309 = -1.00000000000000 * imgP[1];
    double __temp_314 = Math.pow(q[0], 2.00000000000000);
    double __temp_315 = Math.pow(q[2], 2.00000000000000);
    double __temp_313 = __temp_314 + __temp_315;
    double __temp_312 = -2.00000000000000 * __temp_313;
    double __temp_311 = 1.00000000000000 + __temp_312;
    double __temp_310 = __temp_311 * p[1];
    double __temp_318 = q[1] * q[0];
    double __temp_319 = q[3] * q[2];
    double __temp_317 = __temp_318 + __temp_319;
    double __temp_316 = 2.00000000000000 * __temp_317 * p[0];
    double __temp_322 = q[1] * q[2];
    double __temp_323 = -1.00000000000000 * q[3] * q[0];
    double __temp_321 = __temp_322 + __temp_323;
    double __temp_320 = 2.00000000000000 * __temp_321 * p[2];
    double __temp_308 = __temp_309 + __temp_310 + __temp_316 + __temp_320;
    double __temp_307 = Math.pow(__temp_308, 2.00000000000000);
    double __temp_325 = 2.00000000000000 * q[0] * p[0];
    double __temp_326 = 2.00000000000000 * q[2] * p[2];
    double __temp_324 = __temp_325 + __temp_326;
    double __temp_329 = -1.00000000000000 * imgP[1];
    double __temp_334 = Math.pow(q[0], 2.00000000000000);
    double __temp_335 = Math.pow(q[2], 2.00000000000000);
    double __temp_333 = __temp_334 + __temp_335;
    double __temp_332 = -2.00000000000000 * __temp_333;
    double __temp_331 = 1.00000000000000 + __temp_332;
    double __temp_330 = __temp_331 * p[1];
    double __temp_338 = q[1] * q[0];
    double __temp_339 = q[3] * q[2];
    double __temp_337 = __temp_338 + __temp_339;
    double __temp_336 = 2.00000000000000 * __temp_337 * p[0];
    double __temp_342 = q[1] * q[2];
    double __temp_343 = -1.00000000000000 * q[3] * q[0];
    double __temp_341 = __temp_342 + __temp_343;
    double __temp_340 = 2.00000000000000 * __temp_341 * p[2];
    double __temp_328 = __temp_329 + __temp_330 + __temp_336 + __temp_340;
    double __temp_327 = Math.pow(__temp_328, -1.00000000000000);
    double __temp_345 = -2.00000000000000 * q[0] * p[2];
    double __temp_346 = 2.00000000000000 * q[2] * p[0];
    double __temp_344 = __temp_345 + __temp_346;
    double __temp_349 = -1.00000000000000 * imgP[1];
    double __temp_354 = Math.pow(q[0], 2.00000000000000);
    double __temp_355 = Math.pow(q[2], 2.00000000000000);
    double __temp_353 = __temp_354 + __temp_355;
    double __temp_352 = -2.00000000000000 * __temp_353;
    double __temp_351 = 1.00000000000000 + __temp_352;
    double __temp_350 = __temp_351 * p[1];
    double __temp_358 = q[1] * q[0];
    double __temp_359 = q[3] * q[2];
    double __temp_357 = __temp_358 + __temp_359;
    double __temp_356 = 2.00000000000000 * __temp_357 * p[0];
    double __temp_362 = q[1] * q[2];
    double __temp_363 = -1.00000000000000 * q[3] * q[0];
    double __temp_361 = __temp_362 + __temp_363;
    double __temp_360 = 2.00000000000000 * __temp_361 * p[2];
    double __temp_348 = __temp_349 + __temp_350 + __temp_356 + __temp_360;
    double __temp_347 = Math.pow(__temp_348, -1.00000000000000);
    double __temp_306 = 4.00000000000000 * __temp_307 * __temp_324 * __temp_327 * __temp_344 * __temp_347;
    double __temp_367 = -1.00000000000000 * imgP[2];
    double __temp_372 = Math.pow(q[0], 2.00000000000000);
    double __temp_373 = Math.pow(q[1], 2.00000000000000);
    double __temp_371 = __temp_372 + __temp_373;
    double __temp_370 = -2.00000000000000 * __temp_371;
    double __temp_369 = 1.00000000000000 + __temp_370;
    double __temp_368 = __temp_369 * p[2];
    double __temp_376 = q[0] * q[2];
    double __temp_377 = -1.00000000000000 * q[1] * q[3];
    double __temp_375 = __temp_376 + __temp_377;
    double __temp_374 = 2.00000000000000 * __temp_375 * p[0];
    double __temp_380 = q[1] * q[2];
    double __temp_381 = q[3] * q[0];
    double __temp_379 = __temp_380 + __temp_381;
    double __temp_378 = 2.00000000000000 * __temp_379 * p[1];
    double __temp_366 = __temp_367 + __temp_368 + __temp_374 + __temp_378;
    double __temp_365 = Math.pow(__temp_366, 2.00000000000000);
    double __temp_383 = -4.00000000000000 * q[1] * p[2];
    double __temp_384 = -2.00000000000000 * q[3] * p[0];
    double __temp_385 = 2.00000000000000 * q[2] * p[1];
    double __temp_382 = __temp_383 + __temp_384 + __temp_385;
    double __temp_388 = -1.00000000000000 * imgP[2];
    double __temp_393 = Math.pow(q[0], 2.00000000000000);
    double __temp_394 = Math.pow(q[1], 2.00000000000000);
    double __temp_392 = __temp_393 + __temp_394;
    double __temp_391 = -2.00000000000000 * __temp_392;
    double __temp_390 = 1.00000000000000 + __temp_391;
    double __temp_389 = __temp_390 * p[2];
    double __temp_397 = q[0] * q[2];
    double __temp_398 = -1.00000000000000 * q[1] * q[3];
    double __temp_396 = __temp_397 + __temp_398;
    double __temp_395 = 2.00000000000000 * __temp_396 * p[0];
    double __temp_401 = q[1] * q[2];
    double __temp_402 = q[3] * q[0];
    double __temp_400 = __temp_401 + __temp_402;
    double __temp_399 = 2.00000000000000 * __temp_400 * p[1];
    double __temp_387 = __temp_388 + __temp_389 + __temp_395 + __temp_399;
    double __temp_386 = Math.pow(__temp_387, -1.00000000000000);
    double __temp_404 = -2.00000000000000 * q[1] * p[0];
    double __temp_405 = 2.00000000000000 * q[0] * p[1];
    double __temp_403 = __temp_404 + __temp_405;
    double __temp_408 = -1.00000000000000 * imgP[2];
    double __temp_413 = Math.pow(q[0], 2.00000000000000);
    double __temp_414 = Math.pow(q[1], 2.00000000000000);
    double __temp_412 = __temp_413 + __temp_414;
    double __temp_411 = -2.00000000000000 * __temp_412;
    double __temp_410 = 1.00000000000000 + __temp_411;
    double __temp_409 = __temp_410 * p[2];
    double __temp_417 = q[0] * q[2];
    double __temp_418 = -1.00000000000000 * q[1] * q[3];
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = 2.00000000000000 * __temp_416 * p[0];
    double __temp_421 = q[1] * q[2];
    double __temp_422 = q[3] * q[0];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[1];
    double __temp_407 = __temp_408 + __temp_409 + __temp_415 + __temp_419;
    double __temp_406 = Math.pow(__temp_407, -1.00000000000000);
    double __temp_364 = 4.00000000000000 * __temp_365 * __temp_382 * __temp_386 * __temp_403 * __temp_406;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_130 + __temp_188 + __temp_247 + __temp_306 + __temp_364;
    return __temp_0;
  }

  public static double partialDerivative_3_2(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = -1.00000000000000 * q[2] * q[3];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[1];
    double __temp_17 = q[2] * q[0];
    double __temp_18 = q[3] * q[1];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_21 = -1.00000000000000 * imgP[0];
    double __temp_26 = Math.pow(q[1], 2.00000000000000);
    double __temp_27 = Math.pow(q[2], 2.00000000000000);
    double __temp_25 = __temp_26 + __temp_27;
    double __temp_24 = -2.00000000000000 * __temp_25;
    double __temp_23 = 1.00000000000000 + __temp_24;
    double __temp_22 = __temp_23 * p[0];
    double __temp_30 = q[0] * q[1];
    double __temp_31 = -1.00000000000000 * q[2] * q[3];
    double __temp_29 = __temp_30 + __temp_31;
    double __temp_28 = 2.00000000000000 * __temp_29 * p[1];
    double __temp_34 = q[2] * q[0];
    double __temp_35 = q[3] * q[1];
    double __temp_33 = __temp_34 + __temp_35;
    double __temp_32 = 2.00000000000000 * __temp_33 * p[2];
    double __temp_20 = __temp_21 + __temp_22 + __temp_28 + __temp_32;
    double __temp_19 = Math.pow(__temp_20, -1.00000000000000);
    double __temp_1 = -4.00000000000000 * __temp_2 * p[1] * __temp_19;
    double __temp_39 = -1.00000000000000 * imgP[1];
    double __temp_44 = Math.pow(q[0], 2.00000000000000);
    double __temp_45 = Math.pow(q[2], 2.00000000000000);
    double __temp_43 = __temp_44 + __temp_45;
    double __temp_42 = -2.00000000000000 * __temp_43;
    double __temp_41 = 1.00000000000000 + __temp_42;
    double __temp_40 = __temp_41 * p[1];
    double __temp_48 = q[0] * q[1];
    double __temp_49 = q[2] * q[3];
    double __temp_47 = __temp_48 + __temp_49;
    double __temp_46 = 2.00000000000000 * __temp_47 * p[0];
    double __temp_52 = q[2] * q[1];
    double __temp_53 = -1.00000000000000 * q[3] * q[0];
    double __temp_51 = __temp_52 + __temp_53;
    double __temp_50 = 2.00000000000000 * __temp_51 * p[2];
    double __temp_38 = __temp_39 + __temp_40 + __temp_46 + __temp_50;
    double __temp_37 = Math.pow(__temp_38, 2.00000000000000);
    double __temp_56 = -1.00000000000000 * imgP[1];
    double __temp_61 = Math.pow(q[0], 2.00000000000000);
    double __temp_62 = Math.pow(q[2], 2.00000000000000);
    double __temp_60 = __temp_61 + __temp_62;
    double __temp_59 = -2.00000000000000 * __temp_60;
    double __temp_58 = 1.00000000000000 + __temp_59;
    double __temp_57 = __temp_58 * p[1];
    double __temp_65 = q[0] * q[1];
    double __temp_66 = q[2] * q[3];
    double __temp_64 = __temp_65 + __temp_66;
    double __temp_63 = 2.00000000000000 * __temp_64 * p[0];
    double __temp_69 = q[2] * q[1];
    double __temp_70 = -1.00000000000000 * q[3] * q[0];
    double __temp_68 = __temp_69 + __temp_70;
    double __temp_67 = 2.00000000000000 * __temp_68 * p[2];
    double __temp_55 = __temp_56 + __temp_57 + __temp_63 + __temp_67;
    double __temp_54 = Math.pow(__temp_55, -1.00000000000000);
    double __temp_36 = 4.00000000000000 * __temp_37 * p[0] * __temp_54;
    double __temp_74 = -1.00000000000000 * imgP[0];
    double __temp_79 = Math.pow(q[1], 2.00000000000000);
    double __temp_80 = Math.pow(q[2], 2.00000000000000);
    double __temp_78 = __temp_79 + __temp_80;
    double __temp_77 = -2.00000000000000 * __temp_78;
    double __temp_76 = 1.00000000000000 + __temp_77;
    double __temp_75 = __temp_76 * p[0];
    double __temp_83 = q[0] * q[1];
    double __temp_84 = -1.00000000000000 * q[2] * q[3];
    double __temp_82 = __temp_83 + __temp_84;
    double __temp_81 = 2.00000000000000 * __temp_82 * p[1];
    double __temp_87 = q[2] * q[0];
    double __temp_88 = q[3] * q[1];
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = 2.00000000000000 * __temp_86 * p[2];
    double __temp_73 = __temp_74 + __temp_75 + __temp_81 + __temp_85;
    double __temp_72 = Math.pow(__temp_73, 2.00000000000000);
    double __temp_90 = -2.00000000000000 * q[2] * p[1];
    double __temp_91 = 2.00000000000000 * q[1] * p[2];
    double __temp_89 = __temp_90 + __temp_91;
    double __temp_94 = -1.00000000000000 * imgP[0];
    double __temp_99 = Math.pow(q[1], 2.00000000000000);
    double __temp_100 = Math.pow(q[2], 2.00000000000000);
    double __temp_98 = __temp_99 + __temp_100;
    double __temp_97 = -2.00000000000000 * __temp_98;
    double __temp_96 = 1.00000000000000 + __temp_97;
    double __temp_95 = __temp_96 * p[0];
    double __temp_103 = q[0] * q[1];
    double __temp_104 = -1.00000000000000 * q[2] * q[3];
    double __temp_102 = __temp_103 + __temp_104;
    double __temp_101 = 2.00000000000000 * __temp_102 * p[1];
    double __temp_107 = q[2] * q[0];
    double __temp_108 = q[3] * q[1];
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = 2.00000000000000 * __temp_106 * p[2];
    double __temp_93 = __temp_94 + __temp_95 + __temp_101 + __temp_105;
    double __temp_92 = Math.pow(__temp_93, -1.00000000000000);
    double __temp_110 = -4.00000000000000 * q[2] * p[0];
    double __temp_111 = -2.00000000000000 * q[3] * p[1];
    double __temp_112 = 2.00000000000000 * q[0] * p[2];
    double __temp_109 = __temp_110 + __temp_111 + __temp_112;
    double __temp_115 = -1.00000000000000 * imgP[0];
    double __temp_120 = Math.pow(q[1], 2.00000000000000);
    double __temp_121 = Math.pow(q[2], 2.00000000000000);
    double __temp_119 = __temp_120 + __temp_121;
    double __temp_118 = -2.00000000000000 * __temp_119;
    double __temp_117 = 1.00000000000000 + __temp_118;
    double __temp_116 = __temp_117 * p[0];
    double __temp_124 = q[0] * q[1];
    double __temp_125 = -1.00000000000000 * q[2] * q[3];
    double __temp_123 = __temp_124 + __temp_125;
    double __temp_122 = 2.00000000000000 * __temp_123 * p[1];
    double __temp_128 = q[2] * q[0];
    double __temp_129 = q[3] * q[1];
    double __temp_127 = __temp_128 + __temp_129;
    double __temp_126 = 2.00000000000000 * __temp_127 * p[2];
    double __temp_114 = __temp_115 + __temp_116 + __temp_122 + __temp_126;
    double __temp_113 = Math.pow(__temp_114, -1.00000000000000);
    double __temp_71 = -2.00000000000000 * __temp_72 * __temp_89 * __temp_92 * __temp_109 * __temp_113;
    double __temp_133 = -1.00000000000000 * imgP[1];
    double __temp_138 = Math.pow(q[0], 2.00000000000000);
    double __temp_139 = Math.pow(q[2], 2.00000000000000);
    double __temp_137 = __temp_138 + __temp_139;
    double __temp_136 = -2.00000000000000 * __temp_137;
    double __temp_135 = 1.00000000000000 + __temp_136;
    double __temp_134 = __temp_135 * p[1];
    double __temp_142 = q[0] * q[1];
    double __temp_143 = q[2] * q[3];
    double __temp_141 = __temp_142 + __temp_143;
    double __temp_140 = 2.00000000000000 * __temp_141 * p[0];
    double __temp_146 = q[2] * q[1];
    double __temp_147 = -1.00000000000000 * q[3] * q[0];
    double __temp_145 = __temp_146 + __temp_147;
    double __temp_144 = 2.00000000000000 * __temp_145 * p[2];
    double __temp_132 = __temp_133 + __temp_134 + __temp_140 + __temp_144;
    double __temp_131 = Math.pow(__temp_132, 2.00000000000000);
    double __temp_149 = -2.00000000000000 * q[0] * p[2];
    double __temp_150 = 2.00000000000000 * q[2] * p[0];
    double __temp_148 = __temp_149 + __temp_150;
    double __temp_153 = -1.00000000000000 * imgP[1];
    double __temp_158 = Math.pow(q[0], 2.00000000000000);
    double __temp_159 = Math.pow(q[2], 2.00000000000000);
    double __temp_157 = __temp_158 + __temp_159;
    double __temp_156 = -2.00000000000000 * __temp_157;
    double __temp_155 = 1.00000000000000 + __temp_156;
    double __temp_154 = __temp_155 * p[1];
    double __temp_162 = q[0] * q[1];
    double __temp_163 = q[2] * q[3];
    double __temp_161 = __temp_162 + __temp_163;
    double __temp_160 = 2.00000000000000 * __temp_161 * p[0];
    double __temp_166 = q[2] * q[1];
    double __temp_167 = -1.00000000000000 * q[3] * q[0];
    double __temp_165 = __temp_166 + __temp_167;
    double __temp_164 = 2.00000000000000 * __temp_165 * p[2];
    double __temp_152 = __temp_153 + __temp_154 + __temp_160 + __temp_164;
    double __temp_151 = Math.pow(__temp_152, -1.00000000000000);
    double __temp_169 = -4.00000000000000 * q[2] * p[1];
    double __temp_170 = 2.00000000000000 * q[1] * p[2];
    double __temp_171 = 2.00000000000000 * q[3] * p[0];
    double __temp_168 = __temp_169 + __temp_170 + __temp_171;
    double __temp_174 = -1.00000000000000 * imgP[1];
    double __temp_179 = Math.pow(q[0], 2.00000000000000);
    double __temp_180 = Math.pow(q[2], 2.00000000000000);
    double __temp_178 = __temp_179 + __temp_180;
    double __temp_177 = -2.00000000000000 * __temp_178;
    double __temp_176 = 1.00000000000000 + __temp_177;
    double __temp_175 = __temp_176 * p[1];
    double __temp_183 = q[0] * q[1];
    double __temp_184 = q[2] * q[3];
    double __temp_182 = __temp_183 + __temp_184;
    double __temp_181 = 2.00000000000000 * __temp_182 * p[0];
    double __temp_187 = q[2] * q[1];
    double __temp_188 = -1.00000000000000 * q[3] * q[0];
    double __temp_186 = __temp_187 + __temp_188;
    double __temp_185 = 2.00000000000000 * __temp_186 * p[2];
    double __temp_173 = __temp_174 + __temp_175 + __temp_181 + __temp_185;
    double __temp_172 = Math.pow(__temp_173, -1.00000000000000);
    double __temp_130 = -2.00000000000000 * __temp_131 * __temp_148 * __temp_151 * __temp_168 * __temp_172;
    double __temp_192 = -1.00000000000000 * imgP[2];
    double __temp_197 = Math.pow(q[0], 2.00000000000000);
    double __temp_198 = Math.pow(q[1], 2.00000000000000);
    double __temp_196 = __temp_197 + __temp_198;
    double __temp_195 = -2.00000000000000 * __temp_196;
    double __temp_194 = 1.00000000000000 + __temp_195;
    double __temp_193 = __temp_194 * p[2];
    double __temp_201 = q[2] * q[0];
    double __temp_202 = -1.00000000000000 * q[3] * q[1];
    double __temp_200 = __temp_201 + __temp_202;
    double __temp_199 = 2.00000000000000 * __temp_200 * p[0];
    double __temp_205 = q[2] * q[1];
    double __temp_206 = q[3] * q[0];
    double __temp_204 = __temp_205 + __temp_206;
    double __temp_203 = 2.00000000000000 * __temp_204 * p[1];
    double __temp_191 = __temp_192 + __temp_193 + __temp_199 + __temp_203;
    double __temp_190 = Math.pow(__temp_191, 2.00000000000000);
    double __temp_208 = -2.00000000000000 * q[1] * p[0];
    double __temp_209 = 2.00000000000000 * q[0] * p[1];
    double __temp_207 = __temp_208 + __temp_209;
    double __temp_212 = -1.00000000000000 * imgP[2];
    double __temp_217 = Math.pow(q[0], 2.00000000000000);
    double __temp_218 = Math.pow(q[1], 2.00000000000000);
    double __temp_216 = __temp_217 + __temp_218;
    double __temp_215 = -2.00000000000000 * __temp_216;
    double __temp_214 = 1.00000000000000 + __temp_215;
    double __temp_213 = __temp_214 * p[2];
    double __temp_221 = q[2] * q[0];
    double __temp_222 = -1.00000000000000 * q[3] * q[1];
    double __temp_220 = __temp_221 + __temp_222;
    double __temp_219 = 2.00000000000000 * __temp_220 * p[0];
    double __temp_225 = q[2] * q[1];
    double __temp_226 = q[3] * q[0];
    double __temp_224 = __temp_225 + __temp_226;
    double __temp_223 = 2.00000000000000 * __temp_224 * p[1];
    double __temp_211 = __temp_212 + __temp_213 + __temp_219 + __temp_223;
    double __temp_210 = Math.pow(__temp_211, -1.00000000000000);
    double __temp_228 = 2.00000000000000 * q[0] * p[0];
    double __temp_229 = 2.00000000000000 * q[1] * p[1];
    double __temp_227 = __temp_228 + __temp_229;
    double __temp_232 = -1.00000000000000 * imgP[2];
    double __temp_237 = Math.pow(q[0], 2.00000000000000);
    double __temp_238 = Math.pow(q[1], 2.00000000000000);
    double __temp_236 = __temp_237 + __temp_238;
    double __temp_235 = -2.00000000000000 * __temp_236;
    double __temp_234 = 1.00000000000000 + __temp_235;
    double __temp_233 = __temp_234 * p[2];
    double __temp_241 = q[2] * q[0];
    double __temp_242 = -1.00000000000000 * q[3] * q[1];
    double __temp_240 = __temp_241 + __temp_242;
    double __temp_239 = 2.00000000000000 * __temp_240 * p[0];
    double __temp_245 = q[2] * q[1];
    double __temp_246 = q[3] * q[0];
    double __temp_244 = __temp_245 + __temp_246;
    double __temp_243 = 2.00000000000000 * __temp_244 * p[1];
    double __temp_231 = __temp_232 + __temp_233 + __temp_239 + __temp_243;
    double __temp_230 = Math.pow(__temp_231, -1.00000000000000);
    double __temp_189 = -2.00000000000000 * __temp_190 * __temp_207 * __temp_210 * __temp_227 * __temp_230;
    double __temp_250 = -1.00000000000000 * imgP[0];
    double __temp_255 = Math.pow(q[1], 2.00000000000000);
    double __temp_256 = Math.pow(q[2], 2.00000000000000);
    double __temp_254 = __temp_255 + __temp_256;
    double __temp_253 = -2.00000000000000 * __temp_254;
    double __temp_252 = 1.00000000000000 + __temp_253;
    double __temp_251 = __temp_252 * p[0];
    double __temp_259 = q[0] * q[1];
    double __temp_260 = -1.00000000000000 * q[2] * q[3];
    double __temp_258 = __temp_259 + __temp_260;
    double __temp_257 = 2.00000000000000 * __temp_258 * p[1];
    double __temp_263 = q[2] * q[0];
    double __temp_264 = q[3] * q[1];
    double __temp_262 = __temp_263 + __temp_264;
    double __temp_261 = 2.00000000000000 * __temp_262 * p[2];
    double __temp_249 = __temp_250 + __temp_251 + __temp_257 + __temp_261;
    double __temp_248 = Math.pow(__temp_249, 2.00000000000000);
    double __temp_266 = -4.00000000000000 * q[2] * p[0];
    double __temp_267 = -2.00000000000000 * q[3] * p[1];
    double __temp_268 = 2.00000000000000 * q[0] * p[2];
    double __temp_265 = __temp_266 + __temp_267 + __temp_268;
    double __temp_271 = -1.00000000000000 * imgP[0];
    double __temp_276 = Math.pow(q[1], 2.00000000000000);
    double __temp_277 = Math.pow(q[2], 2.00000000000000);
    double __temp_275 = __temp_276 + __temp_277;
    double __temp_274 = -2.00000000000000 * __temp_275;
    double __temp_273 = 1.00000000000000 + __temp_274;
    double __temp_272 = __temp_273 * p[0];
    double __temp_280 = q[0] * q[1];
    double __temp_281 = -1.00000000000000 * q[2] * q[3];
    double __temp_279 = __temp_280 + __temp_281;
    double __temp_278 = 2.00000000000000 * __temp_279 * p[1];
    double __temp_284 = q[2] * q[0];
    double __temp_285 = q[3] * q[1];
    double __temp_283 = __temp_284 + __temp_285;
    double __temp_282 = 2.00000000000000 * __temp_283 * p[2];
    double __temp_270 = __temp_271 + __temp_272 + __temp_278 + __temp_282;
    double __temp_269 = Math.pow(__temp_270, -1.00000000000000);
    double __temp_287 = -2.00000000000000 * q[2] * p[1];
    double __temp_288 = 2.00000000000000 * q[1] * p[2];
    double __temp_286 = __temp_287 + __temp_288;
    double __temp_291 = -1.00000000000000 * imgP[0];
    double __temp_296 = Math.pow(q[1], 2.00000000000000);
    double __temp_297 = Math.pow(q[2], 2.00000000000000);
    double __temp_295 = __temp_296 + __temp_297;
    double __temp_294 = -2.00000000000000 * __temp_295;
    double __temp_293 = 1.00000000000000 + __temp_294;
    double __temp_292 = __temp_293 * p[0];
    double __temp_300 = q[0] * q[1];
    double __temp_301 = -1.00000000000000 * q[2] * q[3];
    double __temp_299 = __temp_300 + __temp_301;
    double __temp_298 = 2.00000000000000 * __temp_299 * p[1];
    double __temp_304 = q[2] * q[0];
    double __temp_305 = q[3] * q[1];
    double __temp_303 = __temp_304 + __temp_305;
    double __temp_302 = 2.00000000000000 * __temp_303 * p[2];
    double __temp_290 = __temp_291 + __temp_292 + __temp_298 + __temp_302;
    double __temp_289 = Math.pow(__temp_290, -1.00000000000000);
    double __temp_247 = 4.00000000000000 * __temp_248 * __temp_265 * __temp_269 * __temp_286 * __temp_289;
    double __temp_309 = -1.00000000000000 * imgP[1];
    double __temp_314 = Math.pow(q[0], 2.00000000000000);
    double __temp_315 = Math.pow(q[2], 2.00000000000000);
    double __temp_313 = __temp_314 + __temp_315;
    double __temp_312 = -2.00000000000000 * __temp_313;
    double __temp_311 = 1.00000000000000 + __temp_312;
    double __temp_310 = __temp_311 * p[1];
    double __temp_318 = q[0] * q[1];
    double __temp_319 = q[2] * q[3];
    double __temp_317 = __temp_318 + __temp_319;
    double __temp_316 = 2.00000000000000 * __temp_317 * p[0];
    double __temp_322 = q[2] * q[1];
    double __temp_323 = -1.00000000000000 * q[3] * q[0];
    double __temp_321 = __temp_322 + __temp_323;
    double __temp_320 = 2.00000000000000 * __temp_321 * p[2];
    double __temp_308 = __temp_309 + __temp_310 + __temp_316 + __temp_320;
    double __temp_307 = Math.pow(__temp_308, 2.00000000000000);
    double __temp_325 = -4.00000000000000 * q[2] * p[1];
    double __temp_326 = 2.00000000000000 * q[1] * p[2];
    double __temp_327 = 2.00000000000000 * q[3] * p[0];
    double __temp_324 = __temp_325 + __temp_326 + __temp_327;
    double __temp_330 = -1.00000000000000 * imgP[1];
    double __temp_335 = Math.pow(q[0], 2.00000000000000);
    double __temp_336 = Math.pow(q[2], 2.00000000000000);
    double __temp_334 = __temp_335 + __temp_336;
    double __temp_333 = -2.00000000000000 * __temp_334;
    double __temp_332 = 1.00000000000000 + __temp_333;
    double __temp_331 = __temp_332 * p[1];
    double __temp_339 = q[0] * q[1];
    double __temp_340 = q[2] * q[3];
    double __temp_338 = __temp_339 + __temp_340;
    double __temp_337 = 2.00000000000000 * __temp_338 * p[0];
    double __temp_343 = q[2] * q[1];
    double __temp_344 = -1.00000000000000 * q[3] * q[0];
    double __temp_342 = __temp_343 + __temp_344;
    double __temp_341 = 2.00000000000000 * __temp_342 * p[2];
    double __temp_329 = __temp_330 + __temp_331 + __temp_337 + __temp_341;
    double __temp_328 = Math.pow(__temp_329, -1.00000000000000);
    double __temp_346 = -2.00000000000000 * q[0] * p[2];
    double __temp_347 = 2.00000000000000 * q[2] * p[0];
    double __temp_345 = __temp_346 + __temp_347;
    double __temp_350 = -1.00000000000000 * imgP[1];
    double __temp_355 = Math.pow(q[0], 2.00000000000000);
    double __temp_356 = Math.pow(q[2], 2.00000000000000);
    double __temp_354 = __temp_355 + __temp_356;
    double __temp_353 = -2.00000000000000 * __temp_354;
    double __temp_352 = 1.00000000000000 + __temp_353;
    double __temp_351 = __temp_352 * p[1];
    double __temp_359 = q[0] * q[1];
    double __temp_360 = q[2] * q[3];
    double __temp_358 = __temp_359 + __temp_360;
    double __temp_357 = 2.00000000000000 * __temp_358 * p[0];
    double __temp_363 = q[2] * q[1];
    double __temp_364 = -1.00000000000000 * q[3] * q[0];
    double __temp_362 = __temp_363 + __temp_364;
    double __temp_361 = 2.00000000000000 * __temp_362 * p[2];
    double __temp_349 = __temp_350 + __temp_351 + __temp_357 + __temp_361;
    double __temp_348 = Math.pow(__temp_349, -1.00000000000000);
    double __temp_306 = 4.00000000000000 * __temp_307 * __temp_324 * __temp_328 * __temp_345 * __temp_348;
    double __temp_368 = -1.00000000000000 * imgP[2];
    double __temp_373 = Math.pow(q[0], 2.00000000000000);
    double __temp_374 = Math.pow(q[1], 2.00000000000000);
    double __temp_372 = __temp_373 + __temp_374;
    double __temp_371 = -2.00000000000000 * __temp_372;
    double __temp_370 = 1.00000000000000 + __temp_371;
    double __temp_369 = __temp_370 * p[2];
    double __temp_377 = q[2] * q[0];
    double __temp_378 = -1.00000000000000 * q[3] * q[1];
    double __temp_376 = __temp_377 + __temp_378;
    double __temp_375 = 2.00000000000000 * __temp_376 * p[0];
    double __temp_381 = q[2] * q[1];
    double __temp_382 = q[3] * q[0];
    double __temp_380 = __temp_381 + __temp_382;
    double __temp_379 = 2.00000000000000 * __temp_380 * p[1];
    double __temp_367 = __temp_368 + __temp_369 + __temp_375 + __temp_379;
    double __temp_366 = Math.pow(__temp_367, 2.00000000000000);
    double __temp_384 = 2.00000000000000 * q[0] * p[0];
    double __temp_385 = 2.00000000000000 * q[1] * p[1];
    double __temp_383 = __temp_384 + __temp_385;
    double __temp_388 = -1.00000000000000 * imgP[2];
    double __temp_393 = Math.pow(q[0], 2.00000000000000);
    double __temp_394 = Math.pow(q[1], 2.00000000000000);
    double __temp_392 = __temp_393 + __temp_394;
    double __temp_391 = -2.00000000000000 * __temp_392;
    double __temp_390 = 1.00000000000000 + __temp_391;
    double __temp_389 = __temp_390 * p[2];
    double __temp_397 = q[2] * q[0];
    double __temp_398 = -1.00000000000000 * q[3] * q[1];
    double __temp_396 = __temp_397 + __temp_398;
    double __temp_395 = 2.00000000000000 * __temp_396 * p[0];
    double __temp_401 = q[2] * q[1];
    double __temp_402 = q[3] * q[0];
    double __temp_400 = __temp_401 + __temp_402;
    double __temp_399 = 2.00000000000000 * __temp_400 * p[1];
    double __temp_387 = __temp_388 + __temp_389 + __temp_395 + __temp_399;
    double __temp_386 = Math.pow(__temp_387, -1.00000000000000);
    double __temp_404 = -2.00000000000000 * q[1] * p[0];
    double __temp_405 = 2.00000000000000 * q[0] * p[1];
    double __temp_403 = __temp_404 + __temp_405;
    double __temp_408 = -1.00000000000000 * imgP[2];
    double __temp_413 = Math.pow(q[0], 2.00000000000000);
    double __temp_414 = Math.pow(q[1], 2.00000000000000);
    double __temp_412 = __temp_413 + __temp_414;
    double __temp_411 = -2.00000000000000 * __temp_412;
    double __temp_410 = 1.00000000000000 + __temp_411;
    double __temp_409 = __temp_410 * p[2];
    double __temp_417 = q[2] * q[0];
    double __temp_418 = -1.00000000000000 * q[3] * q[1];
    double __temp_416 = __temp_417 + __temp_418;
    double __temp_415 = 2.00000000000000 * __temp_416 * p[0];
    double __temp_421 = q[2] * q[1];
    double __temp_422 = q[3] * q[0];
    double __temp_420 = __temp_421 + __temp_422;
    double __temp_419 = 2.00000000000000 * __temp_420 * p[1];
    double __temp_407 = __temp_408 + __temp_409 + __temp_415 + __temp_419;
    double __temp_406 = Math.pow(__temp_407, -1.00000000000000);
    double __temp_365 = 4.00000000000000 * __temp_366 * __temp_383 * __temp_386 * __temp_403 * __temp_406;
    double __temp_0 = __temp_1 + __temp_36 + __temp_71 + __temp_130 + __temp_189 + __temp_247 + __temp_306 + __temp_365;
    return __temp_0;
  }

  public static double partialDerivative_3_3(double[] q, double[] p, double[] imgP) {
    double __temp_4 = -1.00000000000000 * imgP[0];
    double __temp_9 = Math.pow(q[1], 2.00000000000000);
    double __temp_10 = Math.pow(q[2], 2.00000000000000);
    double __temp_8 = __temp_9 + __temp_10;
    double __temp_7 = -2.00000000000000 * __temp_8;
    double __temp_6 = 1.00000000000000 + __temp_7;
    double __temp_5 = __temp_6 * p[0];
    double __temp_13 = q[0] * q[1];
    double __temp_14 = -1.00000000000000 * q[3] * q[2];
    double __temp_12 = __temp_13 + __temp_14;
    double __temp_11 = 2.00000000000000 * __temp_12 * p[1];
    double __temp_17 = q[0] * q[2];
    double __temp_18 = q[3] * q[1];
    double __temp_16 = __temp_17 + __temp_18;
    double __temp_15 = 2.00000000000000 * __temp_16 * p[2];
    double __temp_3 = __temp_4 + __temp_5 + __temp_11 + __temp_15;
    double __temp_2 = Math.pow(__temp_3, 2.00000000000000);
    double __temp_20 = -2.00000000000000 * q[2] * p[1];
    double __temp_21 = 2.00000000000000 * q[1] * p[2];
    double __temp_19 = __temp_20 + __temp_21;
    double __temp_24 = -1.00000000000000 * imgP[0];
    double __temp_29 = Math.pow(q[1], 2.00000000000000);
    double __temp_30 = Math.pow(q[2], 2.00000000000000);
    double __temp_28 = __temp_29 + __temp_30;
    double __temp_27 = -2.00000000000000 * __temp_28;
    double __temp_26 = 1.00000000000000 + __temp_27;
    double __temp_25 = __temp_26 * p[0];
    double __temp_33 = q[0] * q[1];
    double __temp_34 = -1.00000000000000 * q[3] * q[2];
    double __temp_32 = __temp_33 + __temp_34;
    double __temp_31 = 2.00000000000000 * __temp_32 * p[1];
    double __temp_37 = q[0] * q[2];
    double __temp_38 = q[3] * q[1];
    double __temp_36 = __temp_37 + __temp_38;
    double __temp_35 = 2.00000000000000 * __temp_36 * p[2];
    double __temp_23 = __temp_24 + __temp_25 + __temp_31 + __temp_35;
    double __temp_22 = Math.pow(__temp_23, -1.00000000000000);
    double __temp_40 = -2.00000000000000 * q[2] * p[1];
    double __temp_41 = 2.00000000000000 * q[1] * p[2];
    double __temp_39 = __temp_40 + __temp_41;
    double __temp_44 = -1.00000000000000 * imgP[0];
    double __temp_49 = Math.pow(q[1], 2.00000000000000);
    double __temp_50 = Math.pow(q[2], 2.00000000000000);
    double __temp_48 = __temp_49 + __temp_50;
    double __temp_47 = -2.00000000000000 * __temp_48;
    double __temp_46 = 1.00000000000000 + __temp_47;
    double __temp_45 = __temp_46 * p[0];
    double __temp_53 = q[0] * q[1];
    double __temp_54 = -1.00000000000000 * q[3] * q[2];
    double __temp_52 = __temp_53 + __temp_54;
    double __temp_51 = 2.00000000000000 * __temp_52 * p[1];
    double __temp_57 = q[0] * q[2];
    double __temp_58 = q[3] * q[1];
    double __temp_56 = __temp_57 + __temp_58;
    double __temp_55 = 2.00000000000000 * __temp_56 * p[2];
    double __temp_43 = __temp_44 + __temp_45 + __temp_51 + __temp_55;
    double __temp_42 = Math.pow(__temp_43, -1.00000000000000);
    double __temp_1 = 2.00000000000000 * __temp_2 * __temp_19 * __temp_22 * __temp_39 * __temp_42;
    double __temp_62 = -1.00000000000000 * imgP[1];
    double __temp_67 = Math.pow(q[0], 2.00000000000000);
    double __temp_68 = Math.pow(q[2], 2.00000000000000);
    double __temp_66 = __temp_67 + __temp_68;
    double __temp_65 = -2.00000000000000 * __temp_66;
    double __temp_64 = 1.00000000000000 + __temp_65;
    double __temp_63 = __temp_64 * p[1];
    double __temp_71 = q[0] * q[1];
    double __temp_72 = q[3] * q[2];
    double __temp_70 = __temp_71 + __temp_72;
    double __temp_69 = 2.00000000000000 * __temp_70 * p[0];
    double __temp_75 = q[1] * q[2];
    double __temp_76 = -1.00000000000000 * q[3] * q[0];
    double __temp_74 = __temp_75 + __temp_76;
    double __temp_73 = 2.00000000000000 * __temp_74 * p[2];
    double __temp_61 = __temp_62 + __temp_63 + __temp_69 + __temp_73;
    double __temp_60 = Math.pow(__temp_61, 2.00000000000000);
    double __temp_78 = -2.00000000000000 * q[0] * p[2];
    double __temp_79 = 2.00000000000000 * q[2] * p[0];
    double __temp_77 = __temp_78 + __temp_79;
    double __temp_82 = -1.00000000000000 * imgP[1];
    double __temp_87 = Math.pow(q[0], 2.00000000000000);
    double __temp_88 = Math.pow(q[2], 2.00000000000000);
    double __temp_86 = __temp_87 + __temp_88;
    double __temp_85 = -2.00000000000000 * __temp_86;
    double __temp_84 = 1.00000000000000 + __temp_85;
    double __temp_83 = __temp_84 * p[1];
    double __temp_91 = q[0] * q[1];
    double __temp_92 = q[3] * q[2];
    double __temp_90 = __temp_91 + __temp_92;
    double __temp_89 = 2.00000000000000 * __temp_90 * p[0];
    double __temp_95 = q[1] * q[2];
    double __temp_96 = -1.00000000000000 * q[3] * q[0];
    double __temp_94 = __temp_95 + __temp_96;
    double __temp_93 = 2.00000000000000 * __temp_94 * p[2];
    double __temp_81 = __temp_82 + __temp_83 + __temp_89 + __temp_93;
    double __temp_80 = Math.pow(__temp_81, -1.00000000000000);
    double __temp_98 = -2.00000000000000 * q[0] * p[2];
    double __temp_99 = 2.00000000000000 * q[2] * p[0];
    double __temp_97 = __temp_98 + __temp_99;
    double __temp_102 = -1.00000000000000 * imgP[1];
    double __temp_107 = Math.pow(q[0], 2.00000000000000);
    double __temp_108 = Math.pow(q[2], 2.00000000000000);
    double __temp_106 = __temp_107 + __temp_108;
    double __temp_105 = -2.00000000000000 * __temp_106;
    double __temp_104 = 1.00000000000000 + __temp_105;
    double __temp_103 = __temp_104 * p[1];
    double __temp_111 = q[0] * q[1];
    double __temp_112 = q[3] * q[2];
    double __temp_110 = __temp_111 + __temp_112;
    double __temp_109 = 2.00000000000000 * __temp_110 * p[0];
    double __temp_115 = q[1] * q[2];
    double __temp_116 = -1.00000000000000 * q[3] * q[0];
    double __temp_114 = __temp_115 + __temp_116;
    double __temp_113 = 2.00000000000000 * __temp_114 * p[2];
    double __temp_101 = __temp_102 + __temp_103 + __temp_109 + __temp_113;
    double __temp_100 = Math.pow(__temp_101, -1.00000000000000);
    double __temp_59 = 2.00000000000000 * __temp_60 * __temp_77 * __temp_80 * __temp_97 * __temp_100;
    double __temp_120 = -1.00000000000000 * imgP[2];
    double __temp_125 = Math.pow(q[0], 2.00000000000000);
    double __temp_126 = Math.pow(q[1], 2.00000000000000);
    double __temp_124 = __temp_125 + __temp_126;
    double __temp_123 = -2.00000000000000 * __temp_124;
    double __temp_122 = 1.00000000000000 + __temp_123;
    double __temp_121 = __temp_122 * p[2];
    double __temp_129 = q[0] * q[2];
    double __temp_130 = -1.00000000000000 * q[3] * q[1];
    double __temp_128 = __temp_129 + __temp_130;
    double __temp_127 = 2.00000000000000 * __temp_128 * p[0];
    double __temp_133 = q[1] * q[2];
    double __temp_134 = q[3] * q[0];
    double __temp_132 = __temp_133 + __temp_134;
    double __temp_131 = 2.00000000000000 * __temp_132 * p[1];
    double __temp_119 = __temp_120 + __temp_121 + __temp_127 + __temp_131;
    double __temp_118 = Math.pow(__temp_119, 2.00000000000000);
    double __temp_136 = -2.00000000000000 * q[1] * p[0];
    double __temp_137 = 2.00000000000000 * q[0] * p[1];
    double __temp_135 = __temp_136 + __temp_137;
    double __temp_140 = -1.00000000000000 * imgP[2];
    double __temp_145 = Math.pow(q[0], 2.00000000000000);
    double __temp_146 = Math.pow(q[1], 2.00000000000000);
    double __temp_144 = __temp_145 + __temp_146;
    double __temp_143 = -2.00000000000000 * __temp_144;
    double __temp_142 = 1.00000000000000 + __temp_143;
    double __temp_141 = __temp_142 * p[2];
    double __temp_149 = q[0] * q[2];
    double __temp_150 = -1.00000000000000 * q[3] * q[1];
    double __temp_148 = __temp_149 + __temp_150;
    double __temp_147 = 2.00000000000000 * __temp_148 * p[0];
    double __temp_153 = q[1] * q[2];
    double __temp_154 = q[3] * q[0];
    double __temp_152 = __temp_153 + __temp_154;
    double __temp_151 = 2.00000000000000 * __temp_152 * p[1];
    double __temp_139 = __temp_140 + __temp_141 + __temp_147 + __temp_151;
    double __temp_138 = Math.pow(__temp_139, -1.00000000000000);
    double __temp_156 = -2.00000000000000 * q[1] * p[0];
    double __temp_157 = 2.00000000000000 * q[0] * p[1];
    double __temp_155 = __temp_156 + __temp_157;
    double __temp_160 = -1.00000000000000 * imgP[2];
    double __temp_165 = Math.pow(q[0], 2.00000000000000);
    double __temp_166 = Math.pow(q[1], 2.00000000000000);
    double __temp_164 = __temp_165 + __temp_166;
    double __temp_163 = -2.00000000000000 * __temp_164;
    double __temp_162 = 1.00000000000000 + __temp_163;
    double __temp_161 = __temp_162 * p[2];
    double __temp_169 = q[0] * q[2];
    double __temp_170 = -1.00000000000000 * q[3] * q[1];
    double __temp_168 = __temp_169 + __temp_170;
    double __temp_167 = 2.00000000000000 * __temp_168 * p[0];
    double __temp_173 = q[1] * q[2];
    double __temp_174 = q[3] * q[0];
    double __temp_172 = __temp_173 + __temp_174;
    double __temp_171 = 2.00000000000000 * __temp_172 * p[1];
    double __temp_159 = __temp_160 + __temp_161 + __temp_167 + __temp_171;
    double __temp_158 = Math.pow(__temp_159, -1.00000000000000);
    double __temp_117 = 2.00000000000000 * __temp_118 * __temp_135 * __temp_138 * __temp_155 * __temp_158;
    double __temp_0 = __temp_1 + __temp_59 + __temp_117;
    return __temp_0;
  }

  public static double[][] hessian(double[] q, double[] p, double[] imgP) {
    double[][] __temp = new double[4][4];
    __temp[0][0] = partialDerivative_0_0(q, p, imgP);
    __temp[0][1] = partialDerivative_0_1(q, p, imgP);
    __temp[1][0] = __temp[0][1];
    __temp[0][2] = partialDerivative_0_2(q, p, imgP);
    __temp[2][0] = __temp[0][2];
    __temp[0][3] = partialDerivative_0_3(q, p, imgP);
    __temp[3][0] = __temp[0][3];
    __temp[1][1] = partialDerivative_1_1(q, p, imgP);
    __temp[1][2] = partialDerivative_1_2(q, p, imgP);
    __temp[2][1] = __temp[1][2];
    __temp[1][3] = partialDerivative_1_3(q, p, imgP);
    __temp[3][1] = __temp[1][3];
    __temp[2][2] = partialDerivative_2_2(q, p, imgP);
    __temp[2][3] = partialDerivative_2_3(q, p, imgP);
    __temp[3][2] = __temp[2][3];
    __temp[3][3] = partialDerivative_3_3(q, p, imgP);
    return __temp;
  }
}
